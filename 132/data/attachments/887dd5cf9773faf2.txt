[32mINFO    [0m jubilant:_juju.py:237 cli: juju status --model testing --format json
[32mINFO    [0m jubilant:_juju.py:237 cli: juju deploy --model testing identity-platform --channel latest/edge --trust
[32mINFO    [0m jubilant:_juju.py:237 cli: juju remove-application --model testing --no-prompt kratos-external-idp-integrator
[32mINFO    [0m jubilant:_juju.py:237 cli: juju config --model testing kratos enforce_mfa=false
[32mINFO    [0m jubilant:_juju.py:237 cli: juju status --model testing --format json
[32mINFO    [0m jubilant:_juju.py:237 cli: juju deploy --model testing ././netbox-k8s_amd64.charm --config django-debug=false --config 'django-allowed-hosts=*' --resource django-app-image=ghcr.io/canonical/netbox:c7aec5df990a917da4db93e6a56e1dc4d438a3d2-_4.3.6_amd64
[32mINFO    [0m jubilant:_juju.py:237 cli: juju status --model testing --format json
[32mINFO    [0m jubilant:_juju.py:237 cli: juju deploy --model testing redis-k8s --channel edge
[32mINFO    [0m jubilant:_juju.py:237 cli: juju status --model testing --format json
[32mINFO    [0m tests.integration.conftest:conftest.py:350 postgresql-k8s already deployed
[32mINFO    [0m jubilant:_juju.py:237 cli: juju status --model testing --format json
[32mINFO    [0m jubilant:_juju.py:237 cli: juju deploy --model testing minio --channel ckf-1.10/stable --config access-key=test-access-key --config secret-key=test-secret-key --trust
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
+ .model.name = 'testing'
+ .model.type = 'caas'
+ .model.controller = 'github-pr-4e773-k8s'
+ .model.cloud = 'k8s'
+ .model.version = '3.6.11'
+ .model.model_status.current = 'available'
+ .apps['hydra'].charm = 'hydra'
+ .apps['hydra'].charm_origin = 'charmhub'
+ .apps['hydra'].charm_name = 'hydra'
+ .apps['hydra'].charm_rev = 339
+ .apps['hydra'].exposed = False
+ .apps['hydra'].base.name = 'ubuntu'
+ .apps['hydra'].base.channel = '22.04'
+ .apps['hydra'].charm_channel = 'latest/edge'
+ .apps['hydra'].scale = 1
+ .apps['hydra'].app_status.current = 'waiting'
+ .apps['hydra'].app_status.message = 'installing agent'
+ .apps['hydra'].relations['admin-ingress'][0].related_app = 'traefik-admin'
+ .apps['hydra'].relations['admin-ingress'][0].interface = 'ingress'
+ .apps['hydra'].relations['admin-ingress'][0].scope = 'global'
+ .apps['hydra'].relations['hydra'][0].related_app = 'hydra'
+ .apps['hydra'].relations['hydra'][0].interface = 'hydra_peers'
+ .apps['hydra'].relations['hydra'][0].scope = 'global'
+ .apps['hydra'].relations['hydra-endpoint-info'][0].related_app = 'identity-platform-login-ui-operator'
+ .apps['hydra'].relations['hydra-endpoint-info'][0].interface = 'hydra_endpoints'
+ .apps['hydra'].relations['hydra-endpoint-info'][0].scope = 'global'
+ .apps['hydra'].relations['hydra-endpoint-info'][1].related_app = 'kratos'
+ .apps['hydra'].relations['hydra-endpoint-info'][1].interface = 'hydra_endpoints'
+ .apps['hydra'].relations['hydra-endpoint-info'][1].scope = 'global'
+ .apps['hydra'].relations['pg-database'][0].related_app = 'postgresql-k8s'
+ .apps['hydra'].relations['pg-database'][0].interface = 'postgresql_client'
+ .apps['hydra'].relations['pg-database'][0].scope = 'global'
+ .apps['hydra'].relations['public-ingress'][0].related_app = 'traefik-public'
+ .apps['hydra'].relations['public-ingress'][0].interface = 'ingress'
+ .apps['hydra'].relations['public-ingress'][0].scope = 'global'
+ .apps['hydra'].relations['ui-endpoint-info'][0].related_app = 'identity-platform-login-ui-operator'
+ .apps['hydra'].relations['ui-endpoint-info'][0].interface = 'login_ui_endpoints'
+ .apps['hydra'].relations['ui-endpoint-info'][0].scope = 'global'
+ .apps['hydra'].units['hydra/0'].workload_status.current = 'waiting'
+ .apps['hydra'].units['hydra/0'].workload_status.message = 'installing agent'
+ .apps['hydra'].units['hydra/0'].juju_status.current = 'allocating'
+ .apps['hydra'].endpoint_bindings[''] = 'alpha'
+ .apps['hydra'].endpoint_bindings['admin-ingress'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['hydra'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['hydra-endpoint-info'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['internal-ingress'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['logging'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['oauth'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['pg-database'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['public-ingress'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['ui-endpoint-info'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].charm = 'identity-platform-login-ui-operator'
+ .apps['identity-platform-login-ui-operator'].charm_origin = 'charmhub'
+ .apps['identity-platform-login-ui-operator'].charm_name = 'identity-platform-login-ui-operator'
+ .apps['identity-platform-login-ui-operator'].charm_rev = 146
+ .apps['identity-platform-login-ui-operator'].exposed = False
+ .apps['identity-platform-login-ui-operator'].base.name = 'ubuntu'
+ .apps['identity-platform-login-ui-operator'].base.channel = '22.04'
+ .apps['identity-platform-login-ui-operator'].charm_channel = 'latest/edge'
+ .apps['identity-platform-login-ui-operator'].scale = 1
+ .apps['identity-platform-login-ui-operator'].app_status.current = 'waiting'
+ .apps['identity-platform-login-ui-operator'].app_status.message = 'installing agent'
+ .apps['identity-platform-login-ui-operator'].relations['hydra-endpoint-info'][0].related_app = 'hydra'
+ .apps['identity-platform-login-ui-operator'].relations['hydra-endpoint-info'][0].interface = 'hydra_endpoints'
+ .apps['identity-platform-login-ui-operator'].relations['hydra-endpoint-info'][0].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].relations['identity-platform-login-ui'][0].related_app = 'identity-platform-login-ui-operator'
+ .apps['identity-platform-login-ui-operator'].relations['identity-platform-login-ui'][0].interface = 'identity_platform_login_ui_peers'
+ .apps['identity-platform-login-ui-operator'].relations['identity-platform-login-ui'][0].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].relations['ingress'][0].related_app = 'traefik-public'
+ .apps['identity-platform-login-ui-operator'].relations['ingress'][0].interface = 'ingress'
+ .apps['identity-platform-login-ui-operator'].relations['ingress'][0].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].relations['kratos-info'][0].related_app = 'kratos'
+ .apps['identity-platform-login-ui-operator'].relations['kratos-info'][0].interface = 'kratos_info'
+ .apps['identity-platform-login-ui-operator'].relations['kratos-info'][0].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][0].related_app = 'hydra'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][0].interface = 'login_ui_endpoints'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][0].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][1].related_app = 'kratos'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][1].interface = 'login_ui_endpoints'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][1].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.current = 'waiting'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.message = 'installing agent'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.current = 'allocating'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings[''] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['hydra-endpoint-info'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['identity-platform-login-ui'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['kratos-info'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['logging'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['ui-endpoint-info'] = 'alpha'
+ .apps['kratos'].charm = 'kratos'
+ .apps['kratos'].charm_origin = 'charmhub'
+ .apps['kratos'].charm_name = 'kratos'
+ .apps['kratos'].charm_rev = 500
+ .apps['kratos'].exposed = False
+ .apps['kratos'].base.name = 'ubuntu'
+ .apps['kratos'].base.channel = '22.04'
+ .apps['kratos'].charm_channel = 'latest/edge'
+ .apps['kratos'].scale = 1
+ .apps['kratos'].app_status.current = 'waiting'
+ .apps['kratos'].app_status.message = 'installing agent'
+ .apps['kratos'].relations['admin-ingress'][0].related_app = 'traefik-admin'
+ .apps['kratos'].relations['admin-ingress'][0].interface = 'ingress'
+ .apps['kratos'].relations['admin-ingress'][0].scope = 'global'
+ .apps['kratos'].relations['hydra-endpoint-info'][0].related_app = 'hydra'
+ .apps['kratos'].relations['hydra-endpoint-info'][0].interface = 'hydra_endpoints'
+ .apps['kratos'].relations['hydra-endpoint-info'][0].scope = 'global'
+ .apps['kratos'].relations['kratos-info'][0].related_app = 'identity-platform-login-ui-operator'
+ .apps['kratos'].relations['kratos-info'][0].interface = 'kratos_info'
+ .apps['kratos'].relations['kratos-info'][0].scope = 'global'
+ .apps['kratos'].relations['kratos-peers'][0].related_app = 'kratos'
+ .apps['kratos'].relations['kratos-peers'][0].interface = 'kratos-peers'
+ .apps['kratos'].relations['kratos-peers'][0].scope = 'global'
+ .apps['kratos'].relations['pg-database'][0].related_app = 'postgresql-k8s'
+ .apps['kratos'].relations['pg-database'][0].interface = 'postgresql_client'
+ .apps['kratos'].relations['pg-database'][0].scope = 'global'
+ .apps['kratos'].relations['public-ingress'][0].related_app = 'traefik-public'
+ .apps['kratos'].relations['public-ingress'][0].interface = 'ingress'
+ .apps['kratos'].relations['public-ingress'][0].scope = 'global'
+ .apps['kratos'].relations['ui-endpoint-info'][0].related_app = 'identity-platform-login-ui-operator'
+ .apps['kratos'].relations['ui-endpoint-info'][0].interface = 'login_ui_endpoints'
+ .apps['kratos'].relations['ui-endpoint-info'][0].scope = 'global'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'waiting'
+ .apps['kratos'].units['kratos/0'].workload_status.message = 'installing agent'
+ .apps['kratos'].units['kratos/0'].juju_status.current = 'allocating'
+ .apps['kratos'].endpoint_bindings[''] = 'alpha'
+ .apps['kratos'].endpoint_bindings['admin-ingress'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['hydra-endpoint-info'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['internal-ingress'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['kratos-external-idp'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['kratos-info'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['kratos-peers'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['logging'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['pg-database'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['public-ingress'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['smtp'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['ui-endpoint-info'] = 'alpha'
+ .apps['kratos-external-idp-integrator'].charm = 'kratos-external-idp-integrator'
+ .apps['kratos-external-idp-integrator'].charm_origin = 'charmhub'
+ .apps['kratos-external-idp-integrator'].charm_name = 'kratos-external-idp-integrator'
+ .apps['kratos-external-idp-integrator'].charm_rev = 245
+ .apps['kratos-external-idp-integrator'].exposed = False
+ .apps['kratos-external-idp-integrator'].base.name = 'ubuntu'
+ .apps['kratos-external-idp-integrator'].base.channel = '22.04'
+ .apps['kratos-external-idp-integrator'].charm_channel = 'latest/edge'
+ .apps['kratos-external-idp-integrator'].scale = 1
+ .apps['kratos-external-idp-integrator'].life = 'dead'
+ .apps['kratos-external-idp-integrator'].app_status.current = 'waiting'
+ .apps['kratos-external-idp-integrator'].app_status.message = 'installing agent'
+ .apps['kratos-external-idp-integrator'].endpoint_bindings[''] = 'alpha'
+ .apps['kratos-external-idp-integrator'].endpoint_bindings['kratos-external-idp'] = 'alpha'
+ .apps['minio'].charm = 'minio'
+ .apps['minio'].charm_origin = 'charmhub'
+ .apps['minio'].charm_name = 'minio'
+ .apps['minio'].charm_rev = 583
+ .apps['minio'].exposed = False
+ .apps['minio'].base.name = 'ubuntu'
+ .apps['minio'].base.channel = '20.04'
+ .apps['minio'].charm_channel = 'ckf-1.10/stable'
+ .apps['minio'].scale = 1
+ .apps['minio'].app_status.current = 'waiting'
+ .apps['minio'].app_status.message = 'installing agent'
+ .apps['minio'].units['minio/0'].workload_status.current = 'waiting'
+ .apps['minio'].units['minio/0'].workload_status.message = 'installing agent'
+ .apps['minio'].units['minio/0'].juju_status.current = 'allocating'
+ .apps['minio'].endpoint_bindings[''] = 'alpha'
+ .apps['minio'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['minio'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['minio'].endpoint_bindings['object-storage'] = 'alpha'
+ .apps['netbox-k8s'].charm = 'local:netbox-k8s-0'
+ .apps['netbox-k8s'].charm_origin = 'local'
+ .apps['netbox-k8s'].charm_name = 'netbox-k8s'
+ .apps['netbox-k8s'].charm_rev = 0
+ .apps['netbox-k8s'].exposed = False
+ .apps['netbox-k8s'].base.name = 'ubuntu'
+ .apps['netbox-k8s'].base.channel = '24.04'
+ .apps['netbox-k8s'].scale = 1
+ .apps['netbox-k8s'].app_status.current = 'waiting'
+ .apps['netbox-k8s'].app_status.message = 'installing agent'
+ .apps['netbox-k8s'].relations['secret-storage'][0].related_app = 'netbox-k8s'
+ .apps['netbox-k8s'].relations['secret-storage'][0].interface = 'secret-storage'
+ .apps['netbox-k8s'].relations['secret-storage'][0].scope = 'global'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.current = 'waiting'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.message = 'installing agent'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.current = 'allocating'
+ .apps['netbox-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['oidc'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['postgresql'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['redis'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['s3'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['saml'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['secret-storage'] = 'alpha'
+ .apps['postgresql-k8s'].charm = 'postgresql-k8s'
+ .apps['postgresql-k8s'].charm_origin = 'charmhub'
+ .apps['postgresql-k8s'].charm_name = 'postgresql-k8s'
+ .apps['postgresql-k8s'].charm_rev = 495
+ .apps['postgresql-k8s'].exposed = False
+ .apps['postgresql-k8s'].base.name = 'ubuntu'
+ .apps['postgresql-k8s'].base.channel = '22.04'
+ .apps['postgresql-k8s'].charm_channel = '14/stable'
+ .apps['postgresql-k8s'].scale = 1
+ .apps['postgresql-k8s'].app_status.current = 'waiting'
+ .apps['postgresql-k8s'].app_status.message = 'installing agent'
+ .apps['postgresql-k8s'].relations['database'][0].related_app = 'hydra'
+ .apps['postgresql-k8s'].relations['database'][0].interface = 'postgresql_client'
+ .apps['postgresql-k8s'].relations['database'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['database'][1].related_app = 'kratos'
+ .apps['postgresql-k8s'].relations['database'][1].interface = 'postgresql_client'
+ .apps['postgresql-k8s'].relations['database'][1].scope = 'global'
+ .apps['postgresql-k8s'].relations['database-peers'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['database-peers'][0].interface = 'postgresql_peers'
+ .apps['postgresql-k8s'].relations['database-peers'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['restart'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['restart'][0].interface = 'rolling_op'
+ .apps['postgresql-k8s'].relations['restart'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['upgrade'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['upgrade'][0].interface = 'upgrade'
+ .apps['postgresql-k8s'].relations['upgrade'][0].scope = 'global'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'waiting'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'installing agent'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'allocating'
+ .apps['postgresql-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['database'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['database-peers'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['db'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['db-admin'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['replication'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['replication-offer'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['restart'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['s3-parameters'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['upgrade'] = 'alpha'
+ .apps['redis-k8s'].charm = 'redis-k8s'
+ .apps['redis-k8s'].charm_origin = 'charmhub'
+ .apps['redis-k8s'].charm_name = 'redis-k8s'
+ .apps['redis-k8s'].charm_rev = 42
+ .apps['redis-k8s'].exposed = False
+ .apps['redis-k8s'].base.name = 'ubuntu'
+ .apps['redis-k8s'].base.channel = '22.04'
+ .apps['redis-k8s'].charm_channel = 'latest/edge'
+ .apps['redis-k8s'].scale = 1
+ .apps['redis-k8s'].app_status.current = 'waiting'
+ .apps['redis-k8s'].app_status.message = 'installing agent'
+ .apps['redis-k8s'].relations['redis-peers'][0].related_app = 'redis-k8s'
+ .apps['redis-k8s'].relations['redis-peers'][0].interface = 'redis-peers'
+ .apps['redis-k8s'].relations['redis-peers'][0].scope = 'global'
+ .apps['redis-k8s'].units['redis-k8s/0'].workload_status.current = 'waiting'
+ .apps['redis-k8s'].units['redis-k8s/0'].workload_status.message = 'installing agent'
+ .apps['redis-k8s'].units['redis-k8s/0'].juju_status.current = 'allocating'
+ .apps['redis-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['redis-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['redis-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['redis-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['redis-k8s'].endpoint_bindings['redis'] = 'alpha'
+ .apps['redis-k8s'].endpoint_bindings['redis-peers'] = 'alpha'
+ .apps['self-signed-certificates'].charm = 'self-signed-certificates'
+ .apps['self-signed-certificates'].charm_origin = 'charmhub'
+ .apps['self-signed-certificates'].charm_name = 'self-signed-certificates'
+ .apps['self-signed-certificates'].charm_rev = 155
+ .apps['self-signed-certificates'].exposed = False
+ .apps['self-signed-certificates'].base.name = 'ubuntu'
+ .apps['self-signed-certificates'].base.channel = '22.04'
+ .apps['self-signed-certificates'].charm_channel = 'latest/stable'
+ .apps['self-signed-certificates'].scale = 1
+ .apps['self-signed-certificates'].app_status.current = 'waiting'
+ .apps['self-signed-certificates'].app_status.message = 'installing agent'
+ .apps['self-signed-certificates'].relations['certificates'][0].related_app = 'traefik-admin'
+ .apps['self-signed-certificates'].relations['certificates'][0].interface = 'tls-certificates'
+ .apps['self-signed-certificates'].relations['certificates'][0].scope = 'global'
+ .apps['self-signed-certificates'].relations['certificates'][1].related_app = 'traefik-public'
+ .apps['self-signed-certificates'].relations['certificates'][1].interface = 'tls-certificates'
+ .apps['self-signed-certificates'].relations['certificates'][1].scope = 'global'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].workload_status.current = 'waiting'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].workload_status.message = 'installing agent'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.current = 'allocating'
+ .apps['self-signed-certificates'].endpoint_bindings[''] = 'alpha'
+ .apps['self-signed-certificates'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['self-signed-certificates'].endpoint_bindings['send-ca-cert'] = 'alpha'
+ .apps['self-signed-certificates'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['traefik-admin'].charm = 'traefik-k8s'
+ .apps['traefik-admin'].charm_origin = 'charmhub'
+ .apps['traefik-admin'].charm_name = 'traefik-k8s'
+ .apps['traefik-admin'].charm_rev = 176
+ .apps['traefik-admin'].exposed = False
+ .apps['traefik-admin'].base.name = 'ubuntu'
+ .apps['traefik-admin'].base.channel = '20.04'
+ .apps['traefik-admin'].charm_channel = 'latest/stable'
+ .apps['traefik-admin'].scale = 1
+ .apps['traefik-admin'].app_status.current = 'waiting'
+ .apps['traefik-admin'].app_status.message = 'installing agent'
+ .apps['traefik-admin'].relations['certificates'][0].related_app = 'self-signed-certificates'
+ .apps['traefik-admin'].relations['certificates'][0].interface = 'tls-certificates'
+ .apps['traefik-admin'].relations['certificates'][0].scope = 'global'
+ .apps['traefik-admin'].relations['ingress'][0].related_app = 'hydra'
+ .apps['traefik-admin'].relations['ingress'][0].interface = 'ingress'
+ .apps['traefik-admin'].relations['ingress'][0].scope = 'global'
+ .apps['traefik-admin'].relations['ingress'][1].related_app = 'kratos'
+ .apps['traefik-admin'].relations['ingress'][1].interface = 'ingress'
+ .apps['traefik-admin'].relations['ingress'][1].scope = 'global'
+ .apps['traefik-admin'].relations['peers'][0].related_app = 'traefik-admin'
+ .apps['traefik-admin'].relations['peers'][0].interface = 'traefik_peers'
+ .apps['traefik-admin'].relations['peers'][0].scope = 'global'
+ .apps['traefik-admin'].units['traefik-admin/0'].workload_status.current = 'waiting'
+ .apps['traefik-admin'].units['traefik-admin/0'].workload_status.message = 'installing agent'
+ .apps['traefik-admin'].units['traefik-admin/0'].juju_status.current = 'allocating'
+ .apps['traefik-admin'].endpoint_bindings[''] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['experimental-forward-auth'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['ingress-per-unit'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['logging'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['peers'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['traefik-route'] = 'alpha'
+ .apps['traefik-public'].charm = 'traefik-k8s'
+ .apps['traefik-public'].charm_origin = 'charmhub'
+ .apps['traefik-public'].charm_name = 'traefik-k8s'
+ .apps['traefik-public'].charm_rev = 176
+ .apps['traefik-public'].exposed = False
+ .apps['traefik-public'].base.name = 'ubuntu'
+ .apps['traefik-public'].base.channel = '20.04'
+ .apps['traefik-public'].charm_channel = 'latest/stable'
+ .apps['traefik-public'].scale = 1
+ .apps['traefik-public'].app_status.current = 'waiting'
+ .apps['traefik-public'].app_status.message = 'installing agent'
+ .apps['traefik-public'].relations['certificates'][0].related_app = 'self-signed-certificates'
+ .apps['traefik-public'].relations['certificates'][0].interface = 'tls-certificates'
+ .apps['traefik-public'].relations['certificates'][0].scope = 'global'
+ .apps['traefik-public'].relations['ingress'][0].related_app = 'hydra'
+ .apps['traefik-public'].relations['ingress'][0].interface = 'ingress'
+ .apps['traefik-public'].relations['ingress'][0].scope = 'global'
+ .apps['traefik-public'].relations['ingress'][1].related_app = 'identity-platform-login-ui-operator'
+ .apps['traefik-public'].relations['ingress'][1].interface = 'ingress'
+ .apps['traefik-public'].relations['ingress'][1].scope = 'global'
+ .apps['traefik-public'].relations['ingress'][2].related_app = 'kratos'
+ .apps['traefik-public'].relations['ingress'][2].interface = 'ingress'
+ .apps['traefik-public'].relations['ingress'][2].scope = 'global'
+ .apps['traefik-public'].relations['peers'][0].related_app = 'traefik-public'
+ .apps['traefik-public'].relations['peers'][0].interface = 'traefik_peers'
+ .apps['traefik-public'].relations['peers'][0].scope = 'global'
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'waiting'
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.message = 'installing agent'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.current = 'allocating'
+ .apps['traefik-public'].endpoint_bindings[''] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['experimental-forward-auth'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['ingress-per-unit'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['logging'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['peers'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['traefik-route'] = 'alpha'
+ .storage.storage['configurations/1'].kind = 'filesystem'
+ .storage.storage['configurations/1'].status.current = 'pending'
+ .storage.storage['configurations/1'].persistent = False
+ .storage.storage['configurations/1'].life = 'alive'
+ .storage.storage['configurations/1'].attachments.units['traefik-admin/0'].life = 'alive'
+ .storage.storage['configurations/2'].kind = 'filesystem'
+ .storage.storage['configurations/2'].status.current = 'pending'
+ .storage.storage['configurations/2'].persistent = False
+ .storage.storage['configurations/2'].life = 'alive'
+ .storage.storage['configurations/2'].attachments.units['traefik-public/0'].life = 'alive'
+ .storage.storage['database/3'].kind = 'filesystem'
+ .storage.storage['database/3'].status.current = 'pending'
+ .storage.storage['database/3'].persistent = False
+ .storage.storage['database/3'].life = 'alive'
+ .storage.storage['database/3'].attachments.units['redis-k8s/0'].life = 'alive'
+ .storage.storage['minio-data/4'].kind = 'filesystem'
+ .storage.storage['minio-data/4'].status.current = 'pending'
+ .storage.storage['minio-data/4'].persistent = False
+ .storage.storage['minio-data/4'].life = 'alive'
+ .storage.storage['minio-data/4'].attachments.units['minio/0'].life = 'alive'
+ .storage.storage['pgdata/0'].kind = 'filesystem'
+ .storage.storage['pgdata/0'].status.current = 'pending'
+ .storage.storage['pgdata/0'].persistent = False
+ .storage.storage['pgdata/0'].life = 'alive'
+ .storage.storage['pgdata/0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].size = 0
+ .storage.filesystems['0'].volume = '0'
+ .storage.filesystems['0'].storage = 'pgdata/0'
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].mount_point = ''
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].read_only = False
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].life = 'alive'
+ .storage.filesystems['0'].status.current = 'pending'
+ .storage.filesystems['1'].size = 0
+ .storage.filesystems['1'].volume = '1'
+ .storage.filesystems['1'].storage = 'configurations/1'
+ .storage.filesystems['1'].attachments.containers['traefik-admin/0'].mount_point = ''
+ .storage.filesystems['1'].attachments.containers['traefik-admin/0'].read_only = False
+ .storage.filesystems['1'].attachments.containers['traefik-admin/0'].life = 'alive'
+ .storage.filesystems['1'].attachments.units['traefik-admin/0'].life = 'alive'
+ .storage.filesystems['1'].life = 'alive'
+ .storage.filesystems['1'].status.current = 'pending'
+ .storage.filesystems['2'].size = 0
+ .storage.filesystems['2'].volume = '2'
+ .storage.filesystems['2'].storage = 'configurations/2'
+ .storage.filesystems['2'].attachments.containers['traefik-public/0'].mount_point = ''
+ .storage.filesystems['2'].attachments.containers['traefik-public/0'].read_only = False
+ .storage.filesystems['2'].attachments.containers['traefik-public/0'].life = 'alive'
+ .storage.filesystems['2'].attachments.units['traefik-public/0'].life = 'alive'
+ .storage.filesystems['2'].life = 'alive'
+ .storage.filesystems['2'].status.current = 'pending'
+ .storage.filesystems['3'].size = 0
+ .storage.filesystems['3'].volume = '3'
+ .storage.filesystems['3'].storage = 'database/3'
+ .storage.filesystems['3'].attachments.containers['redis-k8s/0'].mount_point = ''
+ .storage.filesystems['3'].attachments.containers['redis-k8s/0'].read_only = False
+ .storage.filesystems['3'].attachments.containers['redis-k8s/0'].life = 'alive'
+ .storage.filesystems['3'].attachments.units['redis-k8s/0'].life = 'alive'
+ .storage.filesystems['3'].life = 'alive'
+ .storage.filesystems['3'].status.current = 'pending'
+ .storage.filesystems['4'].size = 0
+ .storage.filesystems['4'].volume = '4'
+ .storage.filesystems['4'].storage = 'minio-data/4'
+ .storage.filesystems['4'].attachments.containers['minio/0'].mount_point = ''
+ .storage.filesystems['4'].attachments.containers['minio/0'].read_only = False
+ .storage.filesystems['4'].attachments.containers['minio/0'].life = 'alive'
+ .storage.filesystems['4'].attachments.units['minio/0'].life = 'alive'
+ .storage.filesystems['4'].life = 'alive'
+ .storage.filesystems['4'].status.current = 'pending'
+ .storage.volumes['0'].size = 0
+ .storage.volumes['0'].persistent = False
+ .storage.volumes['0'].storage = 'pgdata/0'
+ .storage.volumes['0'].attachments.containers['postgresql-k8s/0'].read_only = False
+ .storage.volumes['0'].attachments.containers['postgresql-k8s/0'].life = 'alive'
+ .storage.volumes['0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.volumes['0'].life = 'alive'
+ .storage.volumes['0'].status.current = 'pending'
+ .storage.volumes['1'].size = 0
+ .storage.volumes['1'].persistent = False
+ .storage.volumes['1'].storage = 'configurations/1'
+ .storage.volumes['1'].attachments.containers['traefik-admin/0'].read_only = False
+ .storage.volumes['1'].attachments.containers['traefik-admin/0'].life = 'alive'
+ .storage.volumes['1'].attachments.units['traefik-admin/0'].life = 'alive'
+ .storage.volumes['1'].life = 'alive'
+ .storage.volumes['1'].status.current = 'pending'
+ .storage.volumes['2'].size = 0
+ .storage.volumes['2'].persistent = False
+ .storage.volumes['2'].storage = 'configurations/2'
+ .storage.volumes['2'].attachments.containers['traefik-public/0'].read_only = False
+ .storage.volumes['2'].attachments.containers['traefik-public/0'].life = 'alive'
+ .storage.volumes['2'].attachments.units['traefik-public/0'].life = 'alive'
+ .storage.volumes['2'].life = 'alive'
+ .storage.volumes['2'].status.current = 'pending'
+ .storage.volumes['3'].size = 0
+ .storage.volumes['3'].persistent = False
+ .storage.volumes['3'].storage = 'database/3'
+ .storage.volumes['3'].attachments.containers['redis-k8s/0'].read_only = False
+ .storage.volumes['3'].attachments.containers['redis-k8s/0'].life = 'alive'
+ .storage.volumes['3'].attachments.units['redis-k8s/0'].life = 'alive'
+ .storage.volumes['3'].life = 'alive'
+ .storage.volumes['3'].status.current = 'pending'
+ .storage.volumes['4'].size = 0
+ .storage.volumes['4'].persistent = False
+ .storage.volumes['4'].storage = 'minio-data/4'
+ .storage.volumes['4'].attachments.containers['minio/0'].read_only = False
+ .storage.volumes['4'].attachments.containers['minio/0'].life = 'alive'
+ .storage.volumes['4'].attachments.units['minio/0'].life = 'alive'
+ .storage.volumes['4'].life = 'alive'
+ .storage.volumes['4'].status.current = 'pending'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
+ .apps['hydra'].provider_id = 'c9932940-d4fd-467c-a8bf-e08a916a8a37'
+ .apps['hydra'].address = '10.152.183.165'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].provider_id = 'identity-platform-login-ui-operator-0'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos-external-idp-integrator'].app_status.current = 'waiting'
- .apps['kratos-external-idp-integrator'].app_status.message = 'installing agent'
+ .apps['kratos-external-idp-integrator'].app_status.current = 'unknown'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
+ .apps['hydra'].units['hydra/0'].provider_id = 'hydra-0'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
+ .apps['kratos-external-idp-integrator'].provider_id = '2053839b-cf0e-4333-b8b7-0c12de526ee7'
+ .apps['kratos-external-idp-integrator'].address = '10.152.183.68'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
+ .apps['identity-platform-login-ui-operator'].provider_id = 'e8830dfd-5e57-40b8-b304-4fe45061ec76'
+ .apps['identity-platform-login-ui-operator'].address = '10.152.183.73'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].address = '10.1.0.179'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
+ .apps['hydra'].units['hydra/0'].address = '10.1.0.60'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
+ .apps['kratos'].provider_id = '330d3311-c78e-40d5-98c9-659fdca0a410'
+ .apps['kratos'].address = '10.152.183.127'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos-external-idp-integrator'].app_status.current = 'unknown'
+ .apps['kratos-external-idp-integrator'].app_status.current = 'waiting'
+ .apps['kratos-external-idp-integrator'].app_status.message = 'installing agent'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
+ .apps['self-signed-certificates'].provider_id = 'de6fa780-bd65-4444-9cf1-01356d85b9dd'
+ .apps['self-signed-certificates'].address = '10.152.183.49'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['minio'].app_status.current = 'waiting'
- .apps['minio'].app_status.message = 'installing agent'
+ .apps['minio'].app_status.current = 'maintenance'
+ .apps['minio'].app_status.message = 'containers with unready status: [juju-operator]'
+ .apps['postgresql-k8s'].provider_id = 'fdd775ef-8073-4c22-b82c-12c012e645ff'
+ .apps['postgresql-k8s'].address = '10.152.183.146'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].provider_id = 'self-signed-certificates-0'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].provider_id = 'postgresql-k8s-0'
+ .apps['traefik-admin'].provider_id = '58738bb5-00ae-4843-ac1d-d35b2b83bbc4'
+ .apps['traefik-admin'].address = '10.152.183.85'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
+ .apps['kratos'].units['kratos/0'].provider_id = 'kratos-0'
+ .apps['traefik-public'].provider_id = '386420e4-d882-482d-8eff-6b485fdd6a4d'
+ .apps['traefik-public'].address = '10.152.183.80'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].address = '10.1.0.208'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
+ .apps['kratos'].units['kratos/0'].address = '10.1.0.84'
+ .apps['traefik-public'].units['traefik-public/0'].provider_id = 'traefik-public-0'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos-external-idp-integrator'].scale = 1
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['hydra'].app_status.message = 'installing agent'
+ .apps['hydra'].app_status.message = 'agent initialising'
- .apps['hydra'].units['hydra/0'].workload_status.message = 'installing agent'
+ .apps['hydra'].units['hydra/0'].workload_status.message = 'agent initialising'
+ .apps['hydra'].units['hydra/0'].juju_status.version = '3.6.11'
+ .apps['hydra'].units['hydra/0'].leader = True
- .apps['identity-platform-login-ui-operator'].app_status.message = 'installing agent'
+ .apps['identity-platform-login-ui-operator'].app_status.message = 'agent initialising'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.message = 'installing agent'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.message = 'agent initialising'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.version = '3.6.11'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].leader = True
- .apps['kratos'].app_status.message = 'installing agent'
+ .apps['kratos'].app_status.message = 'agent initialising'
- .apps['kratos'].units['kratos/0'].workload_status.message = 'installing agent'
+ .apps['kratos'].units['kratos/0'].workload_status.message = 'agent initialising'
+ .apps['kratos'].units['kratos/0'].juju_status.version = '3.6.11'
+ .apps['kratos'].units['kratos/0'].leader = True
- .apps['postgresql-k8s'].app_status.message = 'installing agent'
+ .apps['postgresql-k8s'].app_status.message = 'agent initialising'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'installing agent'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'agent initialising'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.version = '3.6.11'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].leader = True
- .apps['self-signed-certificates'].app_status.message = 'installing agent'
+ .apps['self-signed-certificates'].app_status.message = 'agent initialising'
- .apps['self-signed-certificates'].units['self-signed-certificates/0'].workload_status.message = 'installing agent'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].workload_status.message = 'agent initialising'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.version = '3.6.11'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].leader = True
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['minio'].app_status.message = 'containers with unready status: [juju-operator]'
+ .apps['minio'].app_status.message = 'downloading charm (ch:amd64/minio-583)'
- .apps['traefik-public'].app_status.message = 'installing agent'
+ .apps['traefik-public'].app_status.message = 'agent initialising'
- .apps['traefik-public'].units['traefik-public/0'].workload_status.message = 'installing agent'
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.message = 'agent initialising'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.version = '3.6.11'
+ .apps['traefik-public'].units['traefik-public/0'].leader = True
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['identity-platform-login-ui-operator'].app_status.current = 'waiting'
- .apps['identity-platform-login-ui-operator'].app_status.message = 'agent initialising'
+ .apps['identity-platform-login-ui-operator'].app_status.current = 'maintenance'
+ .apps['identity-platform-login-ui-operator'].app_status.message = 'installing charm software'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.current = 'waiting'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.message = 'agent initialising'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.current = 'allocating'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.current = 'maintenance'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.message = 'installing charm software'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.current = 'executing'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.message = 'running install hook'
- .apps['minio'].app_status.current = 'maintenance'
- .apps['minio'].app_status.message = 'downloading charm (ch:amd64/minio-583)'
+ .apps['minio'].app_status.current = 'waiting'
+ .apps['minio'].app_status.message = 'installing agent'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].address = '10.1.0.93'
+ .apps['traefik-public'].units['traefik-public/0'].address = '10.1.0.210'
- .storage.storage['configurations/2'].status.current = 'pending'
+ .storage.storage['configurations/2'].status.current = 'attached'
+ .storage.storage['configurations/2'].status.message = 'Successfully provisioned volume pvc-ef51600c-2a8f-4e17-9871-a2cef1111232'
- .storage.storage['pgdata/0'].status.current = 'pending'
+ .storage.storage['pgdata/0'].status.current = 'attached'
+ .storage.storage['pgdata/0'].status.message = 'Successfully provisioned volume pvc-ffd89206-1078-4875-92a4-f6432d40247b'
- .storage.filesystems['0'].size = 0
+ .storage.filesystems['0'].size = 1024
+ .storage.filesystems['0'].provider_id = 'ffd89206-1078-4875-92a4-f6432d40247b'
- .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].mount_point = ''
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].mount_point = '/var/lib/postgresql/data'
+ .storage.filesystems['0'].pool = 'kubernetes'
- .storage.filesystems['0'].status.current = 'pending'
+ .storage.filesystems['0'].status.current = 'attached'
+ .storage.filesystems['0'].status.message = 'Successfully provisioned volume pvc-ffd89206-1078-4875-92a4-f6432d40247b'
- .storage.filesystems['2'].size = 0
+ .storage.filesystems['2'].size = 1024
+ .storage.filesystems['2'].provider_id = 'ef51600c-2a8f-4e17-9871-a2cef1111232'
- .storage.filesystems['2'].attachments.containers['traefik-public/0'].mount_point = ''
+ .storage.filesystems['2'].attachments.containers['traefik-public/0'].mount_point = '/var/lib/juju/storage/configurations/0'
+ .storage.filesystems['2'].pool = 'kubernetes'
- .storage.filesystems['2'].status.current = 'pending'
+ .storage.filesystems['2'].status.current = 'attached'
+ .storage.filesystems['2'].status.message = 'Successfully provisioned volume pvc-ef51600c-2a8f-4e17-9871-a2cef1111232'
- .storage.volumes['0'].size = 0
- .storage.volumes['0'].persistent = False
+ .storage.volumes['0'].size = 1024
+ .storage.volumes['0'].persistent = True
+ .storage.volumes['0'].provider_id = 'pvc-ffd89206-1078-4875-92a4-f6432d40247b'
+ .storage.volumes['0'].pool = 'kubernetes'
- .storage.volumes['0'].status.current = 'pending'
+ .storage.volumes['0'].status.current = 'attached'
- .storage.volumes['2'].size = 0
- .storage.volumes['2'].persistent = False
+ .storage.volumes['2'].size = 1024
+ .storage.volumes['2'].persistent = True
+ .storage.volumes['2'].provider_id = 'pvc-ef51600c-2a8f-4e17-9871-a2cef1111232'
+ .storage.volumes['2'].pool = 'kubernetes'
- .storage.volumes['2'].status.current = 'pending'
+ .storage.volumes['2'].status.current = 'attached'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['hydra'].app_status.current = 'waiting'
- .apps['hydra'].app_status.message = 'agent initialising'
+ .apps['hydra'].app_status.current = 'maintenance'
+ .apps['hydra'].app_status.message = 'installing charm software'
- .apps['hydra'].units['hydra/0'].workload_status.current = 'waiting'
- .apps['hydra'].units['hydra/0'].workload_status.message = 'agent initialising'
- .apps['hydra'].units['hydra/0'].juju_status.current = 'allocating'
+ .apps['hydra'].units['hydra/0'].workload_status.current = 'maintenance'
+ .apps['hydra'].units['hydra/0'].workload_status.message = 'installing charm software'
+ .apps['hydra'].units['hydra/0'].juju_status.current = 'executing'
+ .apps['hydra'].units['hydra/0'].juju_status.message = 'running install hook'
- .apps['kratos'].app_status.current = 'waiting'
- .apps['kratos'].app_status.message = 'agent initialising'
+ .apps['kratos'].app_status.current = 'maintenance'
+ .apps['kratos'].app_status.message = 'installing charm software'
- .apps['kratos'].units['kratos/0'].workload_status.current = 'waiting'
- .apps['kratos'].units['kratos/0'].workload_status.message = 'agent initialising'
- .apps['kratos'].units['kratos/0'].juju_status.current = 'allocating'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'maintenance'
+ .apps['kratos'].units['kratos/0'].workload_status.message = 'installing charm software'
+ .apps['kratos'].units['kratos/0'].juju_status.current = 'executing'
+ .apps['kratos'].units['kratos/0'].juju_status.message = 'running install hook'
- .apps['minio'].app_status.message = 'installing agent'
+ .apps['minio'].app_status.message = 'agent initialising'
- .apps['minio'].units['minio/0'].workload_status.message = 'installing agent'
+ .apps['minio'].units['minio/0'].workload_status.message = 'agent initialising'
+ .apps['minio'].units['minio/0'].leader = True
- .apps['self-signed-certificates'].app_status.current = 'waiting'
- .apps['self-signed-certificates'].app_status.message = 'agent initialising'
+ .apps['self-signed-certificates'].app_status.current = 'unknown'
- .apps['self-signed-certificates'].units['self-signed-certificates/0'].workload_status.current = 'waiting'
- .apps['self-signed-certificates'].units['self-signed-certificates/0'].workload_status.message = 'agent initialising'
- .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.current = 'allocating'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].workload_status.current = 'running'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.current = 'idle'
- .apps['traefik-public'].app_status.current = 'waiting'
- .apps['traefik-public'].app_status.message = 'agent initialising'
+ .apps['traefik-public'].app_status.current = 'maintenance'
+ .apps['traefik-public'].app_status.message = 'installing charm software'
- .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'waiting'
- .apps['traefik-public'].units['traefik-public/0'].workload_status.message = 'agent initialising'
- .apps['traefik-public'].units['traefik-public/0'].juju_status.current = 'allocating'
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'maintenance'
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.message = 'installing charm software'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.current = 'executing'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running install hook'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['hydra'].units['hydra/0'].juju_status.message = 'running install hook'
+ .apps['hydra'].units['hydra/0'].juju_status.message = 'running public-ingress-relation-created hook'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.message = 'running install hook'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.message = 'running ui-endpoint-info-relation-created hook'
- .apps['self-signed-certificates'].app_status.current = 'unknown'
+ .apps['self-signed-certificates'].app_status.current = 'maintenance'
+ .apps['self-signed-certificates'].app_status.message = 'installing charm software'
- .apps['self-signed-certificates'].units['self-signed-certificates/0'].workload_status.current = 'running'
- .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.current = 'idle'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].workload_status.current = 'maintenance'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].workload_status.message = 'installing charm software'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.current = 'executing'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.message = 'running install hook'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['hydra'].units['hydra/0'].juju_status.message = 'running public-ingress-relation-created hook'
+ .apps['hydra'].units['hydra/0'].juju_status.message = 'running hydra-relation-created hook'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.message = 'running ui-endpoint-info-relation-created hook'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.message = 'running kratos-info-relation-created hook'
- .apps['kratos'].units['kratos/0'].juju_status.message = 'running install hook'
+ .apps['kratos'].units['kratos/0'].juju_status.message = 'running ui-endpoint-info-relation-created hook'
- .apps['self-signed-certificates'].app_status.current = 'maintenance'
- .apps['self-signed-certificates'].app_status.message = 'installing charm software'
+ .apps['self-signed-certificates'].app_status.current = 'active'
- .apps['self-signed-certificates'].units['self-signed-certificates/0'].workload_status.current = 'maintenance'
- .apps['self-signed-certificates'].units['self-signed-certificates/0'].workload_status.message = 'installing charm software'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].workload_status.current = 'active'
- .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.message = 'running install hook'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.message = 'running certificates-relation-created hook'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['hydra'].units['hydra/0'].juju_status.message = 'running hydra-relation-created hook'
+ .apps['hydra'].units['hydra/0'].juju_status.message = 'running hydra-endpoint-info-relation-created hook'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.message = 'running kratos-info-relation-created hook'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.message = 'running identity-platform-login-ui-relation-created hook'
- .apps['kratos'].units['kratos/0'].juju_status.message = 'running ui-endpoint-info-relation-created hook'
+ .apps['kratos'].units['kratos/0'].juju_status.message = 'running kratos-peers-relation-created hook'
- .apps['postgresql-k8s'].app_status.current = 'waiting'
- .apps['postgresql-k8s'].app_status.message = 'agent initialising'
+ .apps['postgresql-k8s'].app_status.current = 'maintenance'
+ .apps['postgresql-k8s'].app_status.message = 'installing charm software'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'waiting'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'agent initialising'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'allocating'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'maintenance'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'installing charm software'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running install hook'
- .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.message = 'running certificates-relation-created hook'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.message = 'running leader-elected hook'
- .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running install hook'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running ingress-relation-created hook'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['hydra'].units['hydra/0'].juju_status.message = 'running hydra-endpoint-info-relation-created hook'
+ .apps['hydra'].units['hydra/0'].juju_status.message = 'running ui-endpoint-info-relation-created hook'
- .apps['identity-platform-login-ui-operator'].app_status.message = 'installing charm software'
+ .apps['identity-platform-login-ui-operator'].app_status.message = 'Configuration in progress'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.message = 'installing charm software'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.message = 'Configuration in progress'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.message = 'running identity-platform-login-ui-relation-created hook'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.message = 'running login-ui-pebble-ready hook'
+ .apps['identity-platform-login-ui-operator'].version = '0.23.0'
- .apps['kratos'].units['kratos/0'].juju_status.message = 'running kratos-peers-relation-created hook'
+ .apps['kratos'].units['kratos/0'].juju_status.message = 'running pg-database-relation-created hook'
- .apps['minio'].app_status.current = 'waiting'
- .apps['minio'].app_status.message = 'agent initialising'
- .apps['minio'].units['minio/0'].workload_status.current = 'waiting'
- .apps['minio'].units['minio/0'].workload_status.message = 'agent initialising'
- .apps['minio'].units['minio/0'].juju_status.current = 'allocating'
+ .apps['minio'].app_status.current = 'maintenance'
+ .apps['minio'].app_status.message = 'installing charm software'
+ .apps['minio'].units['minio/0'].workload_status.current = 'maintenance'
+ .apps['minio'].units['minio/0'].workload_status.message = 'installing charm software'
+ .apps['minio'].units['minio/0'].juju_status.current = 'executing'
+ .apps['minio'].units['minio/0'].juju_status.message = 'running install hook'
- .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.message = 'running leader-elected hook'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.message = 'running config-changed hook'
- .apps['traefik-public'].app_status.current = 'maintenance'
- .apps['traefik-public'].app_status.message = 'installing charm software'
+ .apps['traefik-public'].app_status.current = 'blocked'
+ .apps['traefik-public'].app_status.message = 'setup of some ingress relation failed'
- .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'maintenance'
- .apps['traefik-public'].units['traefik-public/0'].workload_status.message = 'installing charm software'
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'blocked'
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.message = 'setup of some ingress relation failed'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['hydra'].units['hydra/0'].juju_status.message = 'running ui-endpoint-info-relation-created hook'
+ .apps['hydra'].units['hydra/0'].juju_status.message = 'running hydra-pebble-ready hook'
- .apps['kratos'].units['kratos/0'].juju_status.message = 'running pg-database-relation-created hook'
+ .apps['kratos'].units['kratos/0'].juju_status.message = 'running public-ingress-relation-created hook'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running install hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-created hook'
- .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.message = 'running config-changed hook'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.message = 'running start hook'
+ .apps['traefik-admin'].units['traefik-admin/0'].provider_id = 'traefik-admin-0'
- .apps['traefik-public'].address = '10.152.183.80'
+ .apps['traefik-public'].address = '10.151.33.100'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['hydra'].app_status.current = 'maintenance'
- .apps['hydra'].app_status.message = 'installing charm software'
+ .apps['hydra'].app_status.current = 'waiting'
+ .apps['hydra'].app_status.message = 'Waiting for database creation'
- .apps['hydra'].units['hydra/0'].workload_status.current = 'maintenance'
- .apps['hydra'].units['hydra/0'].workload_status.message = 'installing charm software'
+ .apps['hydra'].units['hydra/0'].workload_status.current = 'waiting'
+ .apps['hydra'].units['hydra/0'].workload_status.message = 'Waiting for database creation'
- .apps['hydra'].units['hydra/0'].juju_status.message = 'running hydra-pebble-ready hook'
+ .apps['hydra'].units['hydra/0'].juju_status.message = 'running config-changed hook'
+ .apps['hydra'].version = 'v2.3.0'
- .apps['kratos'].units['kratos/0'].juju_status.message = 'running public-ingress-relation-created hook'
+ .apps['kratos'].units['kratos/0'].juju_status.message = 'running hydra-endpoint-info-relation-created hook'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-created hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running restart-relation-created hook'
- .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.message = 'running start hook'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.message = 'running certificates-relation-changed hook for traefik-public/0'
- .apps['traefik-admin'].app_status.message = 'installing agent'
+ .apps['traefik-admin'].app_status.message = 'agent initialising'
- .apps['traefik-admin'].units['traefik-admin/0'].workload_status.message = 'installing agent'
+ .apps['traefik-admin'].units['traefik-admin/0'].workload_status.message = 'agent initialising'
+ .apps['traefik-admin'].units['traefik-admin/0'].juju_status.version = '3.6.11'
+ .apps['traefik-admin'].units['traefik-admin/0'].leader = True
- .apps['traefik-public'].app_status.current = 'blocked'
- .apps['traefik-public'].app_status.message = 'setup of some ingress relation failed'
+ .apps['traefik-public'].app_status.current = 'maintenance'
+ .apps['traefik-public'].app_status.message = "updating ingress configuration for 'ingress:13'"
- .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'blocked'
- .apps['traefik-public'].units['traefik-public/0'].workload_status.message = 'setup of some ingress relation failed'
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'maintenance'
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.message = "updating ingress configuration for 'ingress:13'"
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['hydra'].units['hydra/0'].juju_status.message = 'running config-changed hook'
+ .apps['hydra'].units['hydra/0'].juju_status.message = 'running hydra-endpoint-info-relation-joined hook for identity-platform-login-ui-operator/0'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.message = 'running login-ui-pebble-ready hook'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.message = 'running config-changed hook'
- .apps['kratos'].units['kratos/0'].juju_status.message = 'running hydra-endpoint-info-relation-created hook'
+ .apps['kratos'].units['kratos/0'].juju_status.message = 'running leader-elected hook'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running restart-relation-created hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running upgrade-relation-created hook'
- .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.current = 'executing'
- .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.message = 'running certificates-relation-changed hook for traefik-public/0'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.current = 'idle'
- .apps['traefik-public'].app_status.current = 'maintenance'
- .apps['traefik-public'].app_status.message = "updating ingress configuration for 'ingress:13'"
+ .apps['traefik-public'].app_status.current = 'waiting'
+ .apps['traefik-public'].app_status.message = 'installing agent'
- .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'maintenance'
- .apps['traefik-public'].units['traefik-public/0'].workload_status.message = "updating ingress configuration for 'ingress:13'"
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'active'
- .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running ingress-relation-created hook'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running peers-relation-created hook'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['hydra'].units['hydra/0'].juju_status.message = 'running hydra-endpoint-info-relation-joined hook for identity-platform-login-ui-operator/0'
+ .apps['hydra'].units['hydra/0'].juju_status.message = 'running hydra-endpoint-info-relation-changed hook for identity-platform-login-ui-operator/0'
- .apps['identity-platform-login-ui-operator'].app_status.current = 'maintenance'
- .apps['identity-platform-login-ui-operator'].app_status.message = 'Configuration in progress'
+ .apps['identity-platform-login-ui-operator'].app_status.current = 'waiting'
+ .apps['identity-platform-login-ui-operator'].app_status.message = 'installing agent'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.current = 'maintenance'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.message = 'Configuration in progress'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.current = 'active'
- .apps['kratos'].units['kratos/0'].juju_status.message = 'running leader-elected hook'
+ .apps['kratos'].units['kratos/0'].juju_status.message = 'running kratos-pebble-ready hook'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running upgrade-relation-created hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-peers-relation-created hook'
- .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.current = 'idle'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.current = 'executing'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.message = 'running certificates-relation-changed hook for traefik-public/0'
- .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running peers-relation-created hook'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running leader-elected hook'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['hydra'].units['hydra/0'].juju_status.message = 'running hydra-endpoint-info-relation-changed hook for identity-platform-login-ui-operator/0'
+ .apps['hydra'].units['hydra/0'].juju_status.message = 'running public-ingress-relation-changed hook'
- .apps['identity-platform-login-ui-operator'].app_status.current = 'waiting'
- .apps['identity-platform-login-ui-operator'].app_status.message = 'installing agent'
+ .apps['identity-platform-login-ui-operator'].app_status.current = 'active'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.message = 'running config-changed hook'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.message = 'running ingress-relation-changed hook'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-peers-relation-created hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running leader-elected hook'
- .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.current = 'executing'
- .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.message = 'running certificates-relation-changed hook for traefik-public/0'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.current = 'idle'
- .apps['traefik-admin'].app_status.current = 'waiting'
- .apps['traefik-admin'].app_status.message = 'agent initialising'
+ .apps['traefik-admin'].app_status.current = 'maintenance'
+ .apps['traefik-admin'].app_status.message = 'installing charm software'
- .apps['traefik-admin'].units['traefik-admin/0'].workload_status.current = 'waiting'
- .apps['traefik-admin'].units['traefik-admin/0'].workload_status.message = 'agent initialising'
- .apps['traefik-admin'].units['traefik-admin/0'].juju_status.current = 'allocating'
+ .apps['traefik-admin'].units['traefik-admin/0'].workload_status.current = 'maintenance'
+ .apps['traefik-admin'].units['traefik-admin/0'].workload_status.message = 'installing charm software'
+ .apps['traefik-admin'].units['traefik-admin/0'].juju_status.current = 'executing'
+ .apps['traefik-admin'].units['traefik-admin/0'].juju_status.message = 'running install hook'
- .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running leader-elected hook'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running traefik-pebble-ready hook'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['hydra'].units['hydra/0'].juju_status.message = 'running public-ingress-relation-changed hook'
+ .apps['hydra'].units['hydra/0'].juju_status.message = 'running public-ingress-relation-joined hook for traefik-public/0'
- .apps['identity-platform-login-ui-operator'].app_status.current = 'active'
+ .apps['identity-platform-login-ui-operator'].app_status.current = 'maintenance'
+ .apps['identity-platform-login-ui-operator'].app_status.message = 'Configuration in progress'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.current = 'active'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.current = 'maintenance'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.message = 'Configuration in progress'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running leader-elected hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running postgresql-pebble-ready hook'
- .apps['traefik-public'].app_status.current = 'waiting'
- .apps['traefik-public'].app_status.message = 'installing agent'
+ .apps['traefik-public'].app_status.current = 'maintenance'
+ .apps['traefik-public'].app_status.message = "updating ingress configuration for 'ingress:13'"
- .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'active'
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'maintenance'
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.message = "updating ingress configuration for 'ingress:13'"
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['hydra'].units['hydra/0'].juju_status.current = 'executing'
- .apps['hydra'].units['hydra/0'].juju_status.message = 'running public-ingress-relation-joined hook for traefik-public/0'
+ .apps['hydra'].units['hydra/0'].juju_status.current = 'idle'
- .apps['identity-platform-login-ui-operator'].app_status.current = 'maintenance'
- .apps['identity-platform-login-ui-operator'].app_status.message = 'Configuration in progress'
+ .apps['identity-platform-login-ui-operator'].app_status.current = 'active'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.current = 'maintenance'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.message = 'Configuration in progress'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.current = 'active'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.message = 'running ingress-relation-changed hook'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.message = 'running ingress-relation-joined hook for traefik-public/0'
- .apps['minio'].app_status.current = 'maintenance'
- .apps['minio'].app_status.message = 'installing charm software'
- .apps['minio'].units['minio/0'].workload_status.current = 'maintenance'
- .apps['minio'].units['minio/0'].workload_status.message = 'installing charm software'
+ .apps['minio'].app_status.current = 'waiting'
+ .apps['minio'].app_status.message = 'waiting for container'
+ .apps['minio'].units['minio/0'].workload_status.current = 'waiting'
+ .apps['minio'].units['minio/0'].workload_status.message = 'waiting for container'
- .apps['minio'].units['minio/0'].juju_status.message = 'running install hook'
+ .apps['minio'].units['minio/0'].juju_status.message = 'running leader-elected hook'
+ .apps['minio'].version = 'registry.jujucharms.com/charm/81j63o4a2ldarn1umc22iyjz1q9l9g0sx5b8j/oci-image@sha256:7f2474f60a02f11dc3294542a97092bd2392b91d526c7e7c70648c0b9d3b68ab'
+ .apps['postgresql-k8s'].version = '14.15'
- .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.current = 'idle'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.current = 'executing'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.message = 'running certificates-relation-changed hook for traefik-admin/0'
- .apps['traefik-admin'].app_status.message = 'installing charm software'
+ .apps['traefik-admin'].app_status.message = "updating ingress configuration for 'ingress:12'"
- .apps['traefik-admin'].units['traefik-admin/0'].workload_status.message = 'installing charm software'
+ .apps['traefik-admin'].units['traefik-admin/0'].workload_status.message = "updating ingress configuration for 'ingress:14'"
- .apps['traefik-admin'].units['traefik-admin/0'].juju_status.message = 'running install hook'
+ .apps['traefik-admin'].units['traefik-admin/0'].juju_status.message = 'running ingress-relation-created hook'
- .apps['traefik-public'].app_status.current = 'maintenance'
- .apps['traefik-public'].app_status.message = "updating ingress configuration for 'ingress:13'"
+ .apps['traefik-public'].app_status.current = 'waiting'
+ .apps['traefik-public'].app_status.message = 'installing agent'
- .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'maintenance'
- .apps['traefik-public'].units['traefik-public/0'].workload_status.message = "updating ingress configuration for 'ingress:13'"
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'active'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['hydra'].units['hydra/0'].juju_status.current = 'idle'
+ .apps['hydra'].units['hydra/0'].juju_status.current = 'executing'
+ .apps['hydra'].units['hydra/0'].juju_status.message = 'running ui-endpoint-info-relation-changed hook for identity-platform-login-ui-operator/0'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.message = 'running ingress-relation-joined hook for traefik-public/0'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.message = 'running ui-endpoint-info-relation-joined hook for kratos/0'
- .apps['kratos'].units['kratos/0'].workload_status.current = 'maintenance'
- .apps['kratos'].units['kratos/0'].workload_status.message = 'installing charm software'
- .apps['kratos'].units['kratos/0'].juju_status.current = 'executing'
- .apps['kratos'].units['kratos/0'].juju_status.message = 'running kratos-pebble-ready hook'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'unknown'
+ .apps['kratos'].units['kratos/0'].workload_status.message = "agent lost, see 'juju show-status-log kratos/0'"
+ .apps['kratos'].units['kratos/0'].juju_status.current = 'lost'
+ .apps['kratos'].units['kratos/0'].juju_status.message = 'agent is not communicating with the server'
- .apps['minio'].units['minio/0'].juju_status.message = 'running leader-elected hook'
+ .apps['minio'].units['minio/0'].juju_status.message = 'running config-changed hook'
- .apps['postgresql-k8s'].app_status.current = 'maintenance'
- .apps['postgresql-k8s'].app_status.message = 'installing charm software'
+ .apps['postgresql-k8s'].app_status.current = 'waiting'
+ .apps['postgresql-k8s'].app_status.message = 'awaiting for cluster to start'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'maintenance'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'installing charm software'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'waiting'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'awaiting for cluster to start'
- .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.current = 'executing'
- .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.message = 'running certificates-relation-changed hook for traefik-admin/0'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.current = 'idle'
- .apps['traefik-admin'].address = '10.152.183.85'
- .apps['traefik-admin'].app_status.current = 'maintenance'
- .apps['traefik-admin'].app_status.message = "updating ingress configuration for 'ingress:12'"
+ .apps['traefik-admin'].address = '10.151.33.101'
+ .apps['traefik-admin'].app_status.current = 'waiting'
+ .apps['traefik-admin'].app_status.message = 'installing agent'
- .apps['traefik-admin'].units['traefik-admin/0'].workload_status.current = 'maintenance'
- .apps['traefik-admin'].units['traefik-admin/0'].workload_status.message = "updating ingress configuration for 'ingress:14'"
+ .apps['traefik-admin'].units['traefik-admin/0'].workload_status.current = 'active'
- .apps['traefik-public'].app_status.current = 'waiting'
- .apps['traefik-public'].app_status.message = 'installing agent'
+ .apps['traefik-public'].app_status.current = 'active'
- .apps['traefik-public'].units['traefik-public/0'].juju_status.current = 'executing'
- .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running traefik-pebble-ready hook'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.current = 'idle'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['hydra'].units['hydra/0'].juju_status.message = 'running ui-endpoint-info-relation-changed hook for identity-platform-login-ui-operator/0'
+ .apps['hydra'].units['hydra/0'].juju_status.message = 'running admin-ingress-relation-joined hook for traefik-admin/0'
- .apps['identity-platform-login-ui-operator'].app_status.current = 'active'
+ .apps['identity-platform-login-ui-operator'].app_status.current = 'maintenance'
+ .apps['identity-platform-login-ui-operator'].app_status.message = 'Configuration in progress'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.current = 'active'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.current = 'maintenance'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.message = 'Configuration in progress'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.message = 'running ui-endpoint-info-relation-joined hook for kratos/0'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.message = 'running kratos-info-relation-changed hook for kratos/0'
- .apps['minio'].units['minio/0'].juju_status.message = 'running config-changed hook'
+ .apps['minio'].units['minio/0'].juju_status.message = 'running start hook'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running postgresql-pebble-ready hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running pgdata-storage-attached hook'
- .apps['traefik-admin'].units['traefik-admin/0'].juju_status.message = 'running ingress-relation-created hook'
+ .apps['traefik-admin'].units['traefik-admin/0'].juju_status.message = 'running peers-relation-created hook'
+ .apps['traefik-public'].version = 'v2.11.0'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['hydra'].units['hydra/0'].juju_status.message = 'running admin-ingress-relation-joined hook for traefik-admin/0'
+ .apps['hydra'].units['hydra/0'].juju_status.message = 'running pg-database-relation-changed hook'
- .apps['identity-platform-login-ui-operator'].app_status.current = 'maintenance'
- .apps['identity-platform-login-ui-operator'].app_status.message = 'Configuration in progress'
+ .apps['identity-platform-login-ui-operator'].app_status.current = 'active'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.current = 'maintenance'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.message = 'Configuration in progress'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.current = 'active'
- .apps['kratos'].units['kratos/0'].workload_status.current = 'unknown'
- .apps['kratos'].units['kratos/0'].workload_status.message = "agent lost, see 'juju show-status-log kratos/0'"
- .apps['kratos'].units['kratos/0'].juju_status.current = 'lost'
- .apps['kratos'].units['kratos/0'].juju_status.message = 'agent is not communicating with the server'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'maintenance'
+ .apps['kratos'].units['kratos/0'].workload_status.message = 'installing charm software'
+ .apps['kratos'].units['kratos/0'].juju_status.current = 'executing'
+ .apps['kratos'].units['kratos/0'].juju_status.message = 'running kratos-pebble-ready hook'
- .apps['minio'].units['minio/0'].juju_status.current = 'executing'
- .apps['minio'].units['minio/0'].juju_status.message = 'running start hook'
+ .apps['minio'].units['minio/0'].juju_status.current = 'idle'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running pgdata-storage-attached hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running config-changed hook'
- .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.current = 'idle'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.current = 'executing'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.message = 'running certificates-relation-changed hook for traefik-admin/0'
- .apps['traefik-admin'].units['traefik-admin/0'].juju_status.message = 'running peers-relation-created hook'
+ .apps['traefik-admin'].units['traefik-admin/0'].juju_status.message = 'running certificates-relation-created hook'
- .apps['traefik-public'].units['traefik-public/0'].juju_status.current = 'idle'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.current = 'executing'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running configurations-storage-attached hook'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['hydra'].units['hydra/0'].juju_status.current = 'executing'
- .apps['hydra'].units['hydra/0'].juju_status.message = 'running pg-database-relation-changed hook'
+ .apps['hydra'].units['hydra/0'].juju_status.current = 'idle'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.message = 'running kratos-info-relation-changed hook for kratos/0'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.message = 'running ui-endpoint-info-relation-changed hook for kratos/0'
- .apps['kratos'].units['kratos/0'].juju_status.current = 'executing'
- .apps['kratos'].units['kratos/0'].juju_status.message = 'running kratos-pebble-ready hook'
+ .apps['kratos'].units['kratos/0'].juju_status.current = 'idle'
- .apps['kratos'].units['kratos/0'].address = '10.1.0.84'
+ .apps['kratos'].units['kratos/0'].address = '10.1.0.185'
- .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.current = 'executing'
- .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.message = 'running certificates-relation-changed hook for traefik-admin/0'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.current = 'idle'
- .apps['traefik-admin'].units['traefik-admin/0'].juju_status.message = 'running certificates-relation-created hook'
+ .apps['traefik-admin'].units['traefik-admin/0'].juju_status.message = 'running leader-elected hook'
- .apps['traefik-public'].app_status.current = 'active'
+ .apps['traefik-public'].app_status.current = 'maintenance'
+ .apps['traefik-public'].app_status.message = "updating ingress configuration for 'ingress:13'"
- .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'active'
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'maintenance'
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.message = "updating ingress configuration for 'ingress:13'"
- .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running configurations-storage-attached hook'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running config-changed hook'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['hydra'].units['hydra/0'].juju_status.current = 'idle'
+ .apps['hydra'].units['hydra/0'].juju_status.current = 'executing'
+ .apps['hydra'].units['hydra/0'].juju_status.message = 'running public-ingress-relation-changed hook for traefik-public/0'
- .apps['identity-platform-login-ui-operator'].app_status.current = 'active'
+ .apps['identity-platform-login-ui-operator'].app_status.current = 'maintenance'
+ .apps['identity-platform-login-ui-operator'].app_status.message = 'Configuration in progress'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.current = 'active'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.current = 'maintenance'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.message = 'Configuration in progress'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.message = 'running ui-endpoint-info-relation-changed hook for kratos/0'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.message = 'running hydra-endpoint-info-relation-changed hook'
- .apps['kratos'].units['kratos/0'].juju_status.current = 'idle'
+ .apps['kratos'].units['kratos/0'].juju_status.current = 'executing'
+ .apps['kratos'].units['kratos/0'].juju_status.message = 'running upgrade-charm hook'
- .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.current = 'idle'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.current = 'executing'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.message = 'running certificates-relation-changed hook for traefik-public/0'
- .apps['traefik-admin'].app_status.current = 'waiting'
- .apps['traefik-admin'].app_status.message = 'installing agent'
+ .apps['traefik-admin'].app_status.current = 'maintenance'
+ .apps['traefik-admin'].app_status.message = 'restarting traefik...'
- .apps['traefik-admin'].units['traefik-admin/0'].workload_status.current = 'active'
+ .apps['traefik-admin'].units['traefik-admin/0'].workload_status.current = 'maintenance'
+ .apps['traefik-admin'].units['traefik-admin/0'].workload_status.message = 'restarting traefik...'
- .apps['traefik-admin'].units['traefik-admin/0'].juju_status.message = 'running leader-elected hook'
+ .apps['traefik-admin'].units['traefik-admin/0'].juju_status.message = 'running traefik-pebble-ready hook'
- .apps['traefik-public'].app_status.current = 'maintenance'
- .apps['traefik-public'].app_status.message = "updating ingress configuration for 'ingress:13'"
+ .apps['traefik-public'].app_status.current = 'active'
- .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'maintenance'
- .apps['traefik-public'].units['traefik-public/0'].workload_status.message = "updating ingress configuration for 'ingress:13'"
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'active'
- .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running config-changed hook'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running start hook'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['hydra'].units['hydra/0'].juju_status.current = 'executing'
- .apps['hydra'].units['hydra/0'].juju_status.message = 'running public-ingress-relation-changed hook for traefik-public/0'
+ .apps['hydra'].units['hydra/0'].juju_status.current = 'idle'
- .apps['identity-platform-login-ui-operator'].app_status.current = 'maintenance'
- .apps['identity-platform-login-ui-operator'].app_status.message = 'Configuration in progress'
+ .apps['identity-platform-login-ui-operator'].app_status.current = 'active'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.current = 'maintenance'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.message = 'Configuration in progress'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.current = 'active'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.message = 'running hydra-endpoint-info-relation-changed hook'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.message = 'running hydra-endpoint-info-relation-joined hook for hydra/0'
- .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.current = 'executing'
- .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.message = 'running certificates-relation-changed hook for traefik-public/0'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.current = 'idle'
- .apps['traefik-admin'].app_status.message = 'restarting traefik...'
+ .apps['traefik-admin'].app_status.message = "updating ingress configuration for 'ingress:14'"
- .apps['traefik-admin'].units['traefik-admin/0'].workload_status.message = 'restarting traefik...'
+ .apps['traefik-admin'].units['traefik-admin/0'].workload_status.message = "updating ingress configuration for 'ingress:12'"
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.message = 'running hydra-endpoint-info-relation-joined hook for hydra/0'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.message = 'running ingress-relation-changed hook for traefik-public/0'
- .apps['kratos'].units['kratos/0'].juju_status.message = 'running upgrade-charm hook'
+ .apps['kratos'].units['kratos/0'].juju_status.message = 'running config-changed hook'
- .apps['traefik-admin'].app_status.current = 'maintenance'
- .apps['traefik-admin'].app_status.message = "updating ingress configuration for 'ingress:14'"
+ .apps['traefik-admin'].app_status.current = 'active'
- .apps['traefik-admin'].units['traefik-admin/0'].workload_status.current = 'maintenance'
- .apps['traefik-admin'].units['traefik-admin/0'].workload_status.message = "updating ingress configuration for 'ingress:12'"
- .apps['traefik-admin'].units['traefik-admin/0'].juju_status.current = 'executing'
- .apps['traefik-admin'].units['traefik-admin/0'].juju_status.message = 'running traefik-pebble-ready hook'
+ .apps['traefik-admin'].units['traefik-admin/0'].workload_status.current = 'active'
+ .apps['traefik-admin'].units['traefik-admin/0'].juju_status.current = 'idle'
+ .apps['traefik-admin'].units['traefik-admin/0'].address = '10.1.0.245'
- .apps['traefik-public'].app_status.current = 'active'
+ .apps['traefik-public'].app_status.current = 'maintenance'
+ .apps['traefik-public'].app_status.message = "updating ingress configuration for 'ingress:16'"
- .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'active'
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'maintenance'
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.message = "updating ingress configuration for 'ingress:15'"
- .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running start hook'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running ingress-relation-changed hook'
- .storage.storage['configurations/1'].status.current = 'pending'
+ .storage.storage['configurations/1'].status.current = 'attached'
+ .storage.storage['configurations/1'].status.message = 'Successfully provisioned volume pvc-7e5ff3f1-669a-4468-bb94-b983e2653f2e'
- .storage.filesystems['1'].size = 0
+ .storage.filesystems['1'].size = 1024
+ .storage.filesystems['1'].provider_id = '7e5ff3f1-669a-4468-bb94-b983e2653f2e'
- .storage.filesystems['1'].attachments.containers['traefik-admin/0'].mount_point = ''
+ .storage.filesystems['1'].attachments.containers['traefik-admin/0'].mount_point = '/var/lib/juju/storage/configurations/0'
+ .storage.filesystems['1'].pool = 'kubernetes'
- .storage.filesystems['1'].status.current = 'pending'
+ .storage.filesystems['1'].status.current = 'attached'
+ .storage.filesystems['1'].status.message = 'Successfully provisioned volume pvc-7e5ff3f1-669a-4468-bb94-b983e2653f2e'
- .storage.volumes['1'].size = 0
- .storage.volumes['1'].persistent = False
+ .storage.volumes['1'].size = 1024
+ .storage.volumes['1'].persistent = True
+ .storage.volumes['1'].provider_id = 'pvc-7e5ff3f1-669a-4468-bb94-b983e2653f2e'
+ .storage.volumes['1'].pool = 'kubernetes'
- .storage.volumes['1'].status.current = 'pending'
+ .storage.volumes['1'].status.current = 'attached'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['identity-platform-login-ui-operator'].app_status.current = 'active'
+ .apps['identity-platform-login-ui-operator'].app_status.current = 'maintenance'
+ .apps['identity-platform-login-ui-operator'].app_status.message = 'Configuration in progress'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.current = 'active'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.current = 'maintenance'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.message = 'Configuration in progress'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.message = 'running ingress-relation-changed hook for traefik-public/0'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.message = 'running hydra-endpoint-info-relation-changed hook for hydra/0'
- .apps['kratos'].app_status.current = 'maintenance'
- .apps['kratos'].app_status.message = 'installing charm software'
+ .apps['kratos'].app_status.current = 'waiting'
+ .apps['kratos'].app_status.message = 'Waiting for database creation'
- .apps['kratos'].units['kratos/0'].workload_status.current = 'maintenance'
- .apps['kratos'].units['kratos/0'].workload_status.message = 'installing charm software'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'waiting'
+ .apps['kratos'].units['kratos/0'].workload_status.message = 'Waiting for database creation'
- .apps['kratos'].units['kratos/0'].juju_status.message = 'running config-changed hook'
+ .apps['kratos'].units['kratos/0'].juju_status.message = 'running start hook'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].provider_id = 'netbox-k8s-0'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running config-changed hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
- .apps['traefik-public'].app_status.current = 'maintenance'
- .apps['traefik-public'].app_status.message = "updating ingress configuration for 'ingress:16'"
+ .apps['traefik-public'].app_status.current = 'active'
- .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'maintenance'
- .apps['traefik-public'].units['traefik-public/0'].workload_status.message = "updating ingress configuration for 'ingress:15'"
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'active'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].units['kratos/0'].juju_status.message = 'running start hook'
+ .apps['kratos'].units['kratos/0'].juju_status.message = 'running kratos-pebble-ready hook'
+ .apps['minio'].provider_id = '07f2c2b4-c870-47c0-a621-140a62891ef1'
+ .apps['minio'].address = '10.152.183.147'
- .apps['minio'].units['minio/0'].juju_status.current = 'idle'
+ .apps['minio'].units['minio/0'].juju_status.current = 'executing'
+ .apps['minio'].units['minio/0'].juju_status.message = 'running config-changed hook'
- .apps['netbox-k8s'].app_status.message = 'installing agent'
+ .apps['netbox-k8s'].app_status.message = 'agent initialising'
- .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.message = 'installing agent'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.message = 'agent initialising'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.version = '3.6.11'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].leader = True
+ .apps['traefik-admin'].version = 'v2.11.0'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.message = 'running hydra-endpoint-info-relation-changed hook for hydra/0'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.message = 'running kratos-info-relation-changed hook'
- .apps['kratos'].units['kratos/0'].juju_status.message = 'running kratos-pebble-ready hook'
+ .apps['kratos'].units['kratos/0'].juju_status.message = 'running kratos-info-relation-joined hook for identity-platform-login-ui-operator/0'
+ .apps['kratos'].version = 'v1.3.1'
- .apps['minio'].units['minio/0'].juju_status.current = 'executing'
- .apps['minio'].units['minio/0'].juju_status.message = 'running config-changed hook'
+ .apps['minio'].units['minio/0'].juju_status.current = 'idle'
- .apps['traefik-admin'].units['traefik-admin/0'].juju_status.current = 'idle'
+ .apps['traefik-admin'].units['traefik-admin/0'].juju_status.current = 'executing'
+ .apps['traefik-admin'].units['traefik-admin/0'].juju_status.message = 'running configurations-storage-attached hook'
- .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running ingress-relation-changed hook'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running certificates-relation-changed hook'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].units['kratos/0'].juju_status.message = 'running kratos-info-relation-joined hook for identity-platform-login-ui-operator/0'
+ .apps['kratos'].units['kratos/0'].juju_status.message = 'running ui-endpoint-info-relation-changed hook'
- .apps['traefik-admin'].units['traefik-admin/0'].juju_status.message = 'running configurations-storage-attached hook'
+ .apps['traefik-admin'].units['traefik-admin/0'].juju_status.message = 'running config-changed hook'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['identity-platform-login-ui-operator'].app_status.current = 'maintenance'
- .apps['identity-platform-login-ui-operator'].app_status.message = 'Configuration in progress'
+ .apps['identity-platform-login-ui-operator'].app_status.current = 'waiting'
+ .apps['identity-platform-login-ui-operator'].app_status.message = 'installing agent'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.current = 'maintenance'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.message = 'Configuration in progress'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.current = 'executing'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.message = 'running kratos-info-relation-changed hook'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.current = 'active'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.current = 'idle'
- .apps['kratos'].units['kratos/0'].workload_status.current = 'waiting'
- .apps['kratos'].units['kratos/0'].workload_status.message = 'Waiting for database creation'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'maintenance'
+ .apps['kratos'].units['kratos/0'].workload_status.message = 'Configuring resources'
- .apps['kratos'].units['kratos/0'].juju_status.message = 'running ui-endpoint-info-relation-changed hook'
+ .apps['kratos'].units['kratos/0'].juju_status.message = 'running admin-ingress-relation-changed hook'
- .apps['traefik-admin'].app_status.current = 'active'
+ .apps['traefik-admin'].app_status.current = 'maintenance'
+ .apps['traefik-admin'].app_status.message = 'updating ingress configurations'
- .apps['traefik-admin'].units['traefik-admin/0'].juju_status.message = 'running config-changed hook'
+ .apps['traefik-admin'].units['traefik-admin/0'].juju_status.message = 'running start hook'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].units['kratos/0'].workload_status.current = 'maintenance'
- .apps['kratos'].units['kratos/0'].workload_status.message = 'Configuring resources'
- .apps['kratos'].units['kratos/0'].juju_status.current = 'executing'
- .apps['kratos'].units['kratos/0'].juju_status.message = 'running admin-ingress-relation-changed hook'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'waiting'
+ .apps['kratos'].units['kratos/0'].workload_status.message = 'Waiting for database creation'
+ .apps['kratos'].units['kratos/0'].juju_status.current = 'idle'
- .apps['kratos-external-idp-integrator'].charm = 'kratos-external-idp-integrator'
- .apps['kratos-external-idp-integrator'].charm_origin = 'charmhub'
- .apps['kratos-external-idp-integrator'].charm_name = 'kratos-external-idp-integrator'
- .apps['kratos-external-idp-integrator'].charm_rev = 245
- .apps['kratos-external-idp-integrator'].exposed = False
- .apps['kratos-external-idp-integrator'].base.name = 'ubuntu'
- .apps['kratos-external-idp-integrator'].base.channel = '22.04'
- .apps['kratos-external-idp-integrator'].charm_channel = 'latest/edge'
- .apps['kratos-external-idp-integrator'].provider_id = '2053839b-cf0e-4333-b8b7-0c12de526ee7'
- .apps['kratos-external-idp-integrator'].address = '10.152.183.68'
- .apps['kratos-external-idp-integrator'].life = 'dead'
- .apps['kratos-external-idp-integrator'].app_status.current = 'waiting'
- .apps['kratos-external-idp-integrator'].app_status.message = 'installing agent'
- .apps['kratos-external-idp-integrator'].endpoint_bindings[''] = 'alpha'
- .apps['kratos-external-idp-integrator'].endpoint_bindings['kratos-external-idp'] = 'alpha'
- .apps['traefik-admin'].app_status.current = 'maintenance'
- .apps['traefik-admin'].app_status.message = 'updating ingress configurations'
+ .apps['traefik-admin'].app_status.current = 'active'
- .apps['traefik-admin'].units['traefik-admin/0'].juju_status.message = 'running start hook'
+ .apps['traefik-admin'].units['traefik-admin/0'].juju_status.message = 'running ingress-relation-changed hook'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].units['kratos/0'].juju_status.current = 'idle'
+ .apps['kratos'].units['kratos/0'].juju_status.current = 'executing'
+ .apps['kratos'].units['kratos/0'].juju_status.message = 'running kratos-info-relation-changed hook for identity-platform-login-ui-operator/0'
- .apps['netbox-k8s'].app_status.current = 'waiting'
- .apps['netbox-k8s'].app_status.message = 'agent initialising'
+ .apps['netbox-k8s'].provider_id = 'b6a3bce4-9d0b-4425-8386-57b74bc8c746'
+ .apps['netbox-k8s'].address = '10.152.183.234'
+ .apps['netbox-k8s'].app_status.current = 'maintenance'
+ .apps['netbox-k8s'].app_status.message = 'installing charm software'
- .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.current = 'waiting'
- .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.message = 'agent initialising'
- .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.current = 'allocating'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.current = 'maintenance'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.message = 'installing charm software'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.current = 'executing'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.message = 'running install hook'
- .apps['traefik-admin'].units['traefik-admin/0'].juju_status.message = 'running ingress-relation-changed hook'
+ .apps['traefik-admin'].units['traefik-admin/0'].juju_status.message = 'running ingress-relation-joined hook for hydra/0'
- .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running certificates-relation-changed hook'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running certificates-relation-changed hook for self-signed-certificates/0'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].units['kratos/0'].workload_status.current = 'waiting'
- .apps['kratos'].units['kratos/0'].workload_status.message = 'Waiting for database creation'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'maintenance'
+ .apps['kratos'].units['kratos/0'].workload_status.message = 'Configuring resources'
- .apps['kratos'].units['kratos/0'].juju_status.message = 'running kratos-info-relation-changed hook for identity-platform-login-ui-operator/0'
+ .apps['kratos'].units['kratos/0'].juju_status.message = 'running pg-database-relation-changed hook'
- .apps['minio'].units['minio/0'].juju_status.current = 'idle'
+ .apps['minio'].units['minio/0'].juju_status.current = 'executing'
+ .apps['minio'].units['minio/0'].juju_status.message = 'running minio-data-storage-attached hook'
+ .apps['minio'].units['minio/0'].open_ports[0] = '9000/TCP'
+ .apps['minio'].units['minio/0'].open_ports[1] = '9001/TCP'
+ .apps['minio'].units['minio/0'].provider_id = 'minio-0'
- .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.message = 'running install hook'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.message = 'running leader-elected hook'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].address = '10.1.0.109'
- .storage.storage['minio-data/4'].status.current = 'pending'
+ .storage.storage['minio-data/4'].status.current = 'attached'
+ .storage.storage['minio-data/4'].status.message = 'Successfully provisioned volume pvc-3b2acca8-fa18-4790-841a-bd5d148f2538'
- .storage.filesystems['4'].size = 0
+ .storage.filesystems['4'].size = 31
+ .storage.filesystems['4'].provider_id = '3b2acca8-fa18-4790-841a-bd5d148f2538'
- .storage.filesystems['4'].attachments.containers['minio/0'].mount_point = ''
+ .storage.filesystems['4'].attachments.containers['minio/0'].mount_point = '/data'
+ .storage.filesystems['4'].pool = 'kubernetes'
- .storage.filesystems['4'].status.current = 'pending'
+ .storage.filesystems['4'].status.current = 'attached'
+ .storage.filesystems['4'].status.message = 'Successfully provisioned volume pvc-3b2acca8-fa18-4790-841a-bd5d148f2538'
- .storage.volumes['4'].size = 0
- .storage.volumes['4'].persistent = False
+ .storage.volumes['4'].size = 1694
+ .storage.volumes['4'].persistent = True
+ .storage.volumes['4'].provider_id = 'pvc-3b2acca8-fa18-4790-841a-bd5d148f2538'
+ .storage.volumes['4'].pool = 'kubernetes'
- .storage.volumes['4'].status.current = 'pending'
+ .storage.volumes['4'].status.current = 'attached'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].app_status.current = 'waiting'
- .apps['kratos'].app_status.message = 'Waiting for database creation'
+ .apps['kratos'].app_status.current = 'maintenance'
+ .apps['kratos'].app_status.message = 'Configuring resources'
- .apps['kratos'].units['kratos/0'].workload_status.current = 'maintenance'
- .apps['kratos'].units['kratos/0'].workload_status.message = 'Configuring resources'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'waiting'
+ .apps['kratos'].units['kratos/0'].workload_status.message = 'Waiting for database creation'
- .apps['kratos'].units['kratos/0'].juju_status.message = 'running pg-database-relation-changed hook'
+ .apps['kratos'].units['kratos/0'].juju_status.message = 'running pg-database-relation-joined hook for postgresql-k8s/0'
- .apps['minio'].units['minio/0'].juju_status.current = 'executing'
- .apps['minio'].units['minio/0'].juju_status.message = 'running minio-data-storage-attached hook'
+ .apps['minio'].units['minio/0'].juju_status.current = 'idle'
- .apps['netbox-k8s'].app_status.current = 'maintenance'
- .apps['netbox-k8s'].app_status.message = 'installing charm software'
+ .apps['netbox-k8s'].app_status.current = 'waiting'
+ .apps['netbox-k8s'].app_status.message = 'Waiting for pebble ready'
- .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.current = 'maintenance'
- .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.message = 'installing charm software'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.current = 'waiting'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.message = 'Waiting for pebble ready'
- .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.message = 'running leader-elected hook'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.message = 'running start hook'
- .apps['traefik-admin'].units['traefik-admin/0'].juju_status.message = 'running ingress-relation-joined hook for hydra/0'
+ .apps['traefik-admin'].units['traefik-admin/0'].juju_status.message = 'running certificates-relation-changed hook'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].app_status.current = 'maintenance'
- .apps['kratos'].app_status.message = 'Configuring resources'
+ .apps['kratos'].app_status.current = 'waiting'
+ .apps['kratos'].app_status.message = 'Waiting for database creation'
- .apps['kratos'].units['kratos/0'].juju_status.message = 'running pg-database-relation-joined hook for postgresql-k8s/0'
+ .apps['kratos'].units['kratos/0'].juju_status.message = 'running admin-ingress-relation-joined hook for traefik-admin/0'
- .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.current = 'executing'
- .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.message = 'running start hook'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.current = 'idle'
- .apps['traefik-public'].app_status.current = 'active'
+ .apps['traefik-public'].app_status.current = 'maintenance'
+ .apps['traefik-public'].app_status.message = "updating ingress configuration for 'ingress:15'"
- .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'active'
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'maintenance'
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.message = "updating ingress configuration for 'ingress:13'"
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['hydra'].units['hydra/0'].juju_status.current = 'idle'
+ .apps['hydra'].units['hydra/0'].juju_status.current = 'executing'
+ .apps['hydra'].units['hydra/0'].juju_status.message = 'running public-ingress-relation-changed hook'
- .apps['identity-platform-login-ui-operator'].app_status.current = 'waiting'
- .apps['identity-platform-login-ui-operator'].app_status.message = 'installing agent'
+ .apps['identity-platform-login-ui-operator'].app_status.current = 'maintenance'
+ .apps['identity-platform-login-ui-operator'].app_status.message = 'Configuration in progress'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.current = 'active'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.current = 'idle'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.current = 'maintenance'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.message = 'Configuration in progress'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.current = 'executing'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.message = 'running ingress-relation-changed hook'
- .apps['kratos'].units['kratos/0'].juju_status.current = 'executing'
- .apps['kratos'].units['kratos/0'].juju_status.message = 'running admin-ingress-relation-joined hook for traefik-admin/0'
+ .apps['kratos'].units['kratos/0'].juju_status.current = 'idle'
- .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.current = 'idle'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.current = 'executing'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.message = 'running django-app-pebble-ready hook'
- .apps['traefik-public'].app_status.current = 'maintenance'
- .apps['traefik-public'].app_status.message = "updating ingress configuration for 'ingress:15'"
+ .apps['traefik-public'].app_status.current = 'active'
- .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'maintenance'
- .apps['traefik-public'].units['traefik-public/0'].workload_status.message = "updating ingress configuration for 'ingress:13'"
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'active'
- .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running certificates-relation-changed hook for self-signed-certificates/0'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running ingress-relation-changed hook'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['hydra'].units['hydra/0'].juju_status.current = 'executing'
- .apps['hydra'].units['hydra/0'].juju_status.message = 'running public-ingress-relation-changed hook'
+ .apps['hydra'].units['hydra/0'].juju_status.current = 'idle'
- .apps['kratos'].units['kratos/0'].juju_status.current = 'idle'
+ .apps['kratos'].units['kratos/0'].juju_status.current = 'executing'
+ .apps['kratos'].units['kratos/0'].juju_status.message = 'running public-ingress-relation-changed hook'
- .apps['netbox-k8s'].app_status.current = 'waiting'
- .apps['netbox-k8s'].app_status.message = 'Waiting for pebble ready'
+ .apps['netbox-k8s'].app_status.current = 'blocked'
+ .apps['netbox-k8s'].app_status.message = 'missing integrations: postgresql, redis, s3'
- .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.current = 'waiting'
- .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.message = 'Waiting for pebble ready'
- .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.current = 'executing'
- .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.message = 'running django-app-pebble-ready hook'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.current = 'blocked'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.message = 'missing integrations: postgresql, redis, s3'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.current = 'idle'
+ .apps['redis-k8s'].provider_id = 'a0f6c953-9435-4323-b907-f5f72b580b40'
+ .apps['redis-k8s'].address = '10.152.183.158'
- .apps['traefik-admin'].app_status.current = 'active'
+ .apps['traefik-admin'].app_status.current = 'maintenance'
+ .apps['traefik-admin'].app_status.message = "updating ingress configuration for 'ingress:12'"
- .apps['traefik-admin'].units['traefik-admin/0'].workload_status.current = 'active'
+ .apps['traefik-admin'].units['traefik-admin/0'].workload_status.current = 'maintenance'
+ .apps['traefik-admin'].units['traefik-admin/0'].workload_status.message = 'updating ingress configurations'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['identity-platform-login-ui-operator'].app_status.current = 'maintenance'
- .apps['identity-platform-login-ui-operator'].app_status.message = 'Configuration in progress'
+ .apps['identity-platform-login-ui-operator'].app_status.current = 'active'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.current = 'maintenance'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.message = 'Configuration in progress'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.current = 'executing'
- .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.message = 'running ingress-relation-changed hook'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.current = 'active'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.current = 'idle'
- .apps['kratos'].units['kratos/0'].juju_status.message = 'running public-ingress-relation-changed hook'
+ .apps['kratos'].units['kratos/0'].juju_status.message = 'running admin-ingress-relation-changed hook for traefik-admin/0'
- .apps['traefik-admin'].app_status.current = 'maintenance'
- .apps['traefik-admin'].app_status.message = "updating ingress configuration for 'ingress:12'"
+ .apps['traefik-admin'].app_status.current = 'active'
- .apps['traefik-admin'].units['traefik-admin/0'].workload_status.current = 'maintenance'
- .apps['traefik-admin'].units['traefik-admin/0'].workload_status.message = 'updating ingress configurations'
+ .apps['traefik-admin'].units['traefik-admin/0'].workload_status.current = 'active'
- .apps['traefik-admin'].units['traefik-admin/0'].juju_status.message = 'running certificates-relation-changed hook'
+ .apps['traefik-admin'].units['traefik-admin/0'].juju_status.message = 'running ingress-relation-changed hook for hydra/0'
- .apps['traefik-public'].app_status.current = 'active'
+ .apps['traefik-public'].app_status.current = 'maintenance'
+ .apps['traefik-public'].app_status.message = "updating ingress configuration for 'ingress:15'"
- .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'active'
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'maintenance'
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.message = "updating ingress configuration for 'ingress:15'"
- .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running ingress-relation-changed hook'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running ingress-relation-joined hook for hydra/0'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].units['kratos/0'].juju_status.message = 'running admin-ingress-relation-changed hook for traefik-admin/0'
+ .apps['kratos'].units['kratos/0'].juju_status.message = 'running pg-database-relation-changed hook for postgresql-k8s/0'
- .apps['postgresql-k8s'].app_status.message = 'awaiting for cluster to start'
+ .apps['postgresql-k8s'].app_status.message = 'awaiting for primary endpoint to be ready'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'awaiting for cluster to start'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'awaiting for primary endpoint to be ready'
- .apps['traefik-public'].app_status.current = 'maintenance'
- .apps['traefik-public'].app_status.message = "updating ingress configuration for 'ingress:15'"
+ .apps['traefik-public'].app_status.current = 'active'
- .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'maintenance'
- .apps['traefik-public'].units['traefik-public/0'].workload_status.message = "updating ingress configuration for 'ingress:15'"
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'active'
- .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running ingress-relation-joined hook for hydra/0'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running ingress-relation-changed hook for hydra/0'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running start hook'
- .apps['traefik-admin'].units['traefik-admin/0'].juju_status.message = 'running ingress-relation-changed hook for hydra/0'
+ .apps['traefik-admin'].units['traefik-admin/0'].juju_status.message = 'running ingress-relation-changed hook'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].units['kratos/0'].juju_status.message = 'running pg-database-relation-changed hook for postgresql-k8s/0'
+ .apps['kratos'].units['kratos/0'].juju_status.message = 'running public-ingress-relation-joined hook for traefik-public/0'
- .apps['traefik-public'].app_status.current = 'active'
+ .apps['traefik-public'].app_status.current = 'maintenance'
+ .apps['traefik-public'].app_status.message = "updating ingress configuration for 'ingress:16'"
- .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'active'
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'maintenance'
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.message = "updating ingress configuration for 'ingress:15'"
- .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running ingress-relation-changed hook for hydra/0'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running ingress-relation-joined hook for kratos/0'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].units['kratos/0'].juju_status.message = 'running public-ingress-relation-joined hook for traefik-public/0'
+ .apps['kratos'].units['kratos/0'].juju_status.message = 'running public-ingress-relation-changed hook for traefik-public/0'
+ .apps['minio'].units['minio/0'].address = '10.1.0.166'
- .apps['traefik-admin'].app_status.current = 'active'
+ .apps['traefik-admin'].app_status.current = 'maintenance'
+ .apps['traefik-admin'].app_status.message = "updating ingress configuration for 'ingress:14'"
- .apps['traefik-admin'].units['traefik-admin/0'].workload_status.current = 'active'
+ .apps['traefik-admin'].units['traefik-admin/0'].workload_status.current = 'maintenance'
+ .apps['traefik-admin'].units['traefik-admin/0'].workload_status.message = "updating ingress configuration for 'ingress:14'"
- .apps['traefik-admin'].units['traefik-admin/0'].juju_status.message = 'running ingress-relation-changed hook'
+ .apps['traefik-admin'].units['traefik-admin/0'].juju_status.message = 'running ingress-relation-joined hook for kratos/0'
- .apps['traefik-public'].app_status.current = 'maintenance'
- .apps['traefik-public'].app_status.message = "updating ingress configuration for 'ingress:16'"
+ .apps['traefik-public'].app_status.current = 'active'
- .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'maintenance'
- .apps['traefik-public'].units['traefik-public/0'].workload_status.message = "updating ingress configuration for 'ingress:15'"
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'active'
- .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running ingress-relation-joined hook for kratos/0'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running ingress-relation-changed hook for kratos/0'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].units['kratos/0'].juju_status.message = 'running public-ingress-relation-changed hook for traefik-public/0'
+ .apps['kratos'].units['kratos/0'].juju_status.message = 'running ui-endpoint-info-relation-joined hook for identity-platform-login-ui-operator/0'
- .apps['traefik-admin'].app_status.current = 'maintenance'
- .apps['traefik-admin'].app_status.message = "updating ingress configuration for 'ingress:14'"
+ .apps['traefik-admin'].app_status.current = 'active'
- .apps['traefik-admin'].units['traefik-admin/0'].workload_status.current = 'maintenance'
- .apps['traefik-admin'].units['traefik-admin/0'].workload_status.message = "updating ingress configuration for 'ingress:14'"
+ .apps['traefik-admin'].units['traefik-admin/0'].workload_status.current = 'active'
- .apps['traefik-admin'].units['traefik-admin/0'].juju_status.message = 'running ingress-relation-joined hook for kratos/0'
+ .apps['traefik-admin'].units['traefik-admin/0'].juju_status.message = 'running ingress-relation-changed hook for kratos/0'
- .apps['traefik-public'].app_status.current = 'active'
+ .apps['traefik-public'].app_status.current = 'waiting'
+ .apps['traefik-public'].app_status.message = 'installing agent'
- .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running ingress-relation-changed hook for kratos/0'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running ingress-relation-joined hook for identity-platform-login-ui-operator/0'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].units['kratos/0'].juju_status.message = 'running ui-endpoint-info-relation-joined hook for identity-platform-login-ui-operator/0'
+ .apps['kratos'].units['kratos/0'].juju_status.message = 'running ui-endpoint-info-relation-changed hook for identity-platform-login-ui-operator/0'
- .apps['redis-k8s'].app_status.message = 'installing agent'
+ .apps['redis-k8s'].app_status.message = 'agent initialising'
- .apps['redis-k8s'].units['redis-k8s/0'].workload_status.message = 'installing agent'
+ .apps['redis-k8s'].units['redis-k8s/0'].workload_status.message = 'agent initialising'
+ .apps['redis-k8s'].units['redis-k8s/0'].juju_status.version = '3.6.11'
+ .apps['redis-k8s'].units['redis-k8s/0'].leader = True
+ .apps['redis-k8s'].units['redis-k8s/0'].provider_id = 'redis-k8s-0'
- .apps['traefik-admin'].units['traefik-admin/0'].juju_status.message = 'running ingress-relation-changed hook for kratos/0'
+ .apps['traefik-admin'].units['traefik-admin/0'].juju_status.message = 'running certificates-relation-changed hook for self-signed-certificates/0'
- .apps['traefik-public'].app_status.current = 'waiting'
- .apps['traefik-public'].app_status.message = 'installing agent'
+ .apps['traefik-public'].app_status.current = 'maintenance'
+ .apps['traefik-public'].app_status.message = "updating ingress configuration for 'ingress:16'"
- .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'active'
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'maintenance'
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.message = "updating ingress configuration for 'ingress:15'"
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].units['kratos/0'].juju_status.message = 'running ui-endpoint-info-relation-changed hook for identity-platform-login-ui-operator/0'
+ .apps['kratos'].units['kratos/0'].juju_status.message = 'running admin-ingress-relation-changed hook'
- .apps['traefik-admin'].units['traefik-admin/0'].juju_status.current = 'executing'
- .apps['traefik-admin'].units['traefik-admin/0'].juju_status.message = 'running certificates-relation-changed hook for self-signed-certificates/0'
+ .apps['traefik-admin'].units['traefik-admin/0'].juju_status.current = 'idle'
- .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'maintenance'
- .apps['traefik-public'].units['traefik-public/0'].workload_status.message = "updating ingress configuration for 'ingress:15'"
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'active'
- .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running ingress-relation-joined hook for identity-platform-login-ui-operator/0'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running ingress-relation-changed hook for identity-platform-login-ui-operator/0'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].units['kratos/0'].juju_status.message = 'running admin-ingress-relation-changed hook'
+ .apps['kratos'].units['kratos/0'].juju_status.message = 'running hydra-endpoint-info-relation-changed hook for hydra/0'
- .apps['redis-k8s'].app_status.current = 'waiting'
- .apps['redis-k8s'].app_status.message = 'agent initialising'
+ .apps['redis-k8s'].app_status.current = 'maintenance'
+ .apps['redis-k8s'].app_status.message = 'installing charm software'
- .apps['redis-k8s'].units['redis-k8s/0'].workload_status.current = 'waiting'
- .apps['redis-k8s'].units['redis-k8s/0'].workload_status.message = 'agent initialising'
- .apps['redis-k8s'].units['redis-k8s/0'].juju_status.current = 'allocating'
+ .apps['redis-k8s'].units['redis-k8s/0'].workload_status.current = 'maintenance'
+ .apps['redis-k8s'].units['redis-k8s/0'].workload_status.message = 'installing charm software'
+ .apps['redis-k8s'].units['redis-k8s/0'].juju_status.current = 'executing'
+ .apps['redis-k8s'].units['redis-k8s/0'].juju_status.message = 'running redis-peers-relation-created hook'
- .apps['traefik-public'].app_status.current = 'maintenance'
- .apps['traefik-public'].app_status.message = "updating ingress configuration for 'ingress:16'"
+ .apps['traefik-public'].app_status.current = 'waiting'
+ .apps['traefik-public'].app_status.message = 'installing agent'
- .apps['traefik-public'].units['traefik-public/0'].juju_status.current = 'executing'
- .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running ingress-relation-changed hook for identity-platform-login-ui-operator/0'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.current = 'idle'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].units['kratos/0'].juju_status.current = 'executing'
- .apps['kratos'].units['kratos/0'].juju_status.message = 'running hydra-endpoint-info-relation-changed hook for hydra/0'
+ .apps['kratos'].units['kratos/0'].juju_status.current = 'idle'
- .apps['redis-k8s'].units['redis-k8s/0'].juju_status.message = 'running redis-peers-relation-created hook'
+ .apps['redis-k8s'].units['redis-k8s/0'].juju_status.message = 'running config-changed hook'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['redis-k8s'].app_status.current = 'maintenance'
- .apps['redis-k8s'].app_status.message = 'installing charm software'
+ .apps['redis-k8s'].app_status.current = 'waiting'
+ .apps['redis-k8s'].app_status.message = 'installing agent'
- .apps['redis-k8s'].units['redis-k8s/0'].workload_status.current = 'maintenance'
- .apps['redis-k8s'].units['redis-k8s/0'].workload_status.message = 'installing charm software'
+ .apps['redis-k8s'].units['redis-k8s/0'].workload_status.current = 'active'
- .apps['traefik-public'].app_status.current = 'waiting'
- .apps['traefik-public'].app_status.message = 'installing agent'
+ .apps['traefik-public'].app_status.current = 'active'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
+ .apps['redis-k8s'].version = '7.2.5'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['minio'].app_status.current = 'waiting'
- .apps['minio'].app_status.message = 'waiting for container'
- .apps['minio'].units['minio/0'].workload_status.current = 'waiting'
- .apps['minio'].units['minio/0'].workload_status.message = 'waiting for container'
+ .apps['minio'].app_status.current = 'active'
+ .apps['minio'].units['minio/0'].workload_status.current = 'active'
- .apps['redis-k8s'].units['redis-k8s/0'].juju_status.message = 'running config-changed hook'
+ .apps['redis-k8s'].units['redis-k8s/0'].juju_status.message = 'running sentinel-pebble-ready hook'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['redis-k8s'].units['redis-k8s/0'].juju_status.message = 'running sentinel-pebble-ready hook'
+ .apps['redis-k8s'].units['redis-k8s/0'].juju_status.message = 'running redis-peers-relation-changed hook'
[32mINFO    [0m jubilant:_juju.py:237 cli: juju status --model testing --format json
[32mINFO    [0m jubilant:_juju.py:237 cli: juju status --model testing --format json
[32mINFO    [0m jubilant:_juju.py:237 cli: juju deploy --model testing s3-integrator --channel edge
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
+ .model.name = 'testing'
+ .model.type = 'caas'
+ .model.controller = 'github-pr-4e773-k8s'
+ .model.cloud = 'k8s'
+ .model.version = '3.6.11'
+ .model.model_status.current = 'available'
+ .apps['hydra'].charm = 'hydra'
+ .apps['hydra'].charm_origin = 'charmhub'
+ .apps['hydra'].charm_name = 'hydra'
+ .apps['hydra'].charm_rev = 339
+ .apps['hydra'].exposed = False
+ .apps['hydra'].base.name = 'ubuntu'
+ .apps['hydra'].base.channel = '22.04'
+ .apps['hydra'].charm_channel = 'latest/edge'
+ .apps['hydra'].scale = 1
+ .apps['hydra'].provider_id = 'c9932940-d4fd-467c-a8bf-e08a916a8a37'
+ .apps['hydra'].address = '10.152.183.165'
+ .apps['hydra'].app_status.current = 'waiting'
+ .apps['hydra'].app_status.message = 'Waiting for database creation'
+ .apps['hydra'].relations['admin-ingress'][0].related_app = 'traefik-admin'
+ .apps['hydra'].relations['admin-ingress'][0].interface = 'ingress'
+ .apps['hydra'].relations['admin-ingress'][0].scope = 'global'
+ .apps['hydra'].relations['hydra'][0].related_app = 'hydra'
+ .apps['hydra'].relations['hydra'][0].interface = 'hydra_peers'
+ .apps['hydra'].relations['hydra'][0].scope = 'global'
+ .apps['hydra'].relations['hydra-endpoint-info'][0].related_app = 'identity-platform-login-ui-operator'
+ .apps['hydra'].relations['hydra-endpoint-info'][0].interface = 'hydra_endpoints'
+ .apps['hydra'].relations['hydra-endpoint-info'][0].scope = 'global'
+ .apps['hydra'].relations['hydra-endpoint-info'][1].related_app = 'kratos'
+ .apps['hydra'].relations['hydra-endpoint-info'][1].interface = 'hydra_endpoints'
+ .apps['hydra'].relations['hydra-endpoint-info'][1].scope = 'global'
+ .apps['hydra'].relations['pg-database'][0].related_app = 'postgresql-k8s'
+ .apps['hydra'].relations['pg-database'][0].interface = 'postgresql_client'
+ .apps['hydra'].relations['pg-database'][0].scope = 'global'
+ .apps['hydra'].relations['public-ingress'][0].related_app = 'traefik-public'
+ .apps['hydra'].relations['public-ingress'][0].interface = 'ingress'
+ .apps['hydra'].relations['public-ingress'][0].scope = 'global'
+ .apps['hydra'].relations['ui-endpoint-info'][0].related_app = 'identity-platform-login-ui-operator'
+ .apps['hydra'].relations['ui-endpoint-info'][0].interface = 'login_ui_endpoints'
+ .apps['hydra'].relations['ui-endpoint-info'][0].scope = 'global'
+ .apps['hydra'].units['hydra/0'].workload_status.current = 'waiting'
+ .apps['hydra'].units['hydra/0'].workload_status.message = 'Waiting for database creation'
+ .apps['hydra'].units['hydra/0'].juju_status.current = 'idle'
+ .apps['hydra'].units['hydra/0'].juju_status.version = '3.6.11'
+ .apps['hydra'].units['hydra/0'].leader = True
+ .apps['hydra'].units['hydra/0'].address = '10.1.0.60'
+ .apps['hydra'].units['hydra/0'].provider_id = 'hydra-0'
+ .apps['hydra'].version = 'v2.3.0'
+ .apps['hydra'].endpoint_bindings[''] = 'alpha'
+ .apps['hydra'].endpoint_bindings['admin-ingress'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['hydra'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['hydra-endpoint-info'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['internal-ingress'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['logging'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['oauth'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['pg-database'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['public-ingress'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['ui-endpoint-info'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].charm = 'identity-platform-login-ui-operator'
+ .apps['identity-platform-login-ui-operator'].charm_origin = 'charmhub'
+ .apps['identity-platform-login-ui-operator'].charm_name = 'identity-platform-login-ui-operator'
+ .apps['identity-platform-login-ui-operator'].charm_rev = 146
+ .apps['identity-platform-login-ui-operator'].exposed = False
+ .apps['identity-platform-login-ui-operator'].base.name = 'ubuntu'
+ .apps['identity-platform-login-ui-operator'].base.channel = '22.04'
+ .apps['identity-platform-login-ui-operator'].charm_channel = 'latest/edge'
+ .apps['identity-platform-login-ui-operator'].scale = 1
+ .apps['identity-platform-login-ui-operator'].provider_id = 'e8830dfd-5e57-40b8-b304-4fe45061ec76'
+ .apps['identity-platform-login-ui-operator'].address = '10.152.183.73'
+ .apps['identity-platform-login-ui-operator'].app_status.current = 'active'
+ .apps['identity-platform-login-ui-operator'].relations['hydra-endpoint-info'][0].related_app = 'hydra'
+ .apps['identity-platform-login-ui-operator'].relations['hydra-endpoint-info'][0].interface = 'hydra_endpoints'
+ .apps['identity-platform-login-ui-operator'].relations['hydra-endpoint-info'][0].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].relations['identity-platform-login-ui'][0].related_app = 'identity-platform-login-ui-operator'
+ .apps['identity-platform-login-ui-operator'].relations['identity-platform-login-ui'][0].interface = 'identity_platform_login_ui_peers'
+ .apps['identity-platform-login-ui-operator'].relations['identity-platform-login-ui'][0].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].relations['ingress'][0].related_app = 'traefik-public'
+ .apps['identity-platform-login-ui-operator'].relations['ingress'][0].interface = 'ingress'
+ .apps['identity-platform-login-ui-operator'].relations['ingress'][0].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].relations['kratos-info'][0].related_app = 'kratos'
+ .apps['identity-platform-login-ui-operator'].relations['kratos-info'][0].interface = 'kratos_info'
+ .apps['identity-platform-login-ui-operator'].relations['kratos-info'][0].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][0].related_app = 'hydra'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][0].interface = 'login_ui_endpoints'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][0].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][1].related_app = 'kratos'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][1].interface = 'login_ui_endpoints'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][1].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.current = 'active'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.current = 'idle'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.version = '3.6.11'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].leader = True
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].address = '10.1.0.179'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].provider_id = 'identity-platform-login-ui-operator-0'
+ .apps['identity-platform-login-ui-operator'].version = '0.23.0'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings[''] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['hydra-endpoint-info'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['identity-platform-login-ui'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['kratos-info'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['logging'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['ui-endpoint-info'] = 'alpha'
+ .apps['kratos'].charm = 'kratos'
+ .apps['kratos'].charm_origin = 'charmhub'
+ .apps['kratos'].charm_name = 'kratos'
+ .apps['kratos'].charm_rev = 500
+ .apps['kratos'].exposed = False
+ .apps['kratos'].base.name = 'ubuntu'
+ .apps['kratos'].base.channel = '22.04'
+ .apps['kratos'].charm_channel = 'latest/edge'
+ .apps['kratos'].scale = 1
+ .apps['kratos'].provider_id = '330d3311-c78e-40d5-98c9-659fdca0a410'
+ .apps['kratos'].address = '10.152.183.127'
+ .apps['kratos'].app_status.current = 'waiting'
+ .apps['kratos'].app_status.message = 'Waiting for database creation'
+ .apps['kratos'].relations['admin-ingress'][0].related_app = 'traefik-admin'
+ .apps['kratos'].relations['admin-ingress'][0].interface = 'ingress'
+ .apps['kratos'].relations['admin-ingress'][0].scope = 'global'
+ .apps['kratos'].relations['hydra-endpoint-info'][0].related_app = 'hydra'
+ .apps['kratos'].relations['hydra-endpoint-info'][0].interface = 'hydra_endpoints'
+ .apps['kratos'].relations['hydra-endpoint-info'][0].scope = 'global'
+ .apps['kratos'].relations['kratos-info'][0].related_app = 'identity-platform-login-ui-operator'
+ .apps['kratos'].relations['kratos-info'][0].interface = 'kratos_info'
+ .apps['kratos'].relations['kratos-info'][0].scope = 'global'
+ .apps['kratos'].relations['kratos-peers'][0].related_app = 'kratos'
+ .apps['kratos'].relations['kratos-peers'][0].interface = 'kratos-peers'
+ .apps['kratos'].relations['kratos-peers'][0].scope = 'global'
+ .apps['kratos'].relations['pg-database'][0].related_app = 'postgresql-k8s'
+ .apps['kratos'].relations['pg-database'][0].interface = 'postgresql_client'
+ .apps['kratos'].relations['pg-database'][0].scope = 'global'
+ .apps['kratos'].relations['public-ingress'][0].related_app = 'traefik-public'
+ .apps['kratos'].relations['public-ingress'][0].interface = 'ingress'
+ .apps['kratos'].relations['public-ingress'][0].scope = 'global'
+ .apps['kratos'].relations['ui-endpoint-info'][0].related_app = 'identity-platform-login-ui-operator'
+ .apps['kratos'].relations['ui-endpoint-info'][0].interface = 'login_ui_endpoints'
+ .apps['kratos'].relations['ui-endpoint-info'][0].scope = 'global'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'waiting'
+ .apps['kratos'].units['kratos/0'].workload_status.message = 'Waiting for database creation'
+ .apps['kratos'].units['kratos/0'].juju_status.current = 'idle'
+ .apps['kratos'].units['kratos/0'].juju_status.version = '3.6.11'
+ .apps['kratos'].units['kratos/0'].leader = True
+ .apps['kratos'].units['kratos/0'].address = '10.1.0.185'
+ .apps['kratos'].units['kratos/0'].provider_id = 'kratos-0'
+ .apps['kratos'].version = 'v1.3.1'
+ .apps['kratos'].endpoint_bindings[''] = 'alpha'
+ .apps['kratos'].endpoint_bindings['admin-ingress'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['hydra-endpoint-info'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['internal-ingress'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['kratos-external-idp'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['kratos-info'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['kratos-peers'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['logging'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['pg-database'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['public-ingress'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['smtp'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['ui-endpoint-info'] = 'alpha'
+ .apps['minio'].charm = 'minio'
+ .apps['minio'].charm_origin = 'charmhub'
+ .apps['minio'].charm_name = 'minio'
+ .apps['minio'].charm_rev = 583
+ .apps['minio'].exposed = False
+ .apps['minio'].base.name = 'ubuntu'
+ .apps['minio'].base.channel = '20.04'
+ .apps['minio'].charm_channel = 'ckf-1.10/stable'
+ .apps['minio'].scale = 1
+ .apps['minio'].provider_id = '07f2c2b4-c870-47c0-a621-140a62891ef1'
+ .apps['minio'].address = '10.152.183.147'
+ .apps['minio'].app_status.current = 'active'
+ .apps['minio'].units['minio/0'].workload_status.current = 'active'
+ .apps['minio'].units['minio/0'].juju_status.current = 'idle'
+ .apps['minio'].units['minio/0'].leader = True
+ .apps['minio'].units['minio/0'].open_ports[0] = '9000/TCP'
+ .apps['minio'].units['minio/0'].open_ports[1] = '9001/TCP'
+ .apps['minio'].units['minio/0'].address = '10.1.0.166'
+ .apps['minio'].units['minio/0'].provider_id = 'minio-0'
+ .apps['minio'].version = 'registry.jujucharms.com/charm/81j63o4a2ldarn1umc22iyjz1q9l9g0sx5b8j/oci-image@sha256:7f2474f60a02f11dc3294542a97092bd2392b91d526c7e7c70648c0b9d3b68ab'
+ .apps['minio'].endpoint_bindings[''] = 'alpha'
+ .apps['minio'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['minio'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['minio'].endpoint_bindings['object-storage'] = 'alpha'
+ .apps['netbox-k8s'].charm = 'local:netbox-k8s-0'
+ .apps['netbox-k8s'].charm_origin = 'local'
+ .apps['netbox-k8s'].charm_name = 'netbox-k8s'
+ .apps['netbox-k8s'].charm_rev = 0
+ .apps['netbox-k8s'].exposed = False
+ .apps['netbox-k8s'].base.name = 'ubuntu'
+ .apps['netbox-k8s'].base.channel = '24.04'
+ .apps['netbox-k8s'].scale = 1
+ .apps['netbox-k8s'].provider_id = 'b6a3bce4-9d0b-4425-8386-57b74bc8c746'
+ .apps['netbox-k8s'].address = '10.152.183.234'
+ .apps['netbox-k8s'].app_status.current = 'blocked'
+ .apps['netbox-k8s'].app_status.message = 'missing integrations: postgresql, redis, s3'
+ .apps['netbox-k8s'].relations['secret-storage'][0].related_app = 'netbox-k8s'
+ .apps['netbox-k8s'].relations['secret-storage'][0].interface = 'secret-storage'
+ .apps['netbox-k8s'].relations['secret-storage'][0].scope = 'global'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.current = 'blocked'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.message = 'missing integrations: postgresql, redis, s3'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.current = 'idle'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.version = '3.6.11'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].leader = True
+ .apps['netbox-k8s'].units['netbox-k8s/0'].address = '10.1.0.109'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].provider_id = 'netbox-k8s-0'
+ .apps['netbox-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['oidc'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['postgresql'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['redis'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['s3'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['saml'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['secret-storage'] = 'alpha'
+ .apps['postgresql-k8s'].charm = 'postgresql-k8s'
+ .apps['postgresql-k8s'].charm_origin = 'charmhub'
+ .apps['postgresql-k8s'].charm_name = 'postgresql-k8s'
+ .apps['postgresql-k8s'].charm_rev = 495
+ .apps['postgresql-k8s'].exposed = False
+ .apps['postgresql-k8s'].base.name = 'ubuntu'
+ .apps['postgresql-k8s'].base.channel = '22.04'
+ .apps['postgresql-k8s'].charm_channel = '14/stable'
+ .apps['postgresql-k8s'].scale = 1
+ .apps['postgresql-k8s'].provider_id = 'fdd775ef-8073-4c22-b82c-12c012e645ff'
+ .apps['postgresql-k8s'].address = '10.152.183.146'
+ .apps['postgresql-k8s'].app_status.current = 'waiting'
+ .apps['postgresql-k8s'].app_status.message = 'awaiting for primary endpoint to be ready'
+ .apps['postgresql-k8s'].relations['database'][0].related_app = 'hydra'
+ .apps['postgresql-k8s'].relations['database'][0].interface = 'postgresql_client'
+ .apps['postgresql-k8s'].relations['database'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['database'][1].related_app = 'kratos'
+ .apps['postgresql-k8s'].relations['database'][1].interface = 'postgresql_client'
+ .apps['postgresql-k8s'].relations['database'][1].scope = 'global'
+ .apps['postgresql-k8s'].relations['database-peers'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['database-peers'][0].interface = 'postgresql_peers'
+ .apps['postgresql-k8s'].relations['database-peers'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['restart'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['restart'][0].interface = 'rolling_op'
+ .apps['postgresql-k8s'].relations['restart'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['upgrade'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['upgrade'][0].interface = 'upgrade'
+ .apps['postgresql-k8s'].relations['upgrade'][0].scope = 'global'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'waiting'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'awaiting for primary endpoint to be ready'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running start hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.version = '3.6.11'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].leader = True
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].address = '10.1.0.93'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].provider_id = 'postgresql-k8s-0'
+ .apps['postgresql-k8s'].version = '14.15'
+ .apps['postgresql-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['database'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['database-peers'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['db'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['db-admin'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['replication'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['replication-offer'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['restart'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['s3-parameters'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['upgrade'] = 'alpha'
+ .apps['redis-k8s'].charm = 'redis-k8s'
+ .apps['redis-k8s'].charm_origin = 'charmhub'
+ .apps['redis-k8s'].charm_name = 'redis-k8s'
+ .apps['redis-k8s'].charm_rev = 42
+ .apps['redis-k8s'].exposed = False
+ .apps['redis-k8s'].base.name = 'ubuntu'
+ .apps['redis-k8s'].base.channel = '22.04'
+ .apps['redis-k8s'].charm_channel = 'latest/edge'
+ .apps['redis-k8s'].scale = 1
+ .apps['redis-k8s'].provider_id = 'a0f6c953-9435-4323-b907-f5f72b580b40'
+ .apps['redis-k8s'].address = '10.152.183.158'
+ .apps['redis-k8s'].app_status.current = 'active'
+ .apps['redis-k8s'].relations['redis-peers'][0].related_app = 'redis-k8s'
+ .apps['redis-k8s'].relations['redis-peers'][0].interface = 'redis-peers'
+ .apps['redis-k8s'].relations['redis-peers'][0].scope = 'global'
+ .apps['redis-k8s'].units['redis-k8s/0'].workload_status.current = 'active'
+ .apps['redis-k8s'].units['redis-k8s/0'].juju_status.current = 'idle'
+ .apps['redis-k8s'].units['redis-k8s/0'].juju_status.version = '3.6.11'
+ .apps['redis-k8s'].units['redis-k8s/0'].leader = True
+ .apps['redis-k8s'].units['redis-k8s/0'].address = '10.1.0.18'
+ .apps['redis-k8s'].units['redis-k8s/0'].provider_id = 'redis-k8s-0'
+ .apps['redis-k8s'].version = '7.2.5'
+ .apps['redis-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['redis-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['redis-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['redis-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['redis-k8s'].endpoint_bindings['redis'] = 'alpha'
+ .apps['redis-k8s'].endpoint_bindings['redis-peers'] = 'alpha'
+ .apps['s3-integrator'].charm = 's3-integrator'
+ .apps['s3-integrator'].charm_origin = 'charmhub'
+ .apps['s3-integrator'].charm_name = 's3-integrator'
+ .apps['s3-integrator'].charm_rev = 241
+ .apps['s3-integrator'].exposed = False
+ .apps['s3-integrator'].base.name = 'ubuntu'
+ .apps['s3-integrator'].base.channel = '22.04'
+ .apps['s3-integrator'].charm_channel = '1/edge'
+ .apps['s3-integrator'].scale = 1
+ .apps['s3-integrator'].app_status.current = 'waiting'
+ .apps['s3-integrator'].app_status.message = 'installing agent'
+ .apps['s3-integrator'].relations['s3-integrator-peers'][0].related_app = 's3-integrator'
+ .apps['s3-integrator'].relations['s3-integrator-peers'][0].interface = 's3-integrator-peers'
+ .apps['s3-integrator'].relations['s3-integrator-peers'][0].scope = 'global'
+ .apps['s3-integrator'].units['s3-integrator/0'].workload_status.current = 'waiting'
+ .apps['s3-integrator'].units['s3-integrator/0'].workload_status.message = 'installing agent'
+ .apps['s3-integrator'].units['s3-integrator/0'].juju_status.current = 'allocating'
+ .apps['s3-integrator'].endpoint_bindings[''] = 'alpha'
+ .apps['s3-integrator'].endpoint_bindings['s3-credentials'] = 'alpha'
+ .apps['s3-integrator'].endpoint_bindings['s3-integrator-peers'] = 'alpha'
+ .apps['self-signed-certificates'].charm = 'self-signed-certificates'
+ .apps['self-signed-certificates'].charm_origin = 'charmhub'
+ .apps['self-signed-certificates'].charm_name = 'self-signed-certificates'
+ .apps['self-signed-certificates'].charm_rev = 155
+ .apps['self-signed-certificates'].exposed = False
+ .apps['self-signed-certificates'].base.name = 'ubuntu'
+ .apps['self-signed-certificates'].base.channel = '22.04'
+ .apps['self-signed-certificates'].charm_channel = 'latest/stable'
+ .apps['self-signed-certificates'].scale = 1
+ .apps['self-signed-certificates'].provider_id = 'de6fa780-bd65-4444-9cf1-01356d85b9dd'
+ .apps['self-signed-certificates'].address = '10.152.183.49'
+ .apps['self-signed-certificates'].app_status.current = 'active'
+ .apps['self-signed-certificates'].relations['certificates'][0].related_app = 'traefik-admin'
+ .apps['self-signed-certificates'].relations['certificates'][0].interface = 'tls-certificates'
+ .apps['self-signed-certificates'].relations['certificates'][0].scope = 'global'
+ .apps['self-signed-certificates'].relations['certificates'][1].related_app = 'traefik-public'
+ .apps['self-signed-certificates'].relations['certificates'][1].interface = 'tls-certificates'
+ .apps['self-signed-certificates'].relations['certificates'][1].scope = 'global'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].workload_status.current = 'active'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.current = 'idle'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.version = '3.6.11'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].leader = True
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].address = '10.1.0.208'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].provider_id = 'self-signed-certificates-0'
+ .apps['self-signed-certificates'].endpoint_bindings[''] = 'alpha'
+ .apps['self-signed-certificates'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['self-signed-certificates'].endpoint_bindings['send-ca-cert'] = 'alpha'
+ .apps['self-signed-certificates'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['traefik-admin'].charm = 'traefik-k8s'
+ .apps['traefik-admin'].charm_origin = 'charmhub'
+ .apps['traefik-admin'].charm_name = 'traefik-k8s'
+ .apps['traefik-admin'].charm_rev = 176
+ .apps['traefik-admin'].exposed = False
+ .apps['traefik-admin'].base.name = 'ubuntu'
+ .apps['traefik-admin'].base.channel = '20.04'
+ .apps['traefik-admin'].charm_channel = 'latest/stable'
+ .apps['traefik-admin'].scale = 1
+ .apps['traefik-admin'].provider_id = '58738bb5-00ae-4843-ac1d-d35b2b83bbc4'
+ .apps['traefik-admin'].address = '10.151.33.101'
+ .apps['traefik-admin'].app_status.current = 'active'
+ .apps['traefik-admin'].relations['certificates'][0].related_app = 'self-signed-certificates'
+ .apps['traefik-admin'].relations['certificates'][0].interface = 'tls-certificates'
+ .apps['traefik-admin'].relations['certificates'][0].scope = 'global'
+ .apps['traefik-admin'].relations['ingress'][0].related_app = 'hydra'
+ .apps['traefik-admin'].relations['ingress'][0].interface = 'ingress'
+ .apps['traefik-admin'].relations['ingress'][0].scope = 'global'
+ .apps['traefik-admin'].relations['ingress'][1].related_app = 'kratos'
+ .apps['traefik-admin'].relations['ingress'][1].interface = 'ingress'
+ .apps['traefik-admin'].relations['ingress'][1].scope = 'global'
+ .apps['traefik-admin'].relations['peers'][0].related_app = 'traefik-admin'
+ .apps['traefik-admin'].relations['peers'][0].interface = 'traefik_peers'
+ .apps['traefik-admin'].relations['peers'][0].scope = 'global'
+ .apps['traefik-admin'].units['traefik-admin/0'].workload_status.current = 'active'
+ .apps['traefik-admin'].units['traefik-admin/0'].juju_status.current = 'idle'
+ .apps['traefik-admin'].units['traefik-admin/0'].juju_status.version = '3.6.11'
+ .apps['traefik-admin'].units['traefik-admin/0'].leader = True
+ .apps['traefik-admin'].units['traefik-admin/0'].address = '10.1.0.245'
+ .apps['traefik-admin'].units['traefik-admin/0'].provider_id = 'traefik-admin-0'
+ .apps['traefik-admin'].version = 'v2.11.0'
+ .apps['traefik-admin'].endpoint_bindings[''] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['experimental-forward-auth'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['ingress-per-unit'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['logging'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['peers'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['traefik-route'] = 'alpha'
+ .apps['traefik-public'].charm = 'traefik-k8s'
+ .apps['traefik-public'].charm_origin = 'charmhub'
+ .apps['traefik-public'].charm_name = 'traefik-k8s'
+ .apps['traefik-public'].charm_rev = 176
+ .apps['traefik-public'].exposed = False
+ .apps['traefik-public'].base.name = 'ubuntu'
+ .apps['traefik-public'].base.channel = '20.04'
+ .apps['traefik-public'].charm_channel = 'latest/stable'
+ .apps['traefik-public'].scale = 1
+ .apps['traefik-public'].provider_id = '386420e4-d882-482d-8eff-6b485fdd6a4d'
+ .apps['traefik-public'].address = '10.151.33.100'
+ .apps['traefik-public'].app_status.current = 'active'
+ .apps['traefik-public'].relations['certificates'][0].related_app = 'self-signed-certificates'
+ .apps['traefik-public'].relations['certificates'][0].interface = 'tls-certificates'
+ .apps['traefik-public'].relations['certificates'][0].scope = 'global'
+ .apps['traefik-public'].relations['ingress'][0].related_app = 'hydra'
+ .apps['traefik-public'].relations['ingress'][0].interface = 'ingress'
+ .apps['traefik-public'].relations['ingress'][0].scope = 'global'
+ .apps['traefik-public'].relations['ingress'][1].related_app = 'identity-platform-login-ui-operator'
+ .apps['traefik-public'].relations['ingress'][1].interface = 'ingress'
+ .apps['traefik-public'].relations['ingress'][1].scope = 'global'
+ .apps['traefik-public'].relations['ingress'][2].related_app = 'kratos'
+ .apps['traefik-public'].relations['ingress'][2].interface = 'ingress'
+ .apps['traefik-public'].relations['ingress'][2].scope = 'global'
+ .apps['traefik-public'].relations['peers'][0].related_app = 'traefik-public'
+ .apps['traefik-public'].relations['peers'][0].interface = 'traefik_peers'
+ .apps['traefik-public'].relations['peers'][0].scope = 'global'
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'active'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.current = 'idle'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.version = '3.6.11'
+ .apps['traefik-public'].units['traefik-public/0'].leader = True
+ .apps['traefik-public'].units['traefik-public/0'].address = '10.1.0.210'
+ .apps['traefik-public'].units['traefik-public/0'].provider_id = 'traefik-public-0'
+ .apps['traefik-public'].version = 'v2.11.0'
+ .apps['traefik-public'].endpoint_bindings[''] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['experimental-forward-auth'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['ingress-per-unit'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['logging'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['peers'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['traefik-route'] = 'alpha'
+ .storage.storage['configurations/1'].kind = 'filesystem'
+ .storage.storage['configurations/1'].status.current = 'attached'
+ .storage.storage['configurations/1'].status.message = 'Successfully provisioned volume pvc-7e5ff3f1-669a-4468-bb94-b983e2653f2e'
+ .storage.storage['configurations/1'].persistent = False
+ .storage.storage['configurations/1'].life = 'alive'
+ .storage.storage['configurations/1'].attachments.units['traefik-admin/0'].life = 'alive'
+ .storage.storage['configurations/2'].kind = 'filesystem'
+ .storage.storage['configurations/2'].status.current = 'attached'
+ .storage.storage['configurations/2'].status.message = 'Successfully provisioned volume pvc-ef51600c-2a8f-4e17-9871-a2cef1111232'
+ .storage.storage['configurations/2'].persistent = False
+ .storage.storage['configurations/2'].life = 'alive'
+ .storage.storage['configurations/2'].attachments.units['traefik-public/0'].life = 'alive'
+ .storage.storage['database/3'].kind = 'filesystem'
+ .storage.storage['database/3'].status.current = 'attached'
+ .storage.storage['database/3'].status.message = 'Successfully provisioned volume pvc-3dd3240a-fc08-484d-bdfa-97347ed5d239'
+ .storage.storage['database/3'].persistent = False
+ .storage.storage['database/3'].life = 'alive'
+ .storage.storage['database/3'].attachments.units['redis-k8s/0'].life = 'alive'
+ .storage.storage['minio-data/4'].kind = 'filesystem'
+ .storage.storage['minio-data/4'].status.current = 'attached'
+ .storage.storage['minio-data/4'].status.message = 'Successfully provisioned volume pvc-3b2acca8-fa18-4790-841a-bd5d148f2538'
+ .storage.storage['minio-data/4'].persistent = False
+ .storage.storage['minio-data/4'].life = 'alive'
+ .storage.storage['minio-data/4'].attachments.units['minio/0'].life = 'alive'
+ .storage.storage['pgdata/0'].kind = 'filesystem'
+ .storage.storage['pgdata/0'].status.current = 'attached'
+ .storage.storage['pgdata/0'].status.message = 'Successfully provisioned volume pvc-ffd89206-1078-4875-92a4-f6432d40247b'
+ .storage.storage['pgdata/0'].persistent = False
+ .storage.storage['pgdata/0'].life = 'alive'
+ .storage.storage['pgdata/0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].size = 1024
+ .storage.filesystems['0'].provider_id = 'ffd89206-1078-4875-92a4-f6432d40247b'
+ .storage.filesystems['0'].volume = '0'
+ .storage.filesystems['0'].storage = 'pgdata/0'
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].mount_point = '/var/lib/postgresql/data'
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].read_only = False
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].pool = 'kubernetes'
+ .storage.filesystems['0'].life = 'alive'
+ .storage.filesystems['0'].status.current = 'attached'
+ .storage.filesystems['0'].status.message = 'Successfully provisioned volume pvc-ffd89206-1078-4875-92a4-f6432d40247b'
+ .storage.filesystems['1'].size = 1024
+ .storage.filesystems['1'].provider_id = '7e5ff3f1-669a-4468-bb94-b983e2653f2e'
+ .storage.filesystems['1'].volume = '1'
+ .storage.filesystems['1'].storage = 'configurations/1'
+ .storage.filesystems['1'].attachments.containers['traefik-admin/0'].mount_point = '/var/lib/juju/storage/configurations/0'
+ .storage.filesystems['1'].attachments.containers['traefik-admin/0'].read_only = False
+ .storage.filesystems['1'].attachments.containers['traefik-admin/0'].life = 'alive'
+ .storage.filesystems['1'].attachments.units['traefik-admin/0'].life = 'alive'
+ .storage.filesystems['1'].pool = 'kubernetes'
+ .storage.filesystems['1'].life = 'alive'
+ .storage.filesystems['1'].status.current = 'attached'
+ .storage.filesystems['1'].status.message = 'Successfully provisioned volume pvc-7e5ff3f1-669a-4468-bb94-b983e2653f2e'
+ .storage.filesystems['2'].size = 1024
+ .storage.filesystems['2'].provider_id = 'ef51600c-2a8f-4e17-9871-a2cef1111232'
+ .storage.filesystems['2'].volume = '2'
+ .storage.filesystems['2'].storage = 'configurations/2'
+ .storage.filesystems['2'].attachments.containers['traefik-public/0'].mount_point = '/var/lib/juju/storage/configurations/0'
+ .storage.filesystems['2'].attachments.containers['traefik-public/0'].read_only = False
+ .storage.filesystems['2'].attachments.containers['traefik-public/0'].life = 'alive'
+ .storage.filesystems['2'].attachments.units['traefik-public/0'].life = 'alive'
+ .storage.filesystems['2'].pool = 'kubernetes'
+ .storage.filesystems['2'].life = 'alive'
+ .storage.filesystems['2'].status.current = 'attached'
+ .storage.filesystems['2'].status.message = 'Successfully provisioned volume pvc-ef51600c-2a8f-4e17-9871-a2cef1111232'
+ .storage.filesystems['3'].size = 1024
+ .storage.filesystems['3'].provider_id = '3dd3240a-fc08-484d-bdfa-97347ed5d239'
+ .storage.filesystems['3'].volume = '3'
+ .storage.filesystems['3'].storage = 'database/3'
+ .storage.filesystems['3'].attachments.containers['redis-k8s/0'].mount_point = '/var/lib/redis'
+ .storage.filesystems['3'].attachments.containers['redis-k8s/0'].read_only = False
+ .storage.filesystems['3'].attachments.containers['redis-k8s/0'].life = 'alive'
+ .storage.filesystems['3'].attachments.units['redis-k8s/0'].life = 'alive'
+ .storage.filesystems['3'].pool = 'kubernetes'
+ .storage.filesystems['3'].life = 'alive'
+ .storage.filesystems['3'].status.current = 'attached'
+ .storage.filesystems['3'].status.message = 'Successfully provisioned volume pvc-3dd3240a-fc08-484d-bdfa-97347ed5d239'
+ .storage.filesystems['4'].size = 31
+ .storage.filesystems['4'].provider_id = '3b2acca8-fa18-4790-841a-bd5d148f2538'
+ .storage.filesystems['4'].volume = '4'
+ .storage.filesystems['4'].storage = 'minio-data/4'
+ .storage.filesystems['4'].attachments.containers['minio/0'].mount_point = '/data'
+ .storage.filesystems['4'].attachments.containers['minio/0'].read_only = False
+ .storage.filesystems['4'].attachments.containers['minio/0'].life = 'alive'
+ .storage.filesystems['4'].attachments.units['minio/0'].life = 'alive'
+ .storage.filesystems['4'].pool = 'kubernetes'
+ .storage.filesystems['4'].life = 'alive'
+ .storage.filesystems['4'].status.current = 'attached'
+ .storage.filesystems['4'].status.message = 'Successfully provisioned volume pvc-3b2acca8-fa18-4790-841a-bd5d148f2538'
+ .storage.volumes['0'].size = 1024
+ .storage.volumes['0'].persistent = True
+ .storage.volumes['0'].provider_id = 'pvc-ffd89206-1078-4875-92a4-f6432d40247b'
+ .storage.volumes['0'].storage = 'pgdata/0'
+ .storage.volumes['0'].attachments.containers['postgresql-k8s/0'].read_only = False
+ .storage.volumes['0'].attachments.containers['postgresql-k8s/0'].life = 'alive'
+ .storage.volumes['0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.volumes['0'].pool = 'kubernetes'
+ .storage.volumes['0'].life = 'alive'
+ .storage.volumes['0'].status.current = 'attached'
+ .storage.volumes['1'].size = 1024
+ .storage.volumes['1'].persistent = True
+ .storage.volumes['1'].provider_id = 'pvc-7e5ff3f1-669a-4468-bb94-b983e2653f2e'
+ .storage.volumes['1'].storage = 'configurations/1'
+ .storage.volumes['1'].attachments.containers['traefik-admin/0'].read_only = False
+ .storage.volumes['1'].attachments.containers['traefik-admin/0'].life = 'alive'
+ .storage.volumes['1'].attachments.units['traefik-admin/0'].life = 'alive'
+ .storage.volumes['1'].pool = 'kubernetes'
+ .storage.volumes['1'].life = 'alive'
+ .storage.volumes['1'].status.current = 'attached'
+ .storage.volumes['2'].size = 1024
+ .storage.volumes['2'].persistent = True
+ .storage.volumes['2'].provider_id = 'pvc-ef51600c-2a8f-4e17-9871-a2cef1111232'
+ .storage.volumes['2'].storage = 'configurations/2'
+ .storage.volumes['2'].attachments.containers['traefik-public/0'].read_only = False
+ .storage.volumes['2'].attachments.containers['traefik-public/0'].life = 'alive'
+ .storage.volumes['2'].attachments.units['traefik-public/0'].life = 'alive'
+ .storage.volumes['2'].pool = 'kubernetes'
+ .storage.volumes['2'].life = 'alive'
+ .storage.volumes['2'].status.current = 'attached'
+ .storage.volumes['3'].size = 1024
+ .storage.volumes['3'].persistent = True
+ .storage.volumes['3'].provider_id = 'pvc-3dd3240a-fc08-484d-bdfa-97347ed5d239'
+ .storage.volumes['3'].storage = 'database/3'
+ .storage.volumes['3'].attachments.containers['redis-k8s/0'].read_only = False
+ .storage.volumes['3'].attachments.containers['redis-k8s/0'].life = 'alive'
+ .storage.volumes['3'].attachments.units['redis-k8s/0'].life = 'alive'
+ .storage.volumes['3'].pool = 'kubernetes'
+ .storage.volumes['3'].life = 'alive'
+ .storage.volumes['3'].status.current = 'attached'
+ .storage.volumes['4'].size = 1694
+ .storage.volumes['4'].persistent = True
+ .storage.volumes['4'].provider_id = 'pvc-3b2acca8-fa18-4790-841a-bd5d148f2538'
+ .storage.volumes['4'].storage = 'minio-data/4'
+ .storage.volumes['4'].attachments.containers['minio/0'].read_only = False
+ .storage.volumes['4'].attachments.containers['minio/0'].life = 'alive'
+ .storage.volumes['4'].attachments.units['minio/0'].life = 'alive'
+ .storage.volumes['4'].pool = 'kubernetes'
+ .storage.volumes['4'].life = 'alive'
+ .storage.volumes['4'].status.current = 'attached'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running start hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
+ .apps['s3-integrator'].provider_id = '6bc35fa8-698c-4015-8e3b-dc5ee72050de'
+ .apps['s3-integrator'].address = '10.152.183.62'
- .apps['s3-integrator'].app_status.message = 'installing agent'
+ .apps['s3-integrator'].app_status.message = 'agent initialising'
- .apps['s3-integrator'].units['s3-integrator/0'].workload_status.message = 'installing agent'
+ .apps['s3-integrator'].units['s3-integrator/0'].workload_status.message = 'agent initialising'
+ .apps['s3-integrator'].units['s3-integrator/0'].juju_status.version = '3.6.11'
+ .apps['s3-integrator'].units['s3-integrator/0'].leader = True
+ .apps['s3-integrator'].units['s3-integrator/0'].address = '10.1.0.189'
+ .apps['s3-integrator'].units['s3-integrator/0'].provider_id = 's3-integrator-0'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['s3-integrator'].app_status.current = 'waiting'
- .apps['s3-integrator'].app_status.message = 'agent initialising'
+ .apps['s3-integrator'].app_status.current = 'maintenance'
+ .apps['s3-integrator'].app_status.message = 'installing charm software'
- .apps['s3-integrator'].units['s3-integrator/0'].workload_status.current = 'waiting'
- .apps['s3-integrator'].units['s3-integrator/0'].workload_status.message = 'agent initialising'
- .apps['s3-integrator'].units['s3-integrator/0'].juju_status.current = 'allocating'
+ .apps['s3-integrator'].units['s3-integrator/0'].workload_status.current = 'maintenance'
+ .apps['s3-integrator'].units['s3-integrator/0'].workload_status.message = 'installing charm software'
+ .apps['s3-integrator'].units['s3-integrator/0'].juju_status.current = 'executing'
+ .apps['s3-integrator'].units['s3-integrator/0'].juju_status.message = 'running leader-elected hook'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['s3-integrator'].app_status.current = 'maintenance'
- .apps['s3-integrator'].app_status.message = 'installing charm software'
+ .apps['s3-integrator'].app_status.current = 'blocked'
+ .apps['s3-integrator'].app_status.message = "Missing parameters: ['access-key', 'secret-key']"
- .apps['s3-integrator'].units['s3-integrator/0'].workload_status.current = 'maintenance'
- .apps['s3-integrator'].units['s3-integrator/0'].workload_status.message = 'installing charm software'
- .apps['s3-integrator'].units['s3-integrator/0'].juju_status.current = 'executing'
- .apps['s3-integrator'].units['s3-integrator/0'].juju_status.message = 'running leader-elected hook'
+ .apps['s3-integrator'].units['s3-integrator/0'].workload_status.current = 'blocked'
+ .apps['s3-integrator'].units['s3-integrator/0'].workload_status.message = "Missing parameters: ['access-key', 'secret-key']"
+ .apps['s3-integrator'].units['s3-integrator/0'].juju_status.current = 'idle'
[32mINFO    [0m jubilant:_juju.py:237 cli: juju status --model testing --format json
[32mINFO    [0m jubilant:_juju.py:237 cli: juju config --model testing s3-integrator endpoint=http://10.1.0.166:9000 bucket=netboxbucket path=/ region=us-east-1 s3-uri-style=path
[32mINFO    [0m jubilant:_juju.py:237 cli: juju run --model testing --format json s3-integrator/0 sync-s3-credentials --params /home/ubuntu/snap/juju/common/tmppsppfp06
[32mINFO    [0m jubilant:_juju.py:237 cli: juju integrate --model testing netbox-k8s:s3 s3-integrator
[32mINFO    [0m jubilant:_juju.py:237 cli: juju integrate --model testing netbox-k8s:postgresql postgresql-k8s
[32mINFO    [0m jubilant:_juju.py:237 cli: juju integrate --model testing netbox-k8s:redis redis-k8s
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
+ .model.name = 'testing'
+ .model.type = 'caas'
+ .model.controller = 'github-pr-4e773-k8s'
+ .model.cloud = 'k8s'
+ .model.version = '3.6.11'
+ .model.model_status.current = 'available'
+ .apps['hydra'].charm = 'hydra'
+ .apps['hydra'].charm_origin = 'charmhub'
+ .apps['hydra'].charm_name = 'hydra'
+ .apps['hydra'].charm_rev = 339
+ .apps['hydra'].exposed = False
+ .apps['hydra'].base.name = 'ubuntu'
+ .apps['hydra'].base.channel = '22.04'
+ .apps['hydra'].charm_channel = 'latest/edge'
+ .apps['hydra'].scale = 1
+ .apps['hydra'].provider_id = 'c9932940-d4fd-467c-a8bf-e08a916a8a37'
+ .apps['hydra'].address = '10.152.183.165'
+ .apps['hydra'].app_status.current = 'waiting'
+ .apps['hydra'].app_status.message = 'Waiting for database creation'
+ .apps['hydra'].relations['admin-ingress'][0].related_app = 'traefik-admin'
+ .apps['hydra'].relations['admin-ingress'][0].interface = 'ingress'
+ .apps['hydra'].relations['admin-ingress'][0].scope = 'global'
+ .apps['hydra'].relations['hydra'][0].related_app = 'hydra'
+ .apps['hydra'].relations['hydra'][0].interface = 'hydra_peers'
+ .apps['hydra'].relations['hydra'][0].scope = 'global'
+ .apps['hydra'].relations['hydra-endpoint-info'][0].related_app = 'identity-platform-login-ui-operator'
+ .apps['hydra'].relations['hydra-endpoint-info'][0].interface = 'hydra_endpoints'
+ .apps['hydra'].relations['hydra-endpoint-info'][0].scope = 'global'
+ .apps['hydra'].relations['hydra-endpoint-info'][1].related_app = 'kratos'
+ .apps['hydra'].relations['hydra-endpoint-info'][1].interface = 'hydra_endpoints'
+ .apps['hydra'].relations['hydra-endpoint-info'][1].scope = 'global'
+ .apps['hydra'].relations['pg-database'][0].related_app = 'postgresql-k8s'
+ .apps['hydra'].relations['pg-database'][0].interface = 'postgresql_client'
+ .apps['hydra'].relations['pg-database'][0].scope = 'global'
+ .apps['hydra'].relations['public-ingress'][0].related_app = 'traefik-public'
+ .apps['hydra'].relations['public-ingress'][0].interface = 'ingress'
+ .apps['hydra'].relations['public-ingress'][0].scope = 'global'
+ .apps['hydra'].relations['ui-endpoint-info'][0].related_app = 'identity-platform-login-ui-operator'
+ .apps['hydra'].relations['ui-endpoint-info'][0].interface = 'login_ui_endpoints'
+ .apps['hydra'].relations['ui-endpoint-info'][0].scope = 'global'
+ .apps['hydra'].units['hydra/0'].workload_status.current = 'waiting'
+ .apps['hydra'].units['hydra/0'].workload_status.message = 'Waiting for database creation'
+ .apps['hydra'].units['hydra/0'].juju_status.current = 'idle'
+ .apps['hydra'].units['hydra/0'].juju_status.version = '3.6.11'
+ .apps['hydra'].units['hydra/0'].leader = True
+ .apps['hydra'].units['hydra/0'].address = '10.1.0.60'
+ .apps['hydra'].units['hydra/0'].provider_id = 'hydra-0'
+ .apps['hydra'].version = 'v2.3.0'
+ .apps['hydra'].endpoint_bindings[''] = 'alpha'
+ .apps['hydra'].endpoint_bindings['admin-ingress'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['hydra'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['hydra-endpoint-info'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['internal-ingress'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['logging'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['oauth'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['pg-database'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['public-ingress'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['ui-endpoint-info'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].charm = 'identity-platform-login-ui-operator'
+ .apps['identity-platform-login-ui-operator'].charm_origin = 'charmhub'
+ .apps['identity-platform-login-ui-operator'].charm_name = 'identity-platform-login-ui-operator'
+ .apps['identity-platform-login-ui-operator'].charm_rev = 146
+ .apps['identity-platform-login-ui-operator'].exposed = False
+ .apps['identity-platform-login-ui-operator'].base.name = 'ubuntu'
+ .apps['identity-platform-login-ui-operator'].base.channel = '22.04'
+ .apps['identity-platform-login-ui-operator'].charm_channel = 'latest/edge'
+ .apps['identity-platform-login-ui-operator'].scale = 1
+ .apps['identity-platform-login-ui-operator'].provider_id = 'e8830dfd-5e57-40b8-b304-4fe45061ec76'
+ .apps['identity-platform-login-ui-operator'].address = '10.152.183.73'
+ .apps['identity-platform-login-ui-operator'].app_status.current = 'active'
+ .apps['identity-platform-login-ui-operator'].relations['hydra-endpoint-info'][0].related_app = 'hydra'
+ .apps['identity-platform-login-ui-operator'].relations['hydra-endpoint-info'][0].interface = 'hydra_endpoints'
+ .apps['identity-platform-login-ui-operator'].relations['hydra-endpoint-info'][0].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].relations['identity-platform-login-ui'][0].related_app = 'identity-platform-login-ui-operator'
+ .apps['identity-platform-login-ui-operator'].relations['identity-platform-login-ui'][0].interface = 'identity_platform_login_ui_peers'
+ .apps['identity-platform-login-ui-operator'].relations['identity-platform-login-ui'][0].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].relations['ingress'][0].related_app = 'traefik-public'
+ .apps['identity-platform-login-ui-operator'].relations['ingress'][0].interface = 'ingress'
+ .apps['identity-platform-login-ui-operator'].relations['ingress'][0].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].relations['kratos-info'][0].related_app = 'kratos'
+ .apps['identity-platform-login-ui-operator'].relations['kratos-info'][0].interface = 'kratos_info'
+ .apps['identity-platform-login-ui-operator'].relations['kratos-info'][0].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][0].related_app = 'hydra'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][0].interface = 'login_ui_endpoints'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][0].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][1].related_app = 'kratos'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][1].interface = 'login_ui_endpoints'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][1].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.current = 'active'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.current = 'idle'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.version = '3.6.11'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].leader = True
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].address = '10.1.0.179'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].provider_id = 'identity-platform-login-ui-operator-0'
+ .apps['identity-platform-login-ui-operator'].version = '0.23.0'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings[''] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['hydra-endpoint-info'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['identity-platform-login-ui'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['kratos-info'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['logging'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['ui-endpoint-info'] = 'alpha'
+ .apps['kratos'].charm = 'kratos'
+ .apps['kratos'].charm_origin = 'charmhub'
+ .apps['kratos'].charm_name = 'kratos'
+ .apps['kratos'].charm_rev = 500
+ .apps['kratos'].exposed = False
+ .apps['kratos'].base.name = 'ubuntu'
+ .apps['kratos'].base.channel = '22.04'
+ .apps['kratos'].charm_channel = 'latest/edge'
+ .apps['kratos'].scale = 1
+ .apps['kratos'].provider_id = '330d3311-c78e-40d5-98c9-659fdca0a410'
+ .apps['kratos'].address = '10.152.183.127'
+ .apps['kratos'].app_status.current = 'waiting'
+ .apps['kratos'].app_status.message = 'Waiting for database creation'
+ .apps['kratos'].relations['admin-ingress'][0].related_app = 'traefik-admin'
+ .apps['kratos'].relations['admin-ingress'][0].interface = 'ingress'
+ .apps['kratos'].relations['admin-ingress'][0].scope = 'global'
+ .apps['kratos'].relations['hydra-endpoint-info'][0].related_app = 'hydra'
+ .apps['kratos'].relations['hydra-endpoint-info'][0].interface = 'hydra_endpoints'
+ .apps['kratos'].relations['hydra-endpoint-info'][0].scope = 'global'
+ .apps['kratos'].relations['kratos-info'][0].related_app = 'identity-platform-login-ui-operator'
+ .apps['kratos'].relations['kratos-info'][0].interface = 'kratos_info'
+ .apps['kratos'].relations['kratos-info'][0].scope = 'global'
+ .apps['kratos'].relations['kratos-peers'][0].related_app = 'kratos'
+ .apps['kratos'].relations['kratos-peers'][0].interface = 'kratos-peers'
+ .apps['kratos'].relations['kratos-peers'][0].scope = 'global'
+ .apps['kratos'].relations['pg-database'][0].related_app = 'postgresql-k8s'
+ .apps['kratos'].relations['pg-database'][0].interface = 'postgresql_client'
+ .apps['kratos'].relations['pg-database'][0].scope = 'global'
+ .apps['kratos'].relations['public-ingress'][0].related_app = 'traefik-public'
+ .apps['kratos'].relations['public-ingress'][0].interface = 'ingress'
+ .apps['kratos'].relations['public-ingress'][0].scope = 'global'
+ .apps['kratos'].relations['ui-endpoint-info'][0].related_app = 'identity-platform-login-ui-operator'
+ .apps['kratos'].relations['ui-endpoint-info'][0].interface = 'login_ui_endpoints'
+ .apps['kratos'].relations['ui-endpoint-info'][0].scope = 'global'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'waiting'
+ .apps['kratos'].units['kratos/0'].workload_status.message = 'Waiting for database creation'
+ .apps['kratos'].units['kratos/0'].juju_status.current = 'idle'
+ .apps['kratos'].units['kratos/0'].juju_status.version = '3.6.11'
+ .apps['kratos'].units['kratos/0'].leader = True
+ .apps['kratos'].units['kratos/0'].address = '10.1.0.185'
+ .apps['kratos'].units['kratos/0'].provider_id = 'kratos-0'
+ .apps['kratos'].version = 'v1.3.1'
+ .apps['kratos'].endpoint_bindings[''] = 'alpha'
+ .apps['kratos'].endpoint_bindings['admin-ingress'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['hydra-endpoint-info'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['internal-ingress'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['kratos-external-idp'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['kratos-info'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['kratos-peers'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['logging'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['pg-database'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['public-ingress'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['smtp'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['ui-endpoint-info'] = 'alpha'
+ .apps['minio'].charm = 'minio'
+ .apps['minio'].charm_origin = 'charmhub'
+ .apps['minio'].charm_name = 'minio'
+ .apps['minio'].charm_rev = 583
+ .apps['minio'].exposed = False
+ .apps['minio'].base.name = 'ubuntu'
+ .apps['minio'].base.channel = '20.04'
+ .apps['minio'].charm_channel = 'ckf-1.10/stable'
+ .apps['minio'].scale = 1
+ .apps['minio'].provider_id = '07f2c2b4-c870-47c0-a621-140a62891ef1'
+ .apps['minio'].address = '10.152.183.147'
+ .apps['minio'].app_status.current = 'active'
+ .apps['minio'].units['minio/0'].workload_status.current = 'active'
+ .apps['minio'].units['minio/0'].juju_status.current = 'idle'
+ .apps['minio'].units['minio/0'].leader = True
+ .apps['minio'].units['minio/0'].open_ports[0] = '9000/TCP'
+ .apps['minio'].units['minio/0'].open_ports[1] = '9001/TCP'
+ .apps['minio'].units['minio/0'].address = '10.1.0.166'
+ .apps['minio'].units['minio/0'].provider_id = 'minio-0'
+ .apps['minio'].version = 'registry.jujucharms.com/charm/81j63o4a2ldarn1umc22iyjz1q9l9g0sx5b8j/oci-image@sha256:7f2474f60a02f11dc3294542a97092bd2392b91d526c7e7c70648c0b9d3b68ab'
+ .apps['minio'].endpoint_bindings[''] = 'alpha'
+ .apps['minio'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['minio'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['minio'].endpoint_bindings['object-storage'] = 'alpha'
+ .apps['netbox-k8s'].charm = 'local:netbox-k8s-0'
+ .apps['netbox-k8s'].charm_origin = 'local'
+ .apps['netbox-k8s'].charm_name = 'netbox-k8s'
+ .apps['netbox-k8s'].charm_rev = 0
+ .apps['netbox-k8s'].exposed = False
+ .apps['netbox-k8s'].base.name = 'ubuntu'
+ .apps['netbox-k8s'].base.channel = '24.04'
+ .apps['netbox-k8s'].scale = 1
+ .apps['netbox-k8s'].provider_id = 'b6a3bce4-9d0b-4425-8386-57b74bc8c746'
+ .apps['netbox-k8s'].address = '10.152.183.234'
+ .apps['netbox-k8s'].app_status.current = 'blocked'
+ .apps['netbox-k8s'].app_status.message = 'missing integrations: postgresql, redis, s3'
+ .apps['netbox-k8s'].relations['postgresql'][0].related_app = 'postgresql-k8s'
+ .apps['netbox-k8s'].relations['postgresql'][0].interface = 'postgresql_client'
+ .apps['netbox-k8s'].relations['postgresql'][0].scope = 'global'
+ .apps['netbox-k8s'].relations['redis'][0].related_app = 'redis-k8s'
+ .apps['netbox-k8s'].relations['redis'][0].interface = 'redis'
+ .apps['netbox-k8s'].relations['redis'][0].scope = 'global'
+ .apps['netbox-k8s'].relations['s3'][0].related_app = 's3-integrator'
+ .apps['netbox-k8s'].relations['s3'][0].interface = 's3'
+ .apps['netbox-k8s'].relations['s3'][0].scope = 'global'
+ .apps['netbox-k8s'].relations['secret-storage'][0].related_app = 'netbox-k8s'
+ .apps['netbox-k8s'].relations['secret-storage'][0].interface = 'secret-storage'
+ .apps['netbox-k8s'].relations['secret-storage'][0].scope = 'global'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.current = 'blocked'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.message = 'missing integrations: postgresql, redis, s3'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.current = 'executing'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.message = 'running s3-relation-created hook'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.version = '3.6.11'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].leader = True
+ .apps['netbox-k8s'].units['netbox-k8s/0'].address = '10.1.0.109'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].provider_id = 'netbox-k8s-0'
+ .apps['netbox-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['oidc'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['postgresql'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['redis'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['s3'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['saml'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['secret-storage'] = 'alpha'
+ .apps['postgresql-k8s'].charm = 'postgresql-k8s'
+ .apps['postgresql-k8s'].charm_origin = 'charmhub'
+ .apps['postgresql-k8s'].charm_name = 'postgresql-k8s'
+ .apps['postgresql-k8s'].charm_rev = 495
+ .apps['postgresql-k8s'].exposed = False
+ .apps['postgresql-k8s'].base.name = 'ubuntu'
+ .apps['postgresql-k8s'].base.channel = '22.04'
+ .apps['postgresql-k8s'].charm_channel = '14/stable'
+ .apps['postgresql-k8s'].scale = 1
+ .apps['postgresql-k8s'].provider_id = 'fdd775ef-8073-4c22-b82c-12c012e645ff'
+ .apps['postgresql-k8s'].address = '10.152.183.146'
+ .apps['postgresql-k8s'].app_status.current = 'waiting'
+ .apps['postgresql-k8s'].app_status.message = 'awaiting for primary endpoint to be ready'
+ .apps['postgresql-k8s'].relations['database'][0].related_app = 'hydra'
+ .apps['postgresql-k8s'].relations['database'][0].interface = 'postgresql_client'
+ .apps['postgresql-k8s'].relations['database'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['database'][1].related_app = 'kratos'
+ .apps['postgresql-k8s'].relations['database'][1].interface = 'postgresql_client'
+ .apps['postgresql-k8s'].relations['database'][1].scope = 'global'
+ .apps['postgresql-k8s'].relations['database'][2].related_app = 'netbox-k8s'
+ .apps['postgresql-k8s'].relations['database'][2].interface = 'postgresql_client'
+ .apps['postgresql-k8s'].relations['database'][2].scope = 'global'
+ .apps['postgresql-k8s'].relations['database-peers'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['database-peers'][0].interface = 'postgresql_peers'
+ .apps['postgresql-k8s'].relations['database-peers'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['restart'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['restart'][0].interface = 'rolling_op'
+ .apps['postgresql-k8s'].relations['restart'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['upgrade'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['upgrade'][0].interface = 'upgrade'
+ .apps['postgresql-k8s'].relations['upgrade'][0].scope = 'global'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'waiting'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'awaiting for primary endpoint to be ready'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.version = '3.6.11'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].leader = True
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].address = '10.1.0.93'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].provider_id = 'postgresql-k8s-0'
+ .apps['postgresql-k8s'].version = '14.15'
+ .apps['postgresql-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['database'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['database-peers'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['db'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['db-admin'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['replication'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['replication-offer'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['restart'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['s3-parameters'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['upgrade'] = 'alpha'
+ .apps['redis-k8s'].charm = 'redis-k8s'
+ .apps['redis-k8s'].charm_origin = 'charmhub'
+ .apps['redis-k8s'].charm_name = 'redis-k8s'
+ .apps['redis-k8s'].charm_rev = 42
+ .apps['redis-k8s'].exposed = False
+ .apps['redis-k8s'].base.name = 'ubuntu'
+ .apps['redis-k8s'].base.channel = '22.04'
+ .apps['redis-k8s'].charm_channel = 'latest/edge'
+ .apps['redis-k8s'].scale = 1
+ .apps['redis-k8s'].provider_id = 'a0f6c953-9435-4323-b907-f5f72b580b40'
+ .apps['redis-k8s'].address = '10.152.183.158'
+ .apps['redis-k8s'].app_status.current = 'active'
+ .apps['redis-k8s'].relations['redis'][0].related_app = 'netbox-k8s'
+ .apps['redis-k8s'].relations['redis'][0].interface = 'redis'
+ .apps['redis-k8s'].relations['redis'][0].scope = 'global'
+ .apps['redis-k8s'].relations['redis-peers'][0].related_app = 'redis-k8s'
+ .apps['redis-k8s'].relations['redis-peers'][0].interface = 'redis-peers'
+ .apps['redis-k8s'].relations['redis-peers'][0].scope = 'global'
+ .apps['redis-k8s'].units['redis-k8s/0'].workload_status.current = 'active'
+ .apps['redis-k8s'].units['redis-k8s/0'].juju_status.current = 'executing'
+ .apps['redis-k8s'].units['redis-k8s/0'].juju_status.message = 'running redis-relation-created hook'
+ .apps['redis-k8s'].units['redis-k8s/0'].juju_status.version = '3.6.11'
+ .apps['redis-k8s'].units['redis-k8s/0'].leader = True
+ .apps['redis-k8s'].units['redis-k8s/0'].address = '10.1.0.18'
+ .apps['redis-k8s'].units['redis-k8s/0'].provider_id = 'redis-k8s-0'
+ .apps['redis-k8s'].version = '7.2.5'
+ .apps['redis-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['redis-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['redis-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['redis-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['redis-k8s'].endpoint_bindings['redis'] = 'alpha'
+ .apps['redis-k8s'].endpoint_bindings['redis-peers'] = 'alpha'
+ .apps['s3-integrator'].charm = 's3-integrator'
+ .apps['s3-integrator'].charm_origin = 'charmhub'
+ .apps['s3-integrator'].charm_name = 's3-integrator'
+ .apps['s3-integrator'].charm_rev = 241
+ .apps['s3-integrator'].exposed = False
+ .apps['s3-integrator'].base.name = 'ubuntu'
+ .apps['s3-integrator'].base.channel = '22.04'
+ .apps['s3-integrator'].charm_channel = '1/edge'
+ .apps['s3-integrator'].scale = 1
+ .apps['s3-integrator'].provider_id = '6bc35fa8-698c-4015-8e3b-dc5ee72050de'
+ .apps['s3-integrator'].address = '10.152.183.62'
+ .apps['s3-integrator'].app_status.current = 'active'
+ .apps['s3-integrator'].relations['s3-credentials'][0].related_app = 'netbox-k8s'
+ .apps['s3-integrator'].relations['s3-credentials'][0].interface = 's3'
+ .apps['s3-integrator'].relations['s3-credentials'][0].scope = 'global'
+ .apps['s3-integrator'].relations['s3-integrator-peers'][0].related_app = 's3-integrator'
+ .apps['s3-integrator'].relations['s3-integrator-peers'][0].interface = 's3-integrator-peers'
+ .apps['s3-integrator'].relations['s3-integrator-peers'][0].scope = 'global'
+ .apps['s3-integrator'].units['s3-integrator/0'].workload_status.current = 'active'
+ .apps['s3-integrator'].units['s3-integrator/0'].juju_status.current = 'executing'
+ .apps['s3-integrator'].units['s3-integrator/0'].juju_status.message = 'running s3-credentials-relation-joined hook for netbox-k8s/0'
+ .apps['s3-integrator'].units['s3-integrator/0'].juju_status.version = '3.6.11'
+ .apps['s3-integrator'].units['s3-integrator/0'].leader = True
+ .apps['s3-integrator'].units['s3-integrator/0'].address = '10.1.0.189'
+ .apps['s3-integrator'].units['s3-integrator/0'].provider_id = 's3-integrator-0'
+ .apps['s3-integrator'].endpoint_bindings[''] = 'alpha'
+ .apps['s3-integrator'].endpoint_bindings['s3-credentials'] = 'alpha'
+ .apps['s3-integrator'].endpoint_bindings['s3-integrator-peers'] = 'alpha'
+ .apps['self-signed-certificates'].charm = 'self-signed-certificates'
+ .apps['self-signed-certificates'].charm_origin = 'charmhub'
+ .apps['self-signed-certificates'].charm_name = 'self-signed-certificates'
+ .apps['self-signed-certificates'].charm_rev = 155
+ .apps['self-signed-certificates'].exposed = False
+ .apps['self-signed-certificates'].base.name = 'ubuntu'
+ .apps['self-signed-certificates'].base.channel = '22.04'
+ .apps['self-signed-certificates'].charm_channel = 'latest/stable'
+ .apps['self-signed-certificates'].scale = 1
+ .apps['self-signed-certificates'].provider_id = 'de6fa780-bd65-4444-9cf1-01356d85b9dd'
+ .apps['self-signed-certificates'].address = '10.152.183.49'
+ .apps['self-signed-certificates'].app_status.current = 'active'
+ .apps['self-signed-certificates'].relations['certificates'][0].related_app = 'traefik-admin'
+ .apps['self-signed-certificates'].relations['certificates'][0].interface = 'tls-certificates'
+ .apps['self-signed-certificates'].relations['certificates'][0].scope = 'global'
+ .apps['self-signed-certificates'].relations['certificates'][1].related_app = 'traefik-public'
+ .apps['self-signed-certificates'].relations['certificates'][1].interface = 'tls-certificates'
+ .apps['self-signed-certificates'].relations['certificates'][1].scope = 'global'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].workload_status.current = 'active'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.current = 'idle'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.version = '3.6.11'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].leader = True
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].address = '10.1.0.208'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].provider_id = 'self-signed-certificates-0'
+ .apps['self-signed-certificates'].endpoint_bindings[''] = 'alpha'
+ .apps['self-signed-certificates'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['self-signed-certificates'].endpoint_bindings['send-ca-cert'] = 'alpha'
+ .apps['self-signed-certificates'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['traefik-admin'].charm = 'traefik-k8s'
+ .apps['traefik-admin'].charm_origin = 'charmhub'
+ .apps['traefik-admin'].charm_name = 'traefik-k8s'
+ .apps['traefik-admin'].charm_rev = 176
+ .apps['traefik-admin'].exposed = False
+ .apps['traefik-admin'].base.name = 'ubuntu'
+ .apps['traefik-admin'].base.channel = '20.04'
+ .apps['traefik-admin'].charm_channel = 'latest/stable'
+ .apps['traefik-admin'].scale = 1
+ .apps['traefik-admin'].provider_id = '58738bb5-00ae-4843-ac1d-d35b2b83bbc4'
+ .apps['traefik-admin'].address = '10.151.33.101'
+ .apps['traefik-admin'].app_status.current = 'active'
+ .apps['traefik-admin'].relations['certificates'][0].related_app = 'self-signed-certificates'
+ .apps['traefik-admin'].relations['certificates'][0].interface = 'tls-certificates'
+ .apps['traefik-admin'].relations['certificates'][0].scope = 'global'
+ .apps['traefik-admin'].relations['ingress'][0].related_app = 'hydra'
+ .apps['traefik-admin'].relations['ingress'][0].interface = 'ingress'
+ .apps['traefik-admin'].relations['ingress'][0].scope = 'global'
+ .apps['traefik-admin'].relations['ingress'][1].related_app = 'kratos'
+ .apps['traefik-admin'].relations['ingress'][1].interface = 'ingress'
+ .apps['traefik-admin'].relations['ingress'][1].scope = 'global'
+ .apps['traefik-admin'].relations['peers'][0].related_app = 'traefik-admin'
+ .apps['traefik-admin'].relations['peers'][0].interface = 'traefik_peers'
+ .apps['traefik-admin'].relations['peers'][0].scope = 'global'
+ .apps['traefik-admin'].units['traefik-admin/0'].workload_status.current = 'active'
+ .apps['traefik-admin'].units['traefik-admin/0'].juju_status.current = 'idle'
+ .apps['traefik-admin'].units['traefik-admin/0'].juju_status.version = '3.6.11'
+ .apps['traefik-admin'].units['traefik-admin/0'].leader = True
+ .apps['traefik-admin'].units['traefik-admin/0'].address = '10.1.0.245'
+ .apps['traefik-admin'].units['traefik-admin/0'].provider_id = 'traefik-admin-0'
+ .apps['traefik-admin'].version = 'v2.11.0'
+ .apps['traefik-admin'].endpoint_bindings[''] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['experimental-forward-auth'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['ingress-per-unit'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['logging'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['peers'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['traefik-route'] = 'alpha'
+ .apps['traefik-public'].charm = 'traefik-k8s'
+ .apps['traefik-public'].charm_origin = 'charmhub'
+ .apps['traefik-public'].charm_name = 'traefik-k8s'
+ .apps['traefik-public'].charm_rev = 176
+ .apps['traefik-public'].exposed = False
+ .apps['traefik-public'].base.name = 'ubuntu'
+ .apps['traefik-public'].base.channel = '20.04'
+ .apps['traefik-public'].charm_channel = 'latest/stable'
+ .apps['traefik-public'].scale = 1
+ .apps['traefik-public'].provider_id = '386420e4-d882-482d-8eff-6b485fdd6a4d'
+ .apps['traefik-public'].address = '10.151.33.100'
+ .apps['traefik-public'].app_status.current = 'active'
+ .apps['traefik-public'].relations['certificates'][0].related_app = 'self-signed-certificates'
+ .apps['traefik-public'].relations['certificates'][0].interface = 'tls-certificates'
+ .apps['traefik-public'].relations['certificates'][0].scope = 'global'
+ .apps['traefik-public'].relations['ingress'][0].related_app = 'hydra'
+ .apps['traefik-public'].relations['ingress'][0].interface = 'ingress'
+ .apps['traefik-public'].relations['ingress'][0].scope = 'global'
+ .apps['traefik-public'].relations['ingress'][1].related_app = 'identity-platform-login-ui-operator'
+ .apps['traefik-public'].relations['ingress'][1].interface = 'ingress'
+ .apps['traefik-public'].relations['ingress'][1].scope = 'global'
+ .apps['traefik-public'].relations['ingress'][2].related_app = 'kratos'
+ .apps['traefik-public'].relations['ingress'][2].interface = 'ingress'
+ .apps['traefik-public'].relations['ingress'][2].scope = 'global'
+ .apps['traefik-public'].relations['peers'][0].related_app = 'traefik-public'
+ .apps['traefik-public'].relations['peers'][0].interface = 'traefik_peers'
+ .apps['traefik-public'].relations['peers'][0].scope = 'global'
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'active'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.current = 'idle'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.version = '3.6.11'
+ .apps['traefik-public'].units['traefik-public/0'].leader = True
+ .apps['traefik-public'].units['traefik-public/0'].address = '10.1.0.210'
+ .apps['traefik-public'].units['traefik-public/0'].provider_id = 'traefik-public-0'
+ .apps['traefik-public'].version = 'v2.11.0'
+ .apps['traefik-public'].endpoint_bindings[''] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['experimental-forward-auth'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['ingress-per-unit'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['logging'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['peers'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['traefik-route'] = 'alpha'
+ .storage.storage['configurations/1'].kind = 'filesystem'
+ .storage.storage['configurations/1'].status.current = 'attached'
+ .storage.storage['configurations/1'].status.message = 'Successfully provisioned volume pvc-7e5ff3f1-669a-4468-bb94-b983e2653f2e'
+ .storage.storage['configurations/1'].persistent = False
+ .storage.storage['configurations/1'].life = 'alive'
+ .storage.storage['configurations/1'].attachments.units['traefik-admin/0'].life = 'alive'
+ .storage.storage['configurations/2'].kind = 'filesystem'
+ .storage.storage['configurations/2'].status.current = 'attached'
+ .storage.storage['configurations/2'].status.message = 'Successfully provisioned volume pvc-ef51600c-2a8f-4e17-9871-a2cef1111232'
+ .storage.storage['configurations/2'].persistent = False
+ .storage.storage['configurations/2'].life = 'alive'
+ .storage.storage['configurations/2'].attachments.units['traefik-public/0'].life = 'alive'
+ .storage.storage['database/3'].kind = 'filesystem'
+ .storage.storage['database/3'].status.current = 'attached'
+ .storage.storage['database/3'].status.message = 'Successfully provisioned volume pvc-3dd3240a-fc08-484d-bdfa-97347ed5d239'
+ .storage.storage['database/3'].persistent = False
+ .storage.storage['database/3'].life = 'alive'
+ .storage.storage['database/3'].attachments.units['redis-k8s/0'].life = 'alive'
+ .storage.storage['minio-data/4'].kind = 'filesystem'
+ .storage.storage['minio-data/4'].status.current = 'attached'
+ .storage.storage['minio-data/4'].status.message = 'Successfully provisioned volume pvc-3b2acca8-fa18-4790-841a-bd5d148f2538'
+ .storage.storage['minio-data/4'].persistent = False
+ .storage.storage['minio-data/4'].life = 'alive'
+ .storage.storage['minio-data/4'].attachments.units['minio/0'].life = 'alive'
+ .storage.storage['pgdata/0'].kind = 'filesystem'
+ .storage.storage['pgdata/0'].status.current = 'attached'
+ .storage.storage['pgdata/0'].status.message = 'Successfully provisioned volume pvc-ffd89206-1078-4875-92a4-f6432d40247b'
+ .storage.storage['pgdata/0'].persistent = False
+ .storage.storage['pgdata/0'].life = 'alive'
+ .storage.storage['pgdata/0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].size = 1024
+ .storage.filesystems['0'].provider_id = 'ffd89206-1078-4875-92a4-f6432d40247b'
+ .storage.filesystems['0'].volume = '0'
+ .storage.filesystems['0'].storage = 'pgdata/0'
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].mount_point = '/var/lib/postgresql/data'
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].read_only = False
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].pool = 'kubernetes'
+ .storage.filesystems['0'].life = 'alive'
+ .storage.filesystems['0'].status.current = 'attached'
+ .storage.filesystems['0'].status.message = 'Successfully provisioned volume pvc-ffd89206-1078-4875-92a4-f6432d40247b'
+ .storage.filesystems['1'].size = 1024
+ .storage.filesystems['1'].provider_id = '7e5ff3f1-669a-4468-bb94-b983e2653f2e'
+ .storage.filesystems['1'].volume = '1'
+ .storage.filesystems['1'].storage = 'configurations/1'
+ .storage.filesystems['1'].attachments.containers['traefik-admin/0'].mount_point = '/var/lib/juju/storage/configurations/0'
+ .storage.filesystems['1'].attachments.containers['traefik-admin/0'].read_only = False
+ .storage.filesystems['1'].attachments.containers['traefik-admin/0'].life = 'alive'
+ .storage.filesystems['1'].attachments.units['traefik-admin/0'].life = 'alive'
+ .storage.filesystems['1'].pool = 'kubernetes'
+ .storage.filesystems['1'].life = 'alive'
+ .storage.filesystems['1'].status.current = 'attached'
+ .storage.filesystems['1'].status.message = 'Successfully provisioned volume pvc-7e5ff3f1-669a-4468-bb94-b983e2653f2e'
+ .storage.filesystems['2'].size = 1024
+ .storage.filesystems['2'].provider_id = 'ef51600c-2a8f-4e17-9871-a2cef1111232'
+ .storage.filesystems['2'].volume = '2'
+ .storage.filesystems['2'].storage = 'configurations/2'
+ .storage.filesystems['2'].attachments.containers['traefik-public/0'].mount_point = '/var/lib/juju/storage/configurations/0'
+ .storage.filesystems['2'].attachments.containers['traefik-public/0'].read_only = False
+ .storage.filesystems['2'].attachments.containers['traefik-public/0'].life = 'alive'
+ .storage.filesystems['2'].attachments.units['traefik-public/0'].life = 'alive'
+ .storage.filesystems['2'].pool = 'kubernetes'
+ .storage.filesystems['2'].life = 'alive'
+ .storage.filesystems['2'].status.current = 'attached'
+ .storage.filesystems['2'].status.message = 'Successfully provisioned volume pvc-ef51600c-2a8f-4e17-9871-a2cef1111232'
+ .storage.filesystems['3'].size = 1024
+ .storage.filesystems['3'].provider_id = '3dd3240a-fc08-484d-bdfa-97347ed5d239'
+ .storage.filesystems['3'].volume = '3'
+ .storage.filesystems['3'].storage = 'database/3'
+ .storage.filesystems['3'].attachments.containers['redis-k8s/0'].mount_point = '/var/lib/redis'
+ .storage.filesystems['3'].attachments.containers['redis-k8s/0'].read_only = False
+ .storage.filesystems['3'].attachments.containers['redis-k8s/0'].life = 'alive'
+ .storage.filesystems['3'].attachments.units['redis-k8s/0'].life = 'alive'
+ .storage.filesystems['3'].pool = 'kubernetes'
+ .storage.filesystems['3'].life = 'alive'
+ .storage.filesystems['3'].status.current = 'attached'
+ .storage.filesystems['3'].status.message = 'Successfully provisioned volume pvc-3dd3240a-fc08-484d-bdfa-97347ed5d239'
+ .storage.filesystems['4'].size = 31
+ .storage.filesystems['4'].provider_id = '3b2acca8-fa18-4790-841a-bd5d148f2538'
+ .storage.filesystems['4'].volume = '4'
+ .storage.filesystems['4'].storage = 'minio-data/4'
+ .storage.filesystems['4'].attachments.containers['minio/0'].mount_point = '/data'
+ .storage.filesystems['4'].attachments.containers['minio/0'].read_only = False
+ .storage.filesystems['4'].attachments.containers['minio/0'].life = 'alive'
+ .storage.filesystems['4'].attachments.units['minio/0'].life = 'alive'
+ .storage.filesystems['4'].pool = 'kubernetes'
+ .storage.filesystems['4'].life = 'alive'
+ .storage.filesystems['4'].status.current = 'attached'
+ .storage.filesystems['4'].status.message = 'Successfully provisioned volume pvc-3b2acca8-fa18-4790-841a-bd5d148f2538'
+ .storage.volumes['0'].size = 1024
+ .storage.volumes['0'].persistent = True
+ .storage.volumes['0'].provider_id = 'pvc-ffd89206-1078-4875-92a4-f6432d40247b'
+ .storage.volumes['0'].storage = 'pgdata/0'
+ .storage.volumes['0'].attachments.containers['postgresql-k8s/0'].read_only = False
+ .storage.volumes['0'].attachments.containers['postgresql-k8s/0'].life = 'alive'
+ .storage.volumes['0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.volumes['0'].pool = 'kubernetes'
+ .storage.volumes['0'].life = 'alive'
+ .storage.volumes['0'].status.current = 'attached'
+ .storage.volumes['1'].size = 1024
+ .storage.volumes['1'].persistent = True
+ .storage.volumes['1'].provider_id = 'pvc-7e5ff3f1-669a-4468-bb94-b983e2653f2e'
+ .storage.volumes['1'].storage = 'configurations/1'
+ .storage.volumes['1'].attachments.containers['traefik-admin/0'].read_only = False
+ .storage.volumes['1'].attachments.containers['traefik-admin/0'].life = 'alive'
+ .storage.volumes['1'].attachments.units['traefik-admin/0'].life = 'alive'
+ .storage.volumes['1'].pool = 'kubernetes'
+ .storage.volumes['1'].life = 'alive'
+ .storage.volumes['1'].status.current = 'attached'
+ .storage.volumes['2'].size = 1024
+ .storage.volumes['2'].persistent = True
+ .storage.volumes['2'].provider_id = 'pvc-ef51600c-2a8f-4e17-9871-a2cef1111232'
+ .storage.volumes['2'].storage = 'configurations/2'
+ .storage.volumes['2'].attachments.containers['traefik-public/0'].read_only = False
+ .storage.volumes['2'].attachments.containers['traefik-public/0'].life = 'alive'
+ .storage.volumes['2'].attachments.units['traefik-public/0'].life = 'alive'
+ .storage.volumes['2'].pool = 'kubernetes'
+ .storage.volumes['2'].life = 'alive'
+ .storage.volumes['2'].status.current = 'attached'
+ .storage.volumes['3'].size = 1024
+ .storage.volumes['3'].persistent = True
+ .storage.volumes['3'].provider_id = 'pvc-3dd3240a-fc08-484d-bdfa-97347ed5d239'
+ .storage.volumes['3'].storage = 'database/3'
+ .storage.volumes['3'].attachments.containers['redis-k8s/0'].read_only = False
+ .storage.volumes['3'].attachments.containers['redis-k8s/0'].life = 'alive'
+ .storage.volumes['3'].attachments.units['redis-k8s/0'].life = 'alive'
+ .storage.volumes['3'].pool = 'kubernetes'
+ .storage.volumes['3'].life = 'alive'
+ .storage.volumes['3'].status.current = 'attached'
+ .storage.volumes['4'].size = 1694
+ .storage.volumes['4'].persistent = True
+ .storage.volumes['4'].provider_id = 'pvc-3b2acca8-fa18-4790-841a-bd5d148f2538'
+ .storage.volumes['4'].storage = 'minio-data/4'
+ .storage.volumes['4'].attachments.containers['minio/0'].read_only = False
+ .storage.volumes['4'].attachments.containers['minio/0'].life = 'alive'
+ .storage.volumes['4'].attachments.units['minio/0'].life = 'alive'
+ .storage.volumes['4'].pool = 'kubernetes'
+ .storage.volumes['4'].life = 'alive'
+ .storage.volumes['4'].status.current = 'attached'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.message = 'running s3-relation-created hook'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.message = 'running s3-relation-changed hook'
- .apps['s3-integrator'].units['s3-integrator/0'].juju_status.current = 'executing'
- .apps['s3-integrator'].units['s3-integrator/0'].juju_status.message = 'running s3-credentials-relation-joined hook for netbox-k8s/0'
+ .apps['s3-integrator'].units['s3-integrator/0'].juju_status.current = 'idle'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.message = 'running s3-relation-changed hook'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.message = 'running redis-relation-changed hook'
- .apps['postgresql-k8s'].app_status.message = 'awaiting for primary endpoint to be ready'
+ .apps['postgresql-k8s'].app_status.message = 'installing agent'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'waiting'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'awaiting for primary endpoint to be ready'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'active'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'Primary'
- .apps['redis-k8s'].units['redis-k8s/0'].juju_status.message = 'running redis-relation-created hook'
+ .apps['redis-k8s'].units['redis-k8s/0'].juju_status.message = 'running redis-peers-relation-changed hook'
- .apps['s3-integrator'].units['s3-integrator/0'].juju_status.current = 'idle'
+ .apps['s3-integrator'].units['s3-integrator/0'].juju_status.current = 'executing'
+ .apps['s3-integrator'].units['s3-integrator/0'].juju_status.message = 'running s3-credentials-relation-changed hook'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['netbox-k8s'].app_status.message = 'missing integrations: postgresql, redis, s3'
+ .apps['netbox-k8s'].app_status.message = 'missing integrations: postgresql'
- .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.message = 'missing integrations: postgresql, redis, s3'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.message = 'missing integrations: postgresql'
- .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.message = 'running redis-relation-changed hook'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.message = 'running redis-relation-changed hook for redis-k8s/0'
- .apps['postgresql-k8s'].app_status.current = 'waiting'
- .apps['postgresql-k8s'].app_status.message = 'installing agent'
+ .apps['postgresql-k8s'].app_status.current = 'active'
+ .apps['postgresql-k8s'].app_status.message = 'Primary'
- .apps['s3-integrator'].units['s3-integrator/0'].juju_status.current = 'executing'
- .apps['s3-integrator'].units['s3-integrator/0'].juju_status.message = 'running s3-credentials-relation-changed hook'
+ .apps['s3-integrator'].units['s3-integrator/0'].juju_status.current = 'idle'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.message = 'running redis-relation-changed hook for redis-k8s/0'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.message = 'running s3-relation-changed hook'
- .apps['redis-k8s'].units['redis-k8s/0'].juju_status.current = 'executing'
- .apps['redis-k8s'].units['redis-k8s/0'].juju_status.message = 'running redis-peers-relation-changed hook'
+ .apps['redis-k8s'].units['redis-k8s/0'].juju_status.current = 'idle'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.current = 'executing'
- .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.message = 'running s3-relation-changed hook'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.current = 'idle'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['hydra'].units['hydra/0'].juju_status.current = 'idle'
+ .apps['hydra'].units['hydra/0'].juju_status.current = 'executing'
+ .apps['hydra'].units['hydra/0'].juju_status.message = 'running pg-database-relation-changed hook'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['hydra'].app_status.current = 'waiting'
- .apps['hydra'].app_status.message = 'Waiting for database creation'
+ .apps['hydra'].app_status.current = 'maintenance'
+ .apps['hydra'].app_status.message = 'Configuring resources'
- .apps['hydra'].units['hydra/0'].workload_status.current = 'waiting'
- .apps['hydra'].units['hydra/0'].workload_status.message = 'Waiting for database creation'
+ .apps['hydra'].units['hydra/0'].workload_status.current = 'maintenance'
+ .apps['hydra'].units['hydra/0'].workload_status.message = 'Configuring resources'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['hydra'].app_status.current = 'maintenance'
- .apps['hydra'].app_status.message = 'Configuring resources'
+ .apps['hydra'].app_status.current = 'waiting'
+ .apps['hydra'].app_status.message = 'installing agent'
- .apps['hydra'].units['hydra/0'].workload_status.current = 'maintenance'
- .apps['hydra'].units['hydra/0'].workload_status.message = 'Configuring resources'
- .apps['hydra'].units['hydra/0'].juju_status.current = 'executing'
- .apps['hydra'].units['hydra/0'].juju_status.message = 'running pg-database-relation-changed hook'
+ .apps['hydra'].units['hydra/0'].workload_status.current = 'active'
+ .apps['hydra'].units['hydra/0'].juju_status.current = 'idle'
- .apps['kratos'].units['kratos/0'].juju_status.current = 'idle'
+ .apps['kratos'].units['kratos/0'].juju_status.current = 'executing'
+ .apps['kratos'].units['kratos/0'].juju_status.message = 'running pg-database-relation-changed hook'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-joined hook for kratos/0'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-joined hook for kratos/0'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].app_status.current = 'waiting'
- .apps['kratos'].app_status.message = 'Waiting for database creation'
+ .apps['kratos'].app_status.current = 'maintenance'
+ .apps['kratos'].app_status.message = 'Configuring resources'
- .apps['kratos'].units['kratos/0'].workload_status.current = 'waiting'
- .apps['kratos'].units['kratos/0'].workload_status.message = 'Waiting for database creation'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'maintenance'
+ .apps['kratos'].units['kratos/0'].workload_status.message = 'Configuring resources'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['hydra'].app_status.current = 'waiting'
- .apps['hydra'].app_status.message = 'installing agent'
+ .apps['hydra'].app_status.current = 'active'
- .apps['kratos'].app_status.current = 'maintenance'
- .apps['kratos'].app_status.message = 'Configuring resources'
+ .apps['kratos'].app_status.current = 'waiting'
+ .apps['kratos'].app_status.message = 'Waiting for configuration to be updated'
- .apps['kratos'].units['kratos/0'].workload_status.current = 'maintenance'
- .apps['kratos'].units['kratos/0'].workload_status.message = 'Configuring resources'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'waiting'
+ .apps['kratos'].units['kratos/0'].workload_status.message = 'Waiting for configuration to be updated'
- .apps['netbox-k8s'].app_status.current = 'blocked'
- .apps['netbox-k8s'].app_status.message = 'missing integrations: postgresql'
+ .apps['netbox-k8s'].app_status.current = 'maintenance'
+ .apps['netbox-k8s'].app_status.message = 'Preparing service for restart'
- .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.current = 'blocked'
- .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.message = 'missing integrations: postgresql'
- .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.current = 'idle'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.current = 'maintenance'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.message = 'Preparing service for restart'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.current = 'executing'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.message = 'running postgresql-relation-changed hook'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].app_status.message = 'Waiting for configuration to be updated'
+ .apps['kratos'].app_status.message = 'waiting for units to settle down'
- .apps['kratos'].units['kratos/0'].workload_status.current = 'waiting'
- .apps['kratos'].units['kratos/0'].workload_status.message = 'Waiting for configuration to be updated'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'active'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook for hydra/0'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].app_status.current = 'waiting'
- .apps['kratos'].app_status.message = 'waiting for units to settle down'
+ .apps['kratos'].app_status.current = 'maintenance'
+ .apps['kratos'].app_status.message = 'Configuring resources'
- .apps['kratos'].units['kratos/0'].workload_status.current = 'active'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'maintenance'
+ .apps['kratos'].units['kratos/0'].workload_status.message = 'Configuring resources'
- .apps['kratos'].units['kratos/0'].juju_status.message = 'running pg-database-relation-changed hook'
+ .apps['kratos'].units['kratos/0'].juju_status.message = 'running kratos-peers-relation-changed hook'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook for hydra/0'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook for kratos/0'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].app_status.current = 'maintenance'
- .apps['kratos'].app_status.message = 'Configuring resources'
+ .apps['kratos'].app_status.current = 'waiting'
+ .apps['kratos'].app_status.message = 'Waiting for configuration to be updated'
- .apps['kratos'].units['kratos/0'].workload_status.current = 'maintenance'
- .apps['kratos'].units['kratos/0'].workload_status.message = 'Configuring resources'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'waiting'
+ .apps['kratos'].units['kratos/0'].workload_status.message = 'Waiting for configuration to be updated'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook for kratos/0'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-peers-relation-changed hook'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].app_status.current = 'waiting'
- .apps['kratos'].app_status.message = 'Waiting for configuration to be updated'
+ .apps['kratos'].app_status.current = 'maintenance'
+ .apps['kratos'].app_status.message = 'Configuring resources'
- .apps['kratos'].units['kratos/0'].workload_status.current = 'waiting'
- .apps['kratos'].units['kratos/0'].workload_status.message = 'Waiting for configuration to be updated'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'maintenance'
+ .apps['kratos'].units['kratos/0'].workload_status.message = 'Configuring resources'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-peers-relation-changed hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].units['kratos/0'].workload_status.current = 'maintenance'
- .apps['kratos'].units['kratos/0'].workload_status.message = 'Configuring resources'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'waiting'
+ .apps['kratos'].units['kratos/0'].workload_status.message = 'Waiting for configuration to be updated'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].units['kratos/0'].workload_status.current = 'waiting'
- .apps['kratos'].units['kratos/0'].workload_status.message = 'Waiting for configuration to be updated'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'maintenance'
+ .apps['kratos'].units['kratos/0'].workload_status.message = 'Configuring resources'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].app_status.current = 'maintenance'
- .apps['kratos'].app_status.message = 'Configuring resources'
+ .apps['kratos'].app_status.current = 'waiting'
+ .apps['kratos'].app_status.message = 'Waiting for configuration to be updated'
- .apps['kratos'].units['kratos/0'].workload_status.current = 'maintenance'
- .apps['kratos'].units['kratos/0'].workload_status.message = 'Configuring resources'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'waiting'
+ .apps['kratos'].units['kratos/0'].workload_status.message = 'Waiting for configuration to be updated'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].app_status.current = 'waiting'
- .apps['kratos'].app_status.message = 'Waiting for configuration to be updated'
+ .apps['kratos'].app_status.current = 'maintenance'
+ .apps['kratos'].app_status.message = 'Configuring resources'
- .apps['kratos'].units['kratos/0'].workload_status.current = 'waiting'
- .apps['kratos'].units['kratos/0'].workload_status.message = 'Waiting for configuration to be updated'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'maintenance'
+ .apps['kratos'].units['kratos/0'].workload_status.message = 'Configuring resources'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].app_status.current = 'maintenance'
- .apps['kratos'].app_status.message = 'Configuring resources'
+ .apps['kratos'].app_status.current = 'waiting'
+ .apps['kratos'].app_status.message = 'Waiting for configuration to be updated'
- .apps['kratos'].units['kratos/0'].workload_status.current = 'maintenance'
- .apps['kratos'].units['kratos/0'].workload_status.message = 'Configuring resources'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'waiting'
+ .apps['kratos'].units['kratos/0'].workload_status.message = 'Waiting for configuration to be updated'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].app_status.current = 'waiting'
- .apps['kratos'].app_status.message = 'Waiting for configuration to be updated'
+ .apps['kratos'].app_status.current = 'maintenance'
+ .apps['kratos'].app_status.message = 'Configuring resources'
- .apps['kratos'].units['kratos/0'].workload_status.current = 'waiting'
- .apps['kratos'].units['kratos/0'].workload_status.message = 'Waiting for configuration to be updated'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'maintenance'
+ .apps['kratos'].units['kratos/0'].workload_status.message = 'Configuring resources'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].app_status.current = 'maintenance'
- .apps['kratos'].app_status.message = 'Configuring resources'
+ .apps['kratos'].app_status.current = 'waiting'
+ .apps['kratos'].app_status.message = 'Waiting for configuration to be updated'
- .apps['kratos'].units['kratos/0'].workload_status.current = 'maintenance'
- .apps['kratos'].units['kratos/0'].workload_status.message = 'Configuring resources'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'waiting'
+ .apps['kratos'].units['kratos/0'].workload_status.message = 'Waiting for configuration to be updated'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].app_status.current = 'waiting'
- .apps['kratos'].app_status.message = 'Waiting for configuration to be updated'
+ .apps['kratos'].app_status.current = 'maintenance'
+ .apps['kratos'].app_status.message = 'Configuring resources'
- .apps['kratos'].units['kratos/0'].workload_status.current = 'waiting'
- .apps['kratos'].units['kratos/0'].workload_status.message = 'Waiting for configuration to be updated'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'maintenance'
+ .apps['kratos'].units['kratos/0'].workload_status.message = 'Configuring resources'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].app_status.current = 'maintenance'
- .apps['kratos'].app_status.message = 'Configuring resources'
+ .apps['kratos'].app_status.current = 'waiting'
+ .apps['kratos'].app_status.message = 'Waiting for configuration to be updated'
- .apps['postgresql-k8s'].app_status.message = 'Primary'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running secret-changed hook for secret:d3t12mfmp25c782l3i5g'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].app_status.current = 'waiting'
- .apps['kratos'].app_status.message = 'Waiting for configuration to be updated'
+ .apps['kratos'].app_status.current = 'maintenance'
+ .apps['kratos'].app_status.message = 'Configuring resources'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running secret-changed hook for secret:d3t12mfmp25c782l3i5g'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].app_status.current = 'maintenance'
- .apps['kratos'].app_status.message = 'Configuring resources'
+ .apps['kratos'].app_status.current = 'waiting'
+ .apps['kratos'].app_status.message = 'Waiting for configuration to be updated'
- .apps['kratos'].units['kratos/0'].workload_status.current = 'maintenance'
- .apps['kratos'].units['kratos/0'].workload_status.message = 'Configuring resources'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'waiting'
+ .apps['kratos'].units['kratos/0'].workload_status.message = 'Waiting for configuration to be updated'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].app_status.current = 'waiting'
- .apps['kratos'].app_status.message = 'Waiting for configuration to be updated'
+ .apps['kratos'].app_status.current = 'maintenance'
+ .apps['kratos'].app_status.message = 'Configuring resources'
- .apps['kratos'].units['kratos/0'].workload_status.current = 'waiting'
- .apps['kratos'].units['kratos/0'].workload_status.message = 'Waiting for configuration to be updated'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'maintenance'
+ .apps['kratos'].units['kratos/0'].workload_status.message = 'Configuring resources'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].app_status.current = 'maintenance'
- .apps['kratos'].app_status.message = 'Configuring resources'
+ .apps['kratos'].app_status.current = 'waiting'
+ .apps['kratos'].app_status.message = 'Waiting for configuration to be updated'
- .apps['kratos'].units['kratos/0'].workload_status.current = 'maintenance'
- .apps['kratos'].units['kratos/0'].workload_status.message = 'Configuring resources'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'waiting'
+ .apps['kratos'].units['kratos/0'].workload_status.message = 'Waiting for configuration to be updated'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].app_status.current = 'waiting'
- .apps['kratos'].app_status.message = 'Waiting for configuration to be updated'
+ .apps['kratos'].app_status.current = 'maintenance'
+ .apps['kratos'].app_status.message = 'Configuring resources'
- .apps['kratos'].units['kratos/0'].workload_status.current = 'waiting'
- .apps['kratos'].units['kratos/0'].workload_status.message = 'Waiting for configuration to be updated'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'maintenance'
+ .apps['kratos'].units['kratos/0'].workload_status.message = 'Configuring resources'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].app_status.current = 'maintenance'
- .apps['kratos'].app_status.message = 'Configuring resources'
+ .apps['kratos'].app_status.current = 'waiting'
+ .apps['kratos'].app_status.message = 'Waiting for configuration to be updated'
- .apps['kratos'].units['kratos/0'].workload_status.current = 'maintenance'
- .apps['kratos'].units['kratos/0'].workload_status.message = 'Configuring resources'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'waiting'
+ .apps['kratos'].units['kratos/0'].workload_status.message = 'Waiting for configuration to be updated'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].app_status.message = 'Waiting for configuration to be updated'
+ .apps['kratos'].app_status.message = 'waiting for units to settle down'
- .apps['kratos'].units['kratos/0'].workload_status.current = 'waiting'
- .apps['kratos'].units['kratos/0'].workload_status.message = 'Waiting for configuration to be updated'
- .apps['kratos'].units['kratos/0'].juju_status.current = 'executing'
- .apps['kratos'].units['kratos/0'].juju_status.message = 'running kratos-peers-relation-changed hook'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'active'
+ .apps['kratos'].units['kratos/0'].juju_status.current = 'idle'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['kratos'].app_status.current = 'waiting'
- .apps['kratos'].app_status.message = 'waiting for units to settle down'
+ .apps['kratos'].app_status.current = 'active'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running upgrade-relation-changed hook'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running upgrade-relation-changed hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['netbox-k8s'].app_status.current = 'maintenance'
- .apps['netbox-k8s'].app_status.message = 'Preparing service for restart'
+ .apps['netbox-k8s'].app_status.current = 'waiting'
+ .apps['netbox-k8s'].app_status.message = 'installing agent'
- .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.current = 'maintenance'
- .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.message = 'Preparing service for restart'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.current = 'active'
- .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.message = 'running postgresql-relation-changed hook'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.message = 'running secret-changed hook for secret:d3t12mfmp25c782l3i5g'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook for netbox-k8s/0'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.current = 'active'
- .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.current = 'executing'
- .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.message = 'running secret-changed hook for secret:d3t12mfmp25c782l3i5g'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.current = 'maintenance'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.message = 'Preparing service for restart'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.current = 'idle'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook for netbox-k8s/0'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.current = 'maintenance'
- .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.message = 'Preparing service for restart'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.current = 'active'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['netbox-k8s'].app_status.current = 'waiting'
- .apps['netbox-k8s'].app_status.message = 'installing agent'
+ .apps['netbox-k8s'].app_status.current = 'active'
[32mINFO    [0m jubilant:_juju.py:237 cli: juju status --model testing --format json
[32mINFO    [0m jubilant:_juju.py:237 cli: juju integrate --model testing netbox-k8s traefik-public
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
+ .model.name = 'testing'
+ .model.type = 'caas'
+ .model.controller = 'github-pr-4e773-k8s'
+ .model.cloud = 'k8s'
+ .model.version = '3.6.11'
+ .model.model_status.current = 'available'
+ .apps['hydra'].charm = 'hydra'
+ .apps['hydra'].charm_origin = 'charmhub'
+ .apps['hydra'].charm_name = 'hydra'
+ .apps['hydra'].charm_rev = 339
+ .apps['hydra'].exposed = False
+ .apps['hydra'].base.name = 'ubuntu'
+ .apps['hydra'].base.channel = '22.04'
+ .apps['hydra'].charm_channel = 'latest/edge'
+ .apps['hydra'].scale = 1
+ .apps['hydra'].provider_id = 'c9932940-d4fd-467c-a8bf-e08a916a8a37'
+ .apps['hydra'].address = '10.152.183.165'
+ .apps['hydra'].app_status.current = 'active'
+ .apps['hydra'].relations['admin-ingress'][0].related_app = 'traefik-admin'
+ .apps['hydra'].relations['admin-ingress'][0].interface = 'ingress'
+ .apps['hydra'].relations['admin-ingress'][0].scope = 'global'
+ .apps['hydra'].relations['hydra'][0].related_app = 'hydra'
+ .apps['hydra'].relations['hydra'][0].interface = 'hydra_peers'
+ .apps['hydra'].relations['hydra'][0].scope = 'global'
+ .apps['hydra'].relations['hydra-endpoint-info'][0].related_app = 'identity-platform-login-ui-operator'
+ .apps['hydra'].relations['hydra-endpoint-info'][0].interface = 'hydra_endpoints'
+ .apps['hydra'].relations['hydra-endpoint-info'][0].scope = 'global'
+ .apps['hydra'].relations['hydra-endpoint-info'][1].related_app = 'kratos'
+ .apps['hydra'].relations['hydra-endpoint-info'][1].interface = 'hydra_endpoints'
+ .apps['hydra'].relations['hydra-endpoint-info'][1].scope = 'global'
+ .apps['hydra'].relations['pg-database'][0].related_app = 'postgresql-k8s'
+ .apps['hydra'].relations['pg-database'][0].interface = 'postgresql_client'
+ .apps['hydra'].relations['pg-database'][0].scope = 'global'
+ .apps['hydra'].relations['public-ingress'][0].related_app = 'traefik-public'
+ .apps['hydra'].relations['public-ingress'][0].interface = 'ingress'
+ .apps['hydra'].relations['public-ingress'][0].scope = 'global'
+ .apps['hydra'].relations['ui-endpoint-info'][0].related_app = 'identity-platform-login-ui-operator'
+ .apps['hydra'].relations['ui-endpoint-info'][0].interface = 'login_ui_endpoints'
+ .apps['hydra'].relations['ui-endpoint-info'][0].scope = 'global'
+ .apps['hydra'].units['hydra/0'].workload_status.current = 'active'
+ .apps['hydra'].units['hydra/0'].juju_status.current = 'idle'
+ .apps['hydra'].units['hydra/0'].juju_status.version = '3.6.11'
+ .apps['hydra'].units['hydra/0'].leader = True
+ .apps['hydra'].units['hydra/0'].address = '10.1.0.60'
+ .apps['hydra'].units['hydra/0'].provider_id = 'hydra-0'
+ .apps['hydra'].version = 'v2.3.0'
+ .apps['hydra'].endpoint_bindings[''] = 'alpha'
+ .apps['hydra'].endpoint_bindings['admin-ingress'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['hydra'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['hydra-endpoint-info'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['internal-ingress'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['logging'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['oauth'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['pg-database'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['public-ingress'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['ui-endpoint-info'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].charm = 'identity-platform-login-ui-operator'
+ .apps['identity-platform-login-ui-operator'].charm_origin = 'charmhub'
+ .apps['identity-platform-login-ui-operator'].charm_name = 'identity-platform-login-ui-operator'
+ .apps['identity-platform-login-ui-operator'].charm_rev = 146
+ .apps['identity-platform-login-ui-operator'].exposed = False
+ .apps['identity-platform-login-ui-operator'].base.name = 'ubuntu'
+ .apps['identity-platform-login-ui-operator'].base.channel = '22.04'
+ .apps['identity-platform-login-ui-operator'].charm_channel = 'latest/edge'
+ .apps['identity-platform-login-ui-operator'].scale = 1
+ .apps['identity-platform-login-ui-operator'].provider_id = 'e8830dfd-5e57-40b8-b304-4fe45061ec76'
+ .apps['identity-platform-login-ui-operator'].address = '10.152.183.73'
+ .apps['identity-platform-login-ui-operator'].app_status.current = 'active'
+ .apps['identity-platform-login-ui-operator'].relations['hydra-endpoint-info'][0].related_app = 'hydra'
+ .apps['identity-platform-login-ui-operator'].relations['hydra-endpoint-info'][0].interface = 'hydra_endpoints'
+ .apps['identity-platform-login-ui-operator'].relations['hydra-endpoint-info'][0].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].relations['identity-platform-login-ui'][0].related_app = 'identity-platform-login-ui-operator'
+ .apps['identity-platform-login-ui-operator'].relations['identity-platform-login-ui'][0].interface = 'identity_platform_login_ui_peers'
+ .apps['identity-platform-login-ui-operator'].relations['identity-platform-login-ui'][0].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].relations['ingress'][0].related_app = 'traefik-public'
+ .apps['identity-platform-login-ui-operator'].relations['ingress'][0].interface = 'ingress'
+ .apps['identity-platform-login-ui-operator'].relations['ingress'][0].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].relations['kratos-info'][0].related_app = 'kratos'
+ .apps['identity-platform-login-ui-operator'].relations['kratos-info'][0].interface = 'kratos_info'
+ .apps['identity-platform-login-ui-operator'].relations['kratos-info'][0].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][0].related_app = 'hydra'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][0].interface = 'login_ui_endpoints'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][0].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][1].related_app = 'kratos'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][1].interface = 'login_ui_endpoints'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][1].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.current = 'active'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.current = 'idle'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.version = '3.6.11'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].leader = True
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].address = '10.1.0.179'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].provider_id = 'identity-platform-login-ui-operator-0'
+ .apps['identity-platform-login-ui-operator'].version = '0.23.0'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings[''] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['hydra-endpoint-info'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['identity-platform-login-ui'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['kratos-info'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['logging'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['ui-endpoint-info'] = 'alpha'
+ .apps['kratos'].charm = 'kratos'
+ .apps['kratos'].charm_origin = 'charmhub'
+ .apps['kratos'].charm_name = 'kratos'
+ .apps['kratos'].charm_rev = 500
+ .apps['kratos'].exposed = False
+ .apps['kratos'].base.name = 'ubuntu'
+ .apps['kratos'].base.channel = '22.04'
+ .apps['kratos'].charm_channel = 'latest/edge'
+ .apps['kratos'].scale = 1
+ .apps['kratos'].provider_id = '330d3311-c78e-40d5-98c9-659fdca0a410'
+ .apps['kratos'].address = '10.152.183.127'
+ .apps['kratos'].app_status.current = 'active'
+ .apps['kratos'].relations['admin-ingress'][0].related_app = 'traefik-admin'
+ .apps['kratos'].relations['admin-ingress'][0].interface = 'ingress'
+ .apps['kratos'].relations['admin-ingress'][0].scope = 'global'
+ .apps['kratos'].relations['hydra-endpoint-info'][0].related_app = 'hydra'
+ .apps['kratos'].relations['hydra-endpoint-info'][0].interface = 'hydra_endpoints'
+ .apps['kratos'].relations['hydra-endpoint-info'][0].scope = 'global'
+ .apps['kratos'].relations['kratos-info'][0].related_app = 'identity-platform-login-ui-operator'
+ .apps['kratos'].relations['kratos-info'][0].interface = 'kratos_info'
+ .apps['kratos'].relations['kratos-info'][0].scope = 'global'
+ .apps['kratos'].relations['kratos-peers'][0].related_app = 'kratos'
+ .apps['kratos'].relations['kratos-peers'][0].interface = 'kratos-peers'
+ .apps['kratos'].relations['kratos-peers'][0].scope = 'global'
+ .apps['kratos'].relations['pg-database'][0].related_app = 'postgresql-k8s'
+ .apps['kratos'].relations['pg-database'][0].interface = 'postgresql_client'
+ .apps['kratos'].relations['pg-database'][0].scope = 'global'
+ .apps['kratos'].relations['public-ingress'][0].related_app = 'traefik-public'
+ .apps['kratos'].relations['public-ingress'][0].interface = 'ingress'
+ .apps['kratos'].relations['public-ingress'][0].scope = 'global'
+ .apps['kratos'].relations['ui-endpoint-info'][0].related_app = 'identity-platform-login-ui-operator'
+ .apps['kratos'].relations['ui-endpoint-info'][0].interface = 'login_ui_endpoints'
+ .apps['kratos'].relations['ui-endpoint-info'][0].scope = 'global'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'active'
+ .apps['kratos'].units['kratos/0'].juju_status.current = 'idle'
+ .apps['kratos'].units['kratos/0'].juju_status.version = '3.6.11'
+ .apps['kratos'].units['kratos/0'].leader = True
+ .apps['kratos'].units['kratos/0'].address = '10.1.0.185'
+ .apps['kratos'].units['kratos/0'].provider_id = 'kratos-0'
+ .apps['kratos'].version = 'v1.3.1'
+ .apps['kratos'].endpoint_bindings[''] = 'alpha'
+ .apps['kratos'].endpoint_bindings['admin-ingress'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['hydra-endpoint-info'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['internal-ingress'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['kratos-external-idp'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['kratos-info'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['kratos-peers'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['logging'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['pg-database'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['public-ingress'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['smtp'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['ui-endpoint-info'] = 'alpha'
+ .apps['minio'].charm = 'minio'
+ .apps['minio'].charm_origin = 'charmhub'
+ .apps['minio'].charm_name = 'minio'
+ .apps['minio'].charm_rev = 583
+ .apps['minio'].exposed = False
+ .apps['minio'].base.name = 'ubuntu'
+ .apps['minio'].base.channel = '20.04'
+ .apps['minio'].charm_channel = 'ckf-1.10/stable'
+ .apps['minio'].scale = 1
+ .apps['minio'].provider_id = '07f2c2b4-c870-47c0-a621-140a62891ef1'
+ .apps['minio'].address = '10.152.183.147'
+ .apps['minio'].app_status.current = 'active'
+ .apps['minio'].units['minio/0'].workload_status.current = 'active'
+ .apps['minio'].units['minio/0'].juju_status.current = 'idle'
+ .apps['minio'].units['minio/0'].leader = True
+ .apps['minio'].units['minio/0'].open_ports[0] = '9000/TCP'
+ .apps['minio'].units['minio/0'].open_ports[1] = '9001/TCP'
+ .apps['minio'].units['minio/0'].address = '10.1.0.166'
+ .apps['minio'].units['minio/0'].provider_id = 'minio-0'
+ .apps['minio'].version = 'registry.jujucharms.com/charm/81j63o4a2ldarn1umc22iyjz1q9l9g0sx5b8j/oci-image@sha256:7f2474f60a02f11dc3294542a97092bd2392b91d526c7e7c70648c0b9d3b68ab'
+ .apps['minio'].endpoint_bindings[''] = 'alpha'
+ .apps['minio'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['minio'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['minio'].endpoint_bindings['object-storage'] = 'alpha'
+ .apps['netbox-k8s'].charm = 'local:netbox-k8s-0'
+ .apps['netbox-k8s'].charm_origin = 'local'
+ .apps['netbox-k8s'].charm_name = 'netbox-k8s'
+ .apps['netbox-k8s'].charm_rev = 0
+ .apps['netbox-k8s'].exposed = False
+ .apps['netbox-k8s'].base.name = 'ubuntu'
+ .apps['netbox-k8s'].base.channel = '24.04'
+ .apps['netbox-k8s'].scale = 1
+ .apps['netbox-k8s'].provider_id = 'b6a3bce4-9d0b-4425-8386-57b74bc8c746'
+ .apps['netbox-k8s'].address = '10.152.183.234'
+ .apps['netbox-k8s'].app_status.current = 'active'
+ .apps['netbox-k8s'].relations['ingress'][0].related_app = 'traefik-public'
+ .apps['netbox-k8s'].relations['ingress'][0].interface = 'ingress'
+ .apps['netbox-k8s'].relations['ingress'][0].scope = 'global'
+ .apps['netbox-k8s'].relations['postgresql'][0].related_app = 'postgresql-k8s'
+ .apps['netbox-k8s'].relations['postgresql'][0].interface = 'postgresql_client'
+ .apps['netbox-k8s'].relations['postgresql'][0].scope = 'global'
+ .apps['netbox-k8s'].relations['redis'][0].related_app = 'redis-k8s'
+ .apps['netbox-k8s'].relations['redis'][0].interface = 'redis'
+ .apps['netbox-k8s'].relations['redis'][0].scope = 'global'
+ .apps['netbox-k8s'].relations['s3'][0].related_app = 's3-integrator'
+ .apps['netbox-k8s'].relations['s3'][0].interface = 's3'
+ .apps['netbox-k8s'].relations['s3'][0].scope = 'global'
+ .apps['netbox-k8s'].relations['secret-storage'][0].related_app = 'netbox-k8s'
+ .apps['netbox-k8s'].relations['secret-storage'][0].interface = 'secret-storage'
+ .apps['netbox-k8s'].relations['secret-storage'][0].scope = 'global'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.current = 'active'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.current = 'executing'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.message = 'running ingress-relation-created hook'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.version = '3.6.11'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].leader = True
+ .apps['netbox-k8s'].units['netbox-k8s/0'].address = '10.1.0.109'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].provider_id = 'netbox-k8s-0'
+ .apps['netbox-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['oidc'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['postgresql'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['redis'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['s3'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['saml'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['secret-storage'] = 'alpha'
+ .apps['postgresql-k8s'].charm = 'postgresql-k8s'
+ .apps['postgresql-k8s'].charm_origin = 'charmhub'
+ .apps['postgresql-k8s'].charm_name = 'postgresql-k8s'
+ .apps['postgresql-k8s'].charm_rev = 495
+ .apps['postgresql-k8s'].exposed = False
+ .apps['postgresql-k8s'].base.name = 'ubuntu'
+ .apps['postgresql-k8s'].base.channel = '22.04'
+ .apps['postgresql-k8s'].charm_channel = '14/stable'
+ .apps['postgresql-k8s'].scale = 1
+ .apps['postgresql-k8s'].provider_id = 'fdd775ef-8073-4c22-b82c-12c012e645ff'
+ .apps['postgresql-k8s'].address = '10.152.183.146'
+ .apps['postgresql-k8s'].app_status.current = 'active'
+ .apps['postgresql-k8s'].relations['database'][0].related_app = 'hydra'
+ .apps['postgresql-k8s'].relations['database'][0].interface = 'postgresql_client'
+ .apps['postgresql-k8s'].relations['database'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['database'][1].related_app = 'kratos'
+ .apps['postgresql-k8s'].relations['database'][1].interface = 'postgresql_client'
+ .apps['postgresql-k8s'].relations['database'][1].scope = 'global'
+ .apps['postgresql-k8s'].relations['database'][2].related_app = 'netbox-k8s'
+ .apps['postgresql-k8s'].relations['database'][2].interface = 'postgresql_client'
+ .apps['postgresql-k8s'].relations['database'][2].scope = 'global'
+ .apps['postgresql-k8s'].relations['database-peers'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['database-peers'][0].interface = 'postgresql_peers'
+ .apps['postgresql-k8s'].relations['database-peers'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['restart'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['restart'][0].interface = 'rolling_op'
+ .apps['postgresql-k8s'].relations['restart'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['upgrade'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['upgrade'][0].interface = 'upgrade'
+ .apps['postgresql-k8s'].relations['upgrade'][0].scope = 'global'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'active'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'Primary'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.version = '3.6.11'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].leader = True
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].address = '10.1.0.93'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].provider_id = 'postgresql-k8s-0'
+ .apps['postgresql-k8s'].version = '14.15'
+ .apps['postgresql-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['database'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['database-peers'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['db'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['db-admin'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['replication'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['replication-offer'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['restart'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['s3-parameters'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['upgrade'] = 'alpha'
+ .apps['redis-k8s'].charm = 'redis-k8s'
+ .apps['redis-k8s'].charm_origin = 'charmhub'
+ .apps['redis-k8s'].charm_name = 'redis-k8s'
+ .apps['redis-k8s'].charm_rev = 42
+ .apps['redis-k8s'].exposed = False
+ .apps['redis-k8s'].base.name = 'ubuntu'
+ .apps['redis-k8s'].base.channel = '22.04'
+ .apps['redis-k8s'].charm_channel = 'latest/edge'
+ .apps['redis-k8s'].scale = 1
+ .apps['redis-k8s'].provider_id = 'a0f6c953-9435-4323-b907-f5f72b580b40'
+ .apps['redis-k8s'].address = '10.152.183.158'
+ .apps['redis-k8s'].app_status.current = 'active'
+ .apps['redis-k8s'].relations['redis'][0].related_app = 'netbox-k8s'
+ .apps['redis-k8s'].relations['redis'][0].interface = 'redis'
+ .apps['redis-k8s'].relations['redis'][0].scope = 'global'
+ .apps['redis-k8s'].relations['redis-peers'][0].related_app = 'redis-k8s'
+ .apps['redis-k8s'].relations['redis-peers'][0].interface = 'redis-peers'
+ .apps['redis-k8s'].relations['redis-peers'][0].scope = 'global'
+ .apps['redis-k8s'].units['redis-k8s/0'].workload_status.current = 'active'
+ .apps['redis-k8s'].units['redis-k8s/0'].juju_status.current = 'idle'
+ .apps['redis-k8s'].units['redis-k8s/0'].juju_status.version = '3.6.11'
+ .apps['redis-k8s'].units['redis-k8s/0'].leader = True
+ .apps['redis-k8s'].units['redis-k8s/0'].address = '10.1.0.18'
+ .apps['redis-k8s'].units['redis-k8s/0'].provider_id = 'redis-k8s-0'
+ .apps['redis-k8s'].version = '7.2.5'
+ .apps['redis-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['redis-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['redis-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['redis-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['redis-k8s'].endpoint_bindings['redis'] = 'alpha'
+ .apps['redis-k8s'].endpoint_bindings['redis-peers'] = 'alpha'
+ .apps['s3-integrator'].charm = 's3-integrator'
+ .apps['s3-integrator'].charm_origin = 'charmhub'
+ .apps['s3-integrator'].charm_name = 's3-integrator'
+ .apps['s3-integrator'].charm_rev = 241
+ .apps['s3-integrator'].exposed = False
+ .apps['s3-integrator'].base.name = 'ubuntu'
+ .apps['s3-integrator'].base.channel = '22.04'
+ .apps['s3-integrator'].charm_channel = '1/edge'
+ .apps['s3-integrator'].scale = 1
+ .apps['s3-integrator'].provider_id = '6bc35fa8-698c-4015-8e3b-dc5ee72050de'
+ .apps['s3-integrator'].address = '10.152.183.62'
+ .apps['s3-integrator'].app_status.current = 'active'
+ .apps['s3-integrator'].relations['s3-credentials'][0].related_app = 'netbox-k8s'
+ .apps['s3-integrator'].relations['s3-credentials'][0].interface = 's3'
+ .apps['s3-integrator'].relations['s3-credentials'][0].scope = 'global'
+ .apps['s3-integrator'].relations['s3-integrator-peers'][0].related_app = 's3-integrator'
+ .apps['s3-integrator'].relations['s3-integrator-peers'][0].interface = 's3-integrator-peers'
+ .apps['s3-integrator'].relations['s3-integrator-peers'][0].scope = 'global'
+ .apps['s3-integrator'].units['s3-integrator/0'].workload_status.current = 'active'
+ .apps['s3-integrator'].units['s3-integrator/0'].juju_status.current = 'idle'
+ .apps['s3-integrator'].units['s3-integrator/0'].juju_status.version = '3.6.11'
+ .apps['s3-integrator'].units['s3-integrator/0'].leader = True
+ .apps['s3-integrator'].units['s3-integrator/0'].address = '10.1.0.189'
+ .apps['s3-integrator'].units['s3-integrator/0'].provider_id = 's3-integrator-0'
+ .apps['s3-integrator'].endpoint_bindings[''] = 'alpha'
+ .apps['s3-integrator'].endpoint_bindings['s3-credentials'] = 'alpha'
+ .apps['s3-integrator'].endpoint_bindings['s3-integrator-peers'] = 'alpha'
+ .apps['self-signed-certificates'].charm = 'self-signed-certificates'
+ .apps['self-signed-certificates'].charm_origin = 'charmhub'
+ .apps['self-signed-certificates'].charm_name = 'self-signed-certificates'
+ .apps['self-signed-certificates'].charm_rev = 155
+ .apps['self-signed-certificates'].exposed = False
+ .apps['self-signed-certificates'].base.name = 'ubuntu'
+ .apps['self-signed-certificates'].base.channel = '22.04'
+ .apps['self-signed-certificates'].charm_channel = 'latest/stable'
+ .apps['self-signed-certificates'].scale = 1
+ .apps['self-signed-certificates'].provider_id = 'de6fa780-bd65-4444-9cf1-01356d85b9dd'
+ .apps['self-signed-certificates'].address = '10.152.183.49'
+ .apps['self-signed-certificates'].app_status.current = 'active'
+ .apps['self-signed-certificates'].relations['certificates'][0].related_app = 'traefik-admin'
+ .apps['self-signed-certificates'].relations['certificates'][0].interface = 'tls-certificates'
+ .apps['self-signed-certificates'].relations['certificates'][0].scope = 'global'
+ .apps['self-signed-certificates'].relations['certificates'][1].related_app = 'traefik-public'
+ .apps['self-signed-certificates'].relations['certificates'][1].interface = 'tls-certificates'
+ .apps['self-signed-certificates'].relations['certificates'][1].scope = 'global'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].workload_status.current = 'active'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.current = 'idle'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.version = '3.6.11'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].leader = True
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].address = '10.1.0.208'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].provider_id = 'self-signed-certificates-0'
+ .apps['self-signed-certificates'].endpoint_bindings[''] = 'alpha'
+ .apps['self-signed-certificates'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['self-signed-certificates'].endpoint_bindings['send-ca-cert'] = 'alpha'
+ .apps['self-signed-certificates'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['traefik-admin'].charm = 'traefik-k8s'
+ .apps['traefik-admin'].charm_origin = 'charmhub'
+ .apps['traefik-admin'].charm_name = 'traefik-k8s'
+ .apps['traefik-admin'].charm_rev = 176
+ .apps['traefik-admin'].exposed = False
+ .apps['traefik-admin'].base.name = 'ubuntu'
+ .apps['traefik-admin'].base.channel = '20.04'
+ .apps['traefik-admin'].charm_channel = 'latest/stable'
+ .apps['traefik-admin'].scale = 1
+ .apps['traefik-admin'].provider_id = '58738bb5-00ae-4843-ac1d-d35b2b83bbc4'
+ .apps['traefik-admin'].address = '10.151.33.101'
+ .apps['traefik-admin'].app_status.current = 'active'
+ .apps['traefik-admin'].relations['certificates'][0].related_app = 'self-signed-certificates'
+ .apps['traefik-admin'].relations['certificates'][0].interface = 'tls-certificates'
+ .apps['traefik-admin'].relations['certificates'][0].scope = 'global'
+ .apps['traefik-admin'].relations['ingress'][0].related_app = 'hydra'
+ .apps['traefik-admin'].relations['ingress'][0].interface = 'ingress'
+ .apps['traefik-admin'].relations['ingress'][0].scope = 'global'
+ .apps['traefik-admin'].relations['ingress'][1].related_app = 'kratos'
+ .apps['traefik-admin'].relations['ingress'][1].interface = 'ingress'
+ .apps['traefik-admin'].relations['ingress'][1].scope = 'global'
+ .apps['traefik-admin'].relations['peers'][0].related_app = 'traefik-admin'
+ .apps['traefik-admin'].relations['peers'][0].interface = 'traefik_peers'
+ .apps['traefik-admin'].relations['peers'][0].scope = 'global'
+ .apps['traefik-admin'].units['traefik-admin/0'].workload_status.current = 'active'
+ .apps['traefik-admin'].units['traefik-admin/0'].juju_status.current = 'idle'
+ .apps['traefik-admin'].units['traefik-admin/0'].juju_status.version = '3.6.11'
+ .apps['traefik-admin'].units['traefik-admin/0'].leader = True
+ .apps['traefik-admin'].units['traefik-admin/0'].address = '10.1.0.245'
+ .apps['traefik-admin'].units['traefik-admin/0'].provider_id = 'traefik-admin-0'
+ .apps['traefik-admin'].version = 'v2.11.0'
+ .apps['traefik-admin'].endpoint_bindings[''] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['experimental-forward-auth'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['ingress-per-unit'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['logging'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['peers'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['traefik-route'] = 'alpha'
+ .apps['traefik-public'].charm = 'traefik-k8s'
+ .apps['traefik-public'].charm_origin = 'charmhub'
+ .apps['traefik-public'].charm_name = 'traefik-k8s'
+ .apps['traefik-public'].charm_rev = 176
+ .apps['traefik-public'].exposed = False
+ .apps['traefik-public'].base.name = 'ubuntu'
+ .apps['traefik-public'].base.channel = '20.04'
+ .apps['traefik-public'].charm_channel = 'latest/stable'
+ .apps['traefik-public'].scale = 1
+ .apps['traefik-public'].provider_id = '386420e4-d882-482d-8eff-6b485fdd6a4d'
+ .apps['traefik-public'].address = '10.151.33.100'
+ .apps['traefik-public'].app_status.current = 'active'
+ .apps['traefik-public'].relations['certificates'][0].related_app = 'self-signed-certificates'
+ .apps['traefik-public'].relations['certificates'][0].interface = 'tls-certificates'
+ .apps['traefik-public'].relations['certificates'][0].scope = 'global'
+ .apps['traefik-public'].relations['ingress'][0].related_app = 'hydra'
+ .apps['traefik-public'].relations['ingress'][0].interface = 'ingress'
+ .apps['traefik-public'].relations['ingress'][0].scope = 'global'
+ .apps['traefik-public'].relations['ingress'][1].related_app = 'identity-platform-login-ui-operator'
+ .apps['traefik-public'].relations['ingress'][1].interface = 'ingress'
+ .apps['traefik-public'].relations['ingress'][1].scope = 'global'
+ .apps['traefik-public'].relations['ingress'][2].related_app = 'kratos'
+ .apps['traefik-public'].relations['ingress'][2].interface = 'ingress'
+ .apps['traefik-public'].relations['ingress'][2].scope = 'global'
+ .apps['traefik-public'].relations['ingress'][3].related_app = 'netbox-k8s'
+ .apps['traefik-public'].relations['ingress'][3].interface = 'ingress'
+ .apps['traefik-public'].relations['ingress'][3].scope = 'global'
+ .apps['traefik-public'].relations['peers'][0].related_app = 'traefik-public'
+ .apps['traefik-public'].relations['peers'][0].interface = 'traefik_peers'
+ .apps['traefik-public'].relations['peers'][0].scope = 'global'
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'active'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.current = 'executing'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running ingress-relation-created hook'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.version = '3.6.11'
+ .apps['traefik-public'].units['traefik-public/0'].leader = True
+ .apps['traefik-public'].units['traefik-public/0'].address = '10.1.0.210'
+ .apps['traefik-public'].units['traefik-public/0'].provider_id = 'traefik-public-0'
+ .apps['traefik-public'].version = 'v2.11.0'
+ .apps['traefik-public'].endpoint_bindings[''] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['experimental-forward-auth'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['ingress-per-unit'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['logging'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['peers'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['traefik-route'] = 'alpha'
+ .storage.storage['configurations/1'].kind = 'filesystem'
+ .storage.storage['configurations/1'].status.current = 'attached'
+ .storage.storage['configurations/1'].status.message = 'Successfully provisioned volume pvc-7e5ff3f1-669a-4468-bb94-b983e2653f2e'
+ .storage.storage['configurations/1'].persistent = False
+ .storage.storage['configurations/1'].life = 'alive'
+ .storage.storage['configurations/1'].attachments.units['traefik-admin/0'].life = 'alive'
+ .storage.storage['configurations/2'].kind = 'filesystem'
+ .storage.storage['configurations/2'].status.current = 'attached'
+ .storage.storage['configurations/2'].status.message = 'Successfully provisioned volume pvc-ef51600c-2a8f-4e17-9871-a2cef1111232'
+ .storage.storage['configurations/2'].persistent = False
+ .storage.storage['configurations/2'].life = 'alive'
+ .storage.storage['configurations/2'].attachments.units['traefik-public/0'].life = 'alive'
+ .storage.storage['database/3'].kind = 'filesystem'
+ .storage.storage['database/3'].status.current = 'attached'
+ .storage.storage['database/3'].status.message = 'Successfully provisioned volume pvc-3dd3240a-fc08-484d-bdfa-97347ed5d239'
+ .storage.storage['database/3'].persistent = False
+ .storage.storage['database/3'].life = 'alive'
+ .storage.storage['database/3'].attachments.units['redis-k8s/0'].life = 'alive'
+ .storage.storage['minio-data/4'].kind = 'filesystem'
+ .storage.storage['minio-data/4'].status.current = 'attached'
+ .storage.storage['minio-data/4'].status.message = 'Successfully provisioned volume pvc-3b2acca8-fa18-4790-841a-bd5d148f2538'
+ .storage.storage['minio-data/4'].persistent = False
+ .storage.storage['minio-data/4'].life = 'alive'
+ .storage.storage['minio-data/4'].attachments.units['minio/0'].life = 'alive'
+ .storage.storage['pgdata/0'].kind = 'filesystem'
+ .storage.storage['pgdata/0'].status.current = 'attached'
+ .storage.storage['pgdata/0'].status.message = 'Successfully provisioned volume pvc-ffd89206-1078-4875-92a4-f6432d40247b'
+ .storage.storage['pgdata/0'].persistent = False
+ .storage.storage['pgdata/0'].life = 'alive'
+ .storage.storage['pgdata/0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].size = 1024
+ .storage.filesystems['0'].provider_id = 'ffd89206-1078-4875-92a4-f6432d40247b'
+ .storage.filesystems['0'].volume = '0'
+ .storage.filesystems['0'].storage = 'pgdata/0'
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].mount_point = '/var/lib/postgresql/data'
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].read_only = False
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].pool = 'kubernetes'
+ .storage.filesystems['0'].life = 'alive'
+ .storage.filesystems['0'].status.current = 'attached'
+ .storage.filesystems['0'].status.message = 'Successfully provisioned volume pvc-ffd89206-1078-4875-92a4-f6432d40247b'
+ .storage.filesystems['1'].size = 1024
+ .storage.filesystems['1'].provider_id = '7e5ff3f1-669a-4468-bb94-b983e2653f2e'
+ .storage.filesystems['1'].volume = '1'
+ .storage.filesystems['1'].storage = 'configurations/1'
+ .storage.filesystems['1'].attachments.containers['traefik-admin/0'].mount_point = '/var/lib/juju/storage/configurations/0'
+ .storage.filesystems['1'].attachments.containers['traefik-admin/0'].read_only = False
+ .storage.filesystems['1'].attachments.containers['traefik-admin/0'].life = 'alive'
+ .storage.filesystems['1'].attachments.units['traefik-admin/0'].life = 'alive'
+ .storage.filesystems['1'].pool = 'kubernetes'
+ .storage.filesystems['1'].life = 'alive'
+ .storage.filesystems['1'].status.current = 'attached'
+ .storage.filesystems['1'].status.message = 'Successfully provisioned volume pvc-7e5ff3f1-669a-4468-bb94-b983e2653f2e'
+ .storage.filesystems['2'].size = 1024
+ .storage.filesystems['2'].provider_id = 'ef51600c-2a8f-4e17-9871-a2cef1111232'
+ .storage.filesystems['2'].volume = '2'
+ .storage.filesystems['2'].storage = 'configurations/2'
+ .storage.filesystems['2'].attachments.containers['traefik-public/0'].mount_point = '/var/lib/juju/storage/configurations/0'
+ .storage.filesystems['2'].attachments.containers['traefik-public/0'].read_only = False
+ .storage.filesystems['2'].attachments.containers['traefik-public/0'].life = 'alive'
+ .storage.filesystems['2'].attachments.units['traefik-public/0'].life = 'alive'
+ .storage.filesystems['2'].pool = 'kubernetes'
+ .storage.filesystems['2'].life = 'alive'
+ .storage.filesystems['2'].status.current = 'attached'
+ .storage.filesystems['2'].status.message = 'Successfully provisioned volume pvc-ef51600c-2a8f-4e17-9871-a2cef1111232'
+ .storage.filesystems['3'].size = 1024
+ .storage.filesystems['3'].provider_id = '3dd3240a-fc08-484d-bdfa-97347ed5d239'
+ .storage.filesystems['3'].volume = '3'
+ .storage.filesystems['3'].storage = 'database/3'
+ .storage.filesystems['3'].attachments.containers['redis-k8s/0'].mount_point = '/var/lib/redis'
+ .storage.filesystems['3'].attachments.containers['redis-k8s/0'].read_only = False
+ .storage.filesystems['3'].attachments.containers['redis-k8s/0'].life = 'alive'
+ .storage.filesystems['3'].attachments.units['redis-k8s/0'].life = 'alive'
+ .storage.filesystems['3'].pool = 'kubernetes'
+ .storage.filesystems['3'].life = 'alive'
+ .storage.filesystems['3'].status.current = 'attached'
+ .storage.filesystems['3'].status.message = 'Successfully provisioned volume pvc-3dd3240a-fc08-484d-bdfa-97347ed5d239'
+ .storage.filesystems['4'].size = 31
+ .storage.filesystems['4'].provider_id = '3b2acca8-fa18-4790-841a-bd5d148f2538'
+ .storage.filesystems['4'].volume = '4'
+ .storage.filesystems['4'].storage = 'minio-data/4'
+ .storage.filesystems['4'].attachments.containers['minio/0'].mount_point = '/data'
+ .storage.filesystems['4'].attachments.containers['minio/0'].read_only = False
+ .storage.filesystems['4'].attachments.containers['minio/0'].life = 'alive'
+ .storage.filesystems['4'].attachments.units['minio/0'].life = 'alive'
+ .storage.filesystems['4'].pool = 'kubernetes'
+ .storage.filesystems['4'].life = 'alive'
+ .storage.filesystems['4'].status.current = 'attached'
+ .storage.filesystems['4'].status.message = 'Successfully provisioned volume pvc-3b2acca8-fa18-4790-841a-bd5d148f2538'
+ .storage.volumes['0'].size = 1024
+ .storage.volumes['0'].persistent = True
+ .storage.volumes['0'].provider_id = 'pvc-ffd89206-1078-4875-92a4-f6432d40247b'
+ .storage.volumes['0'].storage = 'pgdata/0'
+ .storage.volumes['0'].attachments.containers['postgresql-k8s/0'].read_only = False
+ .storage.volumes['0'].attachments.containers['postgresql-k8s/0'].life = 'alive'
+ .storage.volumes['0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.volumes['0'].pool = 'kubernetes'
+ .storage.volumes['0'].life = 'alive'
+ .storage.volumes['0'].status.current = 'attached'
+ .storage.volumes['1'].size = 1024
+ .storage.volumes['1'].persistent = True
+ .storage.volumes['1'].provider_id = 'pvc-7e5ff3f1-669a-4468-bb94-b983e2653f2e'
+ .storage.volumes['1'].storage = 'configurations/1'
+ .storage.volumes['1'].attachments.containers['traefik-admin/0'].read_only = False
+ .storage.volumes['1'].attachments.containers['traefik-admin/0'].life = 'alive'
+ .storage.volumes['1'].attachments.units['traefik-admin/0'].life = 'alive'
+ .storage.volumes['1'].pool = 'kubernetes'
+ .storage.volumes['1'].life = 'alive'
+ .storage.volumes['1'].status.current = 'attached'
+ .storage.volumes['2'].size = 1024
+ .storage.volumes['2'].persistent = True
+ .storage.volumes['2'].provider_id = 'pvc-ef51600c-2a8f-4e17-9871-a2cef1111232'
+ .storage.volumes['2'].storage = 'configurations/2'
+ .storage.volumes['2'].attachments.containers['traefik-public/0'].read_only = False
+ .storage.volumes['2'].attachments.containers['traefik-public/0'].life = 'alive'
+ .storage.volumes['2'].attachments.units['traefik-public/0'].life = 'alive'
+ .storage.volumes['2'].pool = 'kubernetes'
+ .storage.volumes['2'].life = 'alive'
+ .storage.volumes['2'].status.current = 'attached'
+ .storage.volumes['3'].size = 1024
+ .storage.volumes['3'].persistent = True
+ .storage.volumes['3'].provider_id = 'pvc-3dd3240a-fc08-484d-bdfa-97347ed5d239'
+ .storage.volumes['3'].storage = 'database/3'
+ .storage.volumes['3'].attachments.containers['redis-k8s/0'].read_only = False
+ .storage.volumes['3'].attachments.containers['redis-k8s/0'].life = 'alive'
+ .storage.volumes['3'].attachments.units['redis-k8s/0'].life = 'alive'
+ .storage.volumes['3'].pool = 'kubernetes'
+ .storage.volumes['3'].life = 'alive'
+ .storage.volumes['3'].status.current = 'attached'
+ .storage.volumes['4'].size = 1694
+ .storage.volumes['4'].persistent = True
+ .storage.volumes['4'].provider_id = 'pvc-3b2acca8-fa18-4790-841a-bd5d148f2538'
+ .storage.volumes['4'].storage = 'minio-data/4'
+ .storage.volumes['4'].attachments.containers['minio/0'].read_only = False
+ .storage.volumes['4'].attachments.containers['minio/0'].life = 'alive'
+ .storage.volumes['4'].attachments.units['minio/0'].life = 'alive'
+ .storage.volumes['4'].pool = 'kubernetes'
+ .storage.volumes['4'].life = 'alive'
+ .storage.volumes['4'].status.current = 'attached'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['netbox-k8s'].app_status.current = 'active'
+ .apps['netbox-k8s'].app_status.current = 'maintenance'
+ .apps['netbox-k8s'].app_status.message = 'Preparing service for restart'
- .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.current = 'active'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.current = 'maintenance'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.message = 'Preparing service for restart'
- .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.message = 'running ingress-relation-created hook'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.message = 'running ingress-relation-changed hook'
- .apps['traefik-public'].app_status.current = 'active'
+ .apps['traefik-public'].app_status.current = 'maintenance'
+ .apps['traefik-public'].app_status.message = "updating ingress configuration for 'ingress:13'"
- .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'active'
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'maintenance'
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.message = "updating ingress configuration for 'ingress:13'"
- .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running ingress-relation-created hook'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running ingress-relation-changed hook for netbox-k8s/0'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['netbox-k8s'].app_status.current = 'maintenance'
- .apps['netbox-k8s'].app_status.message = 'Preparing service for restart'
+ .apps['netbox-k8s'].app_status.current = 'active'
- .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.current = 'maintenance'
- .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.message = 'Preparing service for restart'
- .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.current = 'executing'
- .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.message = 'running ingress-relation-changed hook'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.current = 'active'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.current = 'idle'
- .apps['traefik-public'].app_status.current = 'maintenance'
- .apps['traefik-public'].app_status.message = "updating ingress configuration for 'ingress:13'"
+ .apps['traefik-public'].app_status.current = 'active'
- .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'maintenance'
- .apps['traefik-public'].units['traefik-public/0'].workload_status.message = "updating ingress configuration for 'ingress:13'"
- .apps['traefik-public'].units['traefik-public/0'].juju_status.current = 'executing'
- .apps['traefik-public'].units['traefik-public/0'].juju_status.message = 'running ingress-relation-changed hook for netbox-k8s/0'
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'active'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.current = 'idle'
[32mINFO    [0m jubilant:_juju.py:237 cli: juju integrate --model testing netbox-k8s hydra
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
+ .model.name = 'testing'
+ .model.type = 'caas'
+ .model.controller = 'github-pr-4e773-k8s'
+ .model.cloud = 'k8s'
+ .model.version = '3.6.11'
+ .model.model_status.current = 'available'
+ .apps['hydra'].charm = 'hydra'
+ .apps['hydra'].charm_origin = 'charmhub'
+ .apps['hydra'].charm_name = 'hydra'
+ .apps['hydra'].charm_rev = 339
+ .apps['hydra'].exposed = False
+ .apps['hydra'].base.name = 'ubuntu'
+ .apps['hydra'].base.channel = '22.04'
+ .apps['hydra'].charm_channel = 'latest/edge'
+ .apps['hydra'].scale = 1
+ .apps['hydra'].provider_id = 'c9932940-d4fd-467c-a8bf-e08a916a8a37'
+ .apps['hydra'].address = '10.152.183.165'
+ .apps['hydra'].app_status.current = 'active'
+ .apps['hydra'].relations['admin-ingress'][0].related_app = 'traefik-admin'
+ .apps['hydra'].relations['admin-ingress'][0].interface = 'ingress'
+ .apps['hydra'].relations['admin-ingress'][0].scope = 'global'
+ .apps['hydra'].relations['hydra'][0].related_app = 'hydra'
+ .apps['hydra'].relations['hydra'][0].interface = 'hydra_peers'
+ .apps['hydra'].relations['hydra'][0].scope = 'global'
+ .apps['hydra'].relations['hydra-endpoint-info'][0].related_app = 'identity-platform-login-ui-operator'
+ .apps['hydra'].relations['hydra-endpoint-info'][0].interface = 'hydra_endpoints'
+ .apps['hydra'].relations['hydra-endpoint-info'][0].scope = 'global'
+ .apps['hydra'].relations['hydra-endpoint-info'][1].related_app = 'kratos'
+ .apps['hydra'].relations['hydra-endpoint-info'][1].interface = 'hydra_endpoints'
+ .apps['hydra'].relations['hydra-endpoint-info'][1].scope = 'global'
+ .apps['hydra'].relations['oauth'][0].related_app = 'netbox-k8s'
+ .apps['hydra'].relations['oauth'][0].interface = 'oauth'
+ .apps['hydra'].relations['oauth'][0].scope = 'global'
+ .apps['hydra'].relations['pg-database'][0].related_app = 'postgresql-k8s'
+ .apps['hydra'].relations['pg-database'][0].interface = 'postgresql_client'
+ .apps['hydra'].relations['pg-database'][0].scope = 'global'
+ .apps['hydra'].relations['public-ingress'][0].related_app = 'traefik-public'
+ .apps['hydra'].relations['public-ingress'][0].interface = 'ingress'
+ .apps['hydra'].relations['public-ingress'][0].scope = 'global'
+ .apps['hydra'].relations['ui-endpoint-info'][0].related_app = 'identity-platform-login-ui-operator'
+ .apps['hydra'].relations['ui-endpoint-info'][0].interface = 'login_ui_endpoints'
+ .apps['hydra'].relations['ui-endpoint-info'][0].scope = 'global'
+ .apps['hydra'].units['hydra/0'].workload_status.current = 'active'
+ .apps['hydra'].units['hydra/0'].juju_status.current = 'executing'
+ .apps['hydra'].units['hydra/0'].juju_status.message = 'running oauth-relation-created hook'
+ .apps['hydra'].units['hydra/0'].juju_status.version = '3.6.11'
+ .apps['hydra'].units['hydra/0'].leader = True
+ .apps['hydra'].units['hydra/0'].address = '10.1.0.60'
+ .apps['hydra'].units['hydra/0'].provider_id = 'hydra-0'
+ .apps['hydra'].version = 'v2.3.0'
+ .apps['hydra'].endpoint_bindings[''] = 'alpha'
+ .apps['hydra'].endpoint_bindings['admin-ingress'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['hydra'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['hydra-endpoint-info'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['internal-ingress'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['logging'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['oauth'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['pg-database'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['public-ingress'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['ui-endpoint-info'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].charm = 'identity-platform-login-ui-operator'
+ .apps['identity-platform-login-ui-operator'].charm_origin = 'charmhub'
+ .apps['identity-platform-login-ui-operator'].charm_name = 'identity-platform-login-ui-operator'
+ .apps['identity-platform-login-ui-operator'].charm_rev = 146
+ .apps['identity-platform-login-ui-operator'].exposed = False
+ .apps['identity-platform-login-ui-operator'].base.name = 'ubuntu'
+ .apps['identity-platform-login-ui-operator'].base.channel = '22.04'
+ .apps['identity-platform-login-ui-operator'].charm_channel = 'latest/edge'
+ .apps['identity-platform-login-ui-operator'].scale = 1
+ .apps['identity-platform-login-ui-operator'].provider_id = 'e8830dfd-5e57-40b8-b304-4fe45061ec76'
+ .apps['identity-platform-login-ui-operator'].address = '10.152.183.73'
+ .apps['identity-platform-login-ui-operator'].app_status.current = 'active'
+ .apps['identity-platform-login-ui-operator'].relations['hydra-endpoint-info'][0].related_app = 'hydra'
+ .apps['identity-platform-login-ui-operator'].relations['hydra-endpoint-info'][0].interface = 'hydra_endpoints'
+ .apps['identity-platform-login-ui-operator'].relations['hydra-endpoint-info'][0].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].relations['identity-platform-login-ui'][0].related_app = 'identity-platform-login-ui-operator'
+ .apps['identity-platform-login-ui-operator'].relations['identity-platform-login-ui'][0].interface = 'identity_platform_login_ui_peers'
+ .apps['identity-platform-login-ui-operator'].relations['identity-platform-login-ui'][0].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].relations['ingress'][0].related_app = 'traefik-public'
+ .apps['identity-platform-login-ui-operator'].relations['ingress'][0].interface = 'ingress'
+ .apps['identity-platform-login-ui-operator'].relations['ingress'][0].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].relations['kratos-info'][0].related_app = 'kratos'
+ .apps['identity-platform-login-ui-operator'].relations['kratos-info'][0].interface = 'kratos_info'
+ .apps['identity-platform-login-ui-operator'].relations['kratos-info'][0].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][0].related_app = 'hydra'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][0].interface = 'login_ui_endpoints'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][0].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][1].related_app = 'kratos'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][1].interface = 'login_ui_endpoints'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][1].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.current = 'active'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.current = 'idle'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.version = '3.6.11'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].leader = True
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].address = '10.1.0.179'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].provider_id = 'identity-platform-login-ui-operator-0'
+ .apps['identity-platform-login-ui-operator'].version = '0.23.0'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings[''] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['hydra-endpoint-info'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['identity-platform-login-ui'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['kratos-info'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['logging'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['ui-endpoint-info'] = 'alpha'
+ .apps['kratos'].charm = 'kratos'
+ .apps['kratos'].charm_origin = 'charmhub'
+ .apps['kratos'].charm_name = 'kratos'
+ .apps['kratos'].charm_rev = 500
+ .apps['kratos'].exposed = False
+ .apps['kratos'].base.name = 'ubuntu'
+ .apps['kratos'].base.channel = '22.04'
+ .apps['kratos'].charm_channel = 'latest/edge'
+ .apps['kratos'].scale = 1
+ .apps['kratos'].provider_id = '330d3311-c78e-40d5-98c9-659fdca0a410'
+ .apps['kratos'].address = '10.152.183.127'
+ .apps['kratos'].app_status.current = 'active'
+ .apps['kratos'].relations['admin-ingress'][0].related_app = 'traefik-admin'
+ .apps['kratos'].relations['admin-ingress'][0].interface = 'ingress'
+ .apps['kratos'].relations['admin-ingress'][0].scope = 'global'
+ .apps['kratos'].relations['hydra-endpoint-info'][0].related_app = 'hydra'
+ .apps['kratos'].relations['hydra-endpoint-info'][0].interface = 'hydra_endpoints'
+ .apps['kratos'].relations['hydra-endpoint-info'][0].scope = 'global'
+ .apps['kratos'].relations['kratos-info'][0].related_app = 'identity-platform-login-ui-operator'
+ .apps['kratos'].relations['kratos-info'][0].interface = 'kratos_info'
+ .apps['kratos'].relations['kratos-info'][0].scope = 'global'
+ .apps['kratos'].relations['kratos-peers'][0].related_app = 'kratos'
+ .apps['kratos'].relations['kratos-peers'][0].interface = 'kratos-peers'
+ .apps['kratos'].relations['kratos-peers'][0].scope = 'global'
+ .apps['kratos'].relations['pg-database'][0].related_app = 'postgresql-k8s'
+ .apps['kratos'].relations['pg-database'][0].interface = 'postgresql_client'
+ .apps['kratos'].relations['pg-database'][0].scope = 'global'
+ .apps['kratos'].relations['public-ingress'][0].related_app = 'traefik-public'
+ .apps['kratos'].relations['public-ingress'][0].interface = 'ingress'
+ .apps['kratos'].relations['public-ingress'][0].scope = 'global'
+ .apps['kratos'].relations['ui-endpoint-info'][0].related_app = 'identity-platform-login-ui-operator'
+ .apps['kratos'].relations['ui-endpoint-info'][0].interface = 'login_ui_endpoints'
+ .apps['kratos'].relations['ui-endpoint-info'][0].scope = 'global'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'active'
+ .apps['kratos'].units['kratos/0'].juju_status.current = 'idle'
+ .apps['kratos'].units['kratos/0'].juju_status.version = '3.6.11'
+ .apps['kratos'].units['kratos/0'].leader = True
+ .apps['kratos'].units['kratos/0'].address = '10.1.0.185'
+ .apps['kratos'].units['kratos/0'].provider_id = 'kratos-0'
+ .apps['kratos'].version = 'v1.3.1'
+ .apps['kratos'].endpoint_bindings[''] = 'alpha'
+ .apps['kratos'].endpoint_bindings['admin-ingress'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['hydra-endpoint-info'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['internal-ingress'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['kratos-external-idp'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['kratos-info'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['kratos-peers'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['logging'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['pg-database'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['public-ingress'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['smtp'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['ui-endpoint-info'] = 'alpha'
+ .apps['minio'].charm = 'minio'
+ .apps['minio'].charm_origin = 'charmhub'
+ .apps['minio'].charm_name = 'minio'
+ .apps['minio'].charm_rev = 583
+ .apps['minio'].exposed = False
+ .apps['minio'].base.name = 'ubuntu'
+ .apps['minio'].base.channel = '20.04'
+ .apps['minio'].charm_channel = 'ckf-1.10/stable'
+ .apps['minio'].scale = 1
+ .apps['minio'].provider_id = '07f2c2b4-c870-47c0-a621-140a62891ef1'
+ .apps['minio'].address = '10.152.183.147'
+ .apps['minio'].app_status.current = 'active'
+ .apps['minio'].units['minio/0'].workload_status.current = 'active'
+ .apps['minio'].units['minio/0'].juju_status.current = 'idle'
+ .apps['minio'].units['minio/0'].leader = True
+ .apps['minio'].units['minio/0'].open_ports[0] = '9000/TCP'
+ .apps['minio'].units['minio/0'].open_ports[1] = '9001/TCP'
+ .apps['minio'].units['minio/0'].address = '10.1.0.166'
+ .apps['minio'].units['minio/0'].provider_id = 'minio-0'
+ .apps['minio'].version = 'registry.jujucharms.com/charm/81j63o4a2ldarn1umc22iyjz1q9l9g0sx5b8j/oci-image@sha256:7f2474f60a02f11dc3294542a97092bd2392b91d526c7e7c70648c0b9d3b68ab'
+ .apps['minio'].endpoint_bindings[''] = 'alpha'
+ .apps['minio'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['minio'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['minio'].endpoint_bindings['object-storage'] = 'alpha'
+ .apps['netbox-k8s'].charm = 'local:netbox-k8s-0'
+ .apps['netbox-k8s'].charm_origin = 'local'
+ .apps['netbox-k8s'].charm_name = 'netbox-k8s'
+ .apps['netbox-k8s'].charm_rev = 0
+ .apps['netbox-k8s'].exposed = False
+ .apps['netbox-k8s'].base.name = 'ubuntu'
+ .apps['netbox-k8s'].base.channel = '24.04'
+ .apps['netbox-k8s'].scale = 1
+ .apps['netbox-k8s'].provider_id = 'b6a3bce4-9d0b-4425-8386-57b74bc8c746'
+ .apps['netbox-k8s'].address = '10.152.183.234'
+ .apps['netbox-k8s'].app_status.current = 'active'
+ .apps['netbox-k8s'].relations['ingress'][0].related_app = 'traefik-public'
+ .apps['netbox-k8s'].relations['ingress'][0].interface = 'ingress'
+ .apps['netbox-k8s'].relations['ingress'][0].scope = 'global'
+ .apps['netbox-k8s'].relations['oidc'][0].related_app = 'hydra'
+ .apps['netbox-k8s'].relations['oidc'][0].interface = 'oauth'
+ .apps['netbox-k8s'].relations['oidc'][0].scope = 'global'
+ .apps['netbox-k8s'].relations['postgresql'][0].related_app = 'postgresql-k8s'
+ .apps['netbox-k8s'].relations['postgresql'][0].interface = 'postgresql_client'
+ .apps['netbox-k8s'].relations['postgresql'][0].scope = 'global'
+ .apps['netbox-k8s'].relations['redis'][0].related_app = 'redis-k8s'
+ .apps['netbox-k8s'].relations['redis'][0].interface = 'redis'
+ .apps['netbox-k8s'].relations['redis'][0].scope = 'global'
+ .apps['netbox-k8s'].relations['s3'][0].related_app = 's3-integrator'
+ .apps['netbox-k8s'].relations['s3'][0].interface = 's3'
+ .apps['netbox-k8s'].relations['s3'][0].scope = 'global'
+ .apps['netbox-k8s'].relations['secret-storage'][0].related_app = 'netbox-k8s'
+ .apps['netbox-k8s'].relations['secret-storage'][0].interface = 'secret-storage'
+ .apps['netbox-k8s'].relations['secret-storage'][0].scope = 'global'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.current = 'active'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.current = 'executing'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.message = 'running oidc-relation-created hook'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.version = '3.6.11'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].leader = True
+ .apps['netbox-k8s'].units['netbox-k8s/0'].address = '10.1.0.109'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].provider_id = 'netbox-k8s-0'
+ .apps['netbox-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['oidc'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['postgresql'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['redis'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['s3'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['saml'] = 'alpha'
+ .apps['netbox-k8s'].endpoint_bindings['secret-storage'] = 'alpha'
+ .apps['postgresql-k8s'].charm = 'postgresql-k8s'
+ .apps['postgresql-k8s'].charm_origin = 'charmhub'
+ .apps['postgresql-k8s'].charm_name = 'postgresql-k8s'
+ .apps['postgresql-k8s'].charm_rev = 495
+ .apps['postgresql-k8s'].exposed = False
+ .apps['postgresql-k8s'].base.name = 'ubuntu'
+ .apps['postgresql-k8s'].base.channel = '22.04'
+ .apps['postgresql-k8s'].charm_channel = '14/stable'
+ .apps['postgresql-k8s'].scale = 1
+ .apps['postgresql-k8s'].provider_id = 'fdd775ef-8073-4c22-b82c-12c012e645ff'
+ .apps['postgresql-k8s'].address = '10.152.183.146'
+ .apps['postgresql-k8s'].app_status.current = 'active'
+ .apps['postgresql-k8s'].relations['database'][0].related_app = 'hydra'
+ .apps['postgresql-k8s'].relations['database'][0].interface = 'postgresql_client'
+ .apps['postgresql-k8s'].relations['database'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['database'][1].related_app = 'kratos'
+ .apps['postgresql-k8s'].relations['database'][1].interface = 'postgresql_client'
+ .apps['postgresql-k8s'].relations['database'][1].scope = 'global'
+ .apps['postgresql-k8s'].relations['database'][2].related_app = 'netbox-k8s'
+ .apps['postgresql-k8s'].relations['database'][2].interface = 'postgresql_client'
+ .apps['postgresql-k8s'].relations['database'][2].scope = 'global'
+ .apps['postgresql-k8s'].relations['database-peers'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['database-peers'][0].interface = 'postgresql_peers'
+ .apps['postgresql-k8s'].relations['database-peers'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['restart'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['restart'][0].interface = 'rolling_op'
+ .apps['postgresql-k8s'].relations['restart'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['upgrade'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['upgrade'][0].interface = 'upgrade'
+ .apps['postgresql-k8s'].relations['upgrade'][0].scope = 'global'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'active'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'Primary'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.version = '3.6.11'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].leader = True
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].address = '10.1.0.93'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].provider_id = 'postgresql-k8s-0'
+ .apps['postgresql-k8s'].version = '14.15'
+ .apps['postgresql-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['database'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['database-peers'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['db'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['db-admin'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['replication'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['replication-offer'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['restart'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['s3-parameters'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['upgrade'] = 'alpha'
+ .apps['redis-k8s'].charm = 'redis-k8s'
+ .apps['redis-k8s'].charm_origin = 'charmhub'
+ .apps['redis-k8s'].charm_name = 'redis-k8s'
+ .apps['redis-k8s'].charm_rev = 42
+ .apps['redis-k8s'].exposed = False
+ .apps['redis-k8s'].base.name = 'ubuntu'
+ .apps['redis-k8s'].base.channel = '22.04'
+ .apps['redis-k8s'].charm_channel = 'latest/edge'
+ .apps['redis-k8s'].scale = 1
+ .apps['redis-k8s'].provider_id = 'a0f6c953-9435-4323-b907-f5f72b580b40'
+ .apps['redis-k8s'].address = '10.152.183.158'
+ .apps['redis-k8s'].app_status.current = 'active'
+ .apps['redis-k8s'].relations['redis'][0].related_app = 'netbox-k8s'
+ .apps['redis-k8s'].relations['redis'][0].interface = 'redis'
+ .apps['redis-k8s'].relations['redis'][0].scope = 'global'
+ .apps['redis-k8s'].relations['redis-peers'][0].related_app = 'redis-k8s'
+ .apps['redis-k8s'].relations['redis-peers'][0].interface = 'redis-peers'
+ .apps['redis-k8s'].relations['redis-peers'][0].scope = 'global'
+ .apps['redis-k8s'].units['redis-k8s/0'].workload_status.current = 'active'
+ .apps['redis-k8s'].units['redis-k8s/0'].juju_status.current = 'idle'
+ .apps['redis-k8s'].units['redis-k8s/0'].juju_status.version = '3.6.11'
+ .apps['redis-k8s'].units['redis-k8s/0'].leader = True
+ .apps['redis-k8s'].units['redis-k8s/0'].address = '10.1.0.18'
+ .apps['redis-k8s'].units['redis-k8s/0'].provider_id = 'redis-k8s-0'
+ .apps['redis-k8s'].version = '7.2.5'
+ .apps['redis-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['redis-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['redis-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['redis-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['redis-k8s'].endpoint_bindings['redis'] = 'alpha'
+ .apps['redis-k8s'].endpoint_bindings['redis-peers'] = 'alpha'
+ .apps['s3-integrator'].charm = 's3-integrator'
+ .apps['s3-integrator'].charm_origin = 'charmhub'
+ .apps['s3-integrator'].charm_name = 's3-integrator'
+ .apps['s3-integrator'].charm_rev = 241
+ .apps['s3-integrator'].exposed = False
+ .apps['s3-integrator'].base.name = 'ubuntu'
+ .apps['s3-integrator'].base.channel = '22.04'
+ .apps['s3-integrator'].charm_channel = '1/edge'
+ .apps['s3-integrator'].scale = 1
+ .apps['s3-integrator'].provider_id = '6bc35fa8-698c-4015-8e3b-dc5ee72050de'
+ .apps['s3-integrator'].address = '10.152.183.62'
+ .apps['s3-integrator'].app_status.current = 'active'
+ .apps['s3-integrator'].relations['s3-credentials'][0].related_app = 'netbox-k8s'
+ .apps['s3-integrator'].relations['s3-credentials'][0].interface = 's3'
+ .apps['s3-integrator'].relations['s3-credentials'][0].scope = 'global'
+ .apps['s3-integrator'].relations['s3-integrator-peers'][0].related_app = 's3-integrator'
+ .apps['s3-integrator'].relations['s3-integrator-peers'][0].interface = 's3-integrator-peers'
+ .apps['s3-integrator'].relations['s3-integrator-peers'][0].scope = 'global'
+ .apps['s3-integrator'].units['s3-integrator/0'].workload_status.current = 'active'
+ .apps['s3-integrator'].units['s3-integrator/0'].juju_status.current = 'idle'
+ .apps['s3-integrator'].units['s3-integrator/0'].juju_status.version = '3.6.11'
+ .apps['s3-integrator'].units['s3-integrator/0'].leader = True
+ .apps['s3-integrator'].units['s3-integrator/0'].address = '10.1.0.189'
+ .apps['s3-integrator'].units['s3-integrator/0'].provider_id = 's3-integrator-0'
+ .apps['s3-integrator'].endpoint_bindings[''] = 'alpha'
+ .apps['s3-integrator'].endpoint_bindings['s3-credentials'] = 'alpha'
+ .apps['s3-integrator'].endpoint_bindings['s3-integrator-peers'] = 'alpha'
+ .apps['self-signed-certificates'].charm = 'self-signed-certificates'
+ .apps['self-signed-certificates'].charm_origin = 'charmhub'
+ .apps['self-signed-certificates'].charm_name = 'self-signed-certificates'
+ .apps['self-signed-certificates'].charm_rev = 155
+ .apps['self-signed-certificates'].exposed = False
+ .apps['self-signed-certificates'].base.name = 'ubuntu'
+ .apps['self-signed-certificates'].base.channel = '22.04'
+ .apps['self-signed-certificates'].charm_channel = 'latest/stable'
+ .apps['self-signed-certificates'].scale = 1
+ .apps['self-signed-certificates'].provider_id = 'de6fa780-bd65-4444-9cf1-01356d85b9dd'
+ .apps['self-signed-certificates'].address = '10.152.183.49'
+ .apps['self-signed-certificates'].app_status.current = 'active'
+ .apps['self-signed-certificates'].relations['certificates'][0].related_app = 'traefik-admin'
+ .apps['self-signed-certificates'].relations['certificates'][0].interface = 'tls-certificates'
+ .apps['self-signed-certificates'].relations['certificates'][0].scope = 'global'
+ .apps['self-signed-certificates'].relations['certificates'][1].related_app = 'traefik-public'
+ .apps['self-signed-certificates'].relations['certificates'][1].interface = 'tls-certificates'
+ .apps['self-signed-certificates'].relations['certificates'][1].scope = 'global'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].workload_status.current = 'active'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.current = 'idle'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.version = '3.6.11'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].leader = True
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].address = '10.1.0.208'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].provider_id = 'self-signed-certificates-0'
+ .apps['self-signed-certificates'].endpoint_bindings[''] = 'alpha'
+ .apps['self-signed-certificates'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['self-signed-certificates'].endpoint_bindings['send-ca-cert'] = 'alpha'
+ .apps['self-signed-certificates'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['traefik-admin'].charm = 'traefik-k8s'
+ .apps['traefik-admin'].charm_origin = 'charmhub'
+ .apps['traefik-admin'].charm_name = 'traefik-k8s'
+ .apps['traefik-admin'].charm_rev = 176
+ .apps['traefik-admin'].exposed = False
+ .apps['traefik-admin'].base.name = 'ubuntu'
+ .apps['traefik-admin'].base.channel = '20.04'
+ .apps['traefik-admin'].charm_channel = 'latest/stable'
+ .apps['traefik-admin'].scale = 1
+ .apps['traefik-admin'].provider_id = '58738bb5-00ae-4843-ac1d-d35b2b83bbc4'
+ .apps['traefik-admin'].address = '10.151.33.101'
+ .apps['traefik-admin'].app_status.current = 'active'
+ .apps['traefik-admin'].relations['certificates'][0].related_app = 'self-signed-certificates'
+ .apps['traefik-admin'].relations['certificates'][0].interface = 'tls-certificates'
+ .apps['traefik-admin'].relations['certificates'][0].scope = 'global'
+ .apps['traefik-admin'].relations['ingress'][0].related_app = 'hydra'
+ .apps['traefik-admin'].relations['ingress'][0].interface = 'ingress'
+ .apps['traefik-admin'].relations['ingress'][0].scope = 'global'
+ .apps['traefik-admin'].relations['ingress'][1].related_app = 'kratos'
+ .apps['traefik-admin'].relations['ingress'][1].interface = 'ingress'
+ .apps['traefik-admin'].relations['ingress'][1].scope = 'global'
+ .apps['traefik-admin'].relations['peers'][0].related_app = 'traefik-admin'
+ .apps['traefik-admin'].relations['peers'][0].interface = 'traefik_peers'
+ .apps['traefik-admin'].relations['peers'][0].scope = 'global'
+ .apps['traefik-admin'].units['traefik-admin/0'].workload_status.current = 'active'
+ .apps['traefik-admin'].units['traefik-admin/0'].juju_status.current = 'idle'
+ .apps['traefik-admin'].units['traefik-admin/0'].juju_status.version = '3.6.11'
+ .apps['traefik-admin'].units['traefik-admin/0'].leader = True
+ .apps['traefik-admin'].units['traefik-admin/0'].address = '10.1.0.245'
+ .apps['traefik-admin'].units['traefik-admin/0'].provider_id = 'traefik-admin-0'
+ .apps['traefik-admin'].version = 'v2.11.0'
+ .apps['traefik-admin'].endpoint_bindings[''] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['experimental-forward-auth'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['ingress-per-unit'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['logging'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['peers'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['traefik-route'] = 'alpha'
+ .apps['traefik-public'].charm = 'traefik-k8s'
+ .apps['traefik-public'].charm_origin = 'charmhub'
+ .apps['traefik-public'].charm_name = 'traefik-k8s'
+ .apps['traefik-public'].charm_rev = 176
+ .apps['traefik-public'].exposed = False
+ .apps['traefik-public'].base.name = 'ubuntu'
+ .apps['traefik-public'].base.channel = '20.04'
+ .apps['traefik-public'].charm_channel = 'latest/stable'
+ .apps['traefik-public'].scale = 1
+ .apps['traefik-public'].provider_id = '386420e4-d882-482d-8eff-6b485fdd6a4d'
+ .apps['traefik-public'].address = '10.151.33.100'
+ .apps['traefik-public'].app_status.current = 'active'
+ .apps['traefik-public'].relations['certificates'][0].related_app = 'self-signed-certificates'
+ .apps['traefik-public'].relations['certificates'][0].interface = 'tls-certificates'
+ .apps['traefik-public'].relations['certificates'][0].scope = 'global'
+ .apps['traefik-public'].relations['ingress'][0].related_app = 'hydra'
+ .apps['traefik-public'].relations['ingress'][0].interface = 'ingress'
+ .apps['traefik-public'].relations['ingress'][0].scope = 'global'
+ .apps['traefik-public'].relations['ingress'][1].related_app = 'identity-platform-login-ui-operator'
+ .apps['traefik-public'].relations['ingress'][1].interface = 'ingress'
+ .apps['traefik-public'].relations['ingress'][1].scope = 'global'
+ .apps['traefik-public'].relations['ingress'][2].related_app = 'kratos'
+ .apps['traefik-public'].relations['ingress'][2].interface = 'ingress'
+ .apps['traefik-public'].relations['ingress'][2].scope = 'global'
+ .apps['traefik-public'].relations['ingress'][3].related_app = 'netbox-k8s'
+ .apps['traefik-public'].relations['ingress'][3].interface = 'ingress'
+ .apps['traefik-public'].relations['ingress'][3].scope = 'global'
+ .apps['traefik-public'].relations['peers'][0].related_app = 'traefik-public'
+ .apps['traefik-public'].relations['peers'][0].interface = 'traefik_peers'
+ .apps['traefik-public'].relations['peers'][0].scope = 'global'
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'active'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.current = 'idle'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.version = '3.6.11'
+ .apps['traefik-public'].units['traefik-public/0'].leader = True
+ .apps['traefik-public'].units['traefik-public/0'].address = '10.1.0.210'
+ .apps['traefik-public'].units['traefik-public/0'].provider_id = 'traefik-public-0'
+ .apps['traefik-public'].version = 'v2.11.0'
+ .apps['traefik-public'].endpoint_bindings[''] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['experimental-forward-auth'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['ingress-per-unit'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['logging'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['peers'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['traefik-route'] = 'alpha'
+ .storage.storage['configurations/1'].kind = 'filesystem'
+ .storage.storage['configurations/1'].status.current = 'attached'
+ .storage.storage['configurations/1'].status.message = 'Successfully provisioned volume pvc-7e5ff3f1-669a-4468-bb94-b983e2653f2e'
+ .storage.storage['configurations/1'].persistent = False
+ .storage.storage['configurations/1'].life = 'alive'
+ .storage.storage['configurations/1'].attachments.units['traefik-admin/0'].life = 'alive'
+ .storage.storage['configurations/2'].kind = 'filesystem'
+ .storage.storage['configurations/2'].status.current = 'attached'
+ .storage.storage['configurations/2'].status.message = 'Successfully provisioned volume pvc-ef51600c-2a8f-4e17-9871-a2cef1111232'
+ .storage.storage['configurations/2'].persistent = False
+ .storage.storage['configurations/2'].life = 'alive'
+ .storage.storage['configurations/2'].attachments.units['traefik-public/0'].life = 'alive'
+ .storage.storage['database/3'].kind = 'filesystem'
+ .storage.storage['database/3'].status.current = 'attached'
+ .storage.storage['database/3'].status.message = 'Successfully provisioned volume pvc-3dd3240a-fc08-484d-bdfa-97347ed5d239'
+ .storage.storage['database/3'].persistent = False
+ .storage.storage['database/3'].life = 'alive'
+ .storage.storage['database/3'].attachments.units['redis-k8s/0'].life = 'alive'
+ .storage.storage['minio-data/4'].kind = 'filesystem'
+ .storage.storage['minio-data/4'].status.current = 'attached'
+ .storage.storage['minio-data/4'].status.message = 'Successfully provisioned volume pvc-3b2acca8-fa18-4790-841a-bd5d148f2538'
+ .storage.storage['minio-data/4'].persistent = False
+ .storage.storage['minio-data/4'].life = 'alive'
+ .storage.storage['minio-data/4'].attachments.units['minio/0'].life = 'alive'
+ .storage.storage['pgdata/0'].kind = 'filesystem'
+ .storage.storage['pgdata/0'].status.current = 'attached'
+ .storage.storage['pgdata/0'].status.message = 'Successfully provisioned volume pvc-ffd89206-1078-4875-92a4-f6432d40247b'
+ .storage.storage['pgdata/0'].persistent = False
+ .storage.storage['pgdata/0'].life = 'alive'
+ .storage.storage['pgdata/0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].size = 1024
+ .storage.filesystems['0'].provider_id = 'ffd89206-1078-4875-92a4-f6432d40247b'
+ .storage.filesystems['0'].volume = '0'
+ .storage.filesystems['0'].storage = 'pgdata/0'
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].mount_point = '/var/lib/postgresql/data'
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].read_only = False
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].pool = 'kubernetes'
+ .storage.filesystems['0'].life = 'alive'
+ .storage.filesystems['0'].status.current = 'attached'
+ .storage.filesystems['0'].status.message = 'Successfully provisioned volume pvc-ffd89206-1078-4875-92a4-f6432d40247b'
+ .storage.filesystems['1'].size = 1024
+ .storage.filesystems['1'].provider_id = '7e5ff3f1-669a-4468-bb94-b983e2653f2e'
+ .storage.filesystems['1'].volume = '1'
+ .storage.filesystems['1'].storage = 'configurations/1'
+ .storage.filesystems['1'].attachments.containers['traefik-admin/0'].mount_point = '/var/lib/juju/storage/configurations/0'
+ .storage.filesystems['1'].attachments.containers['traefik-admin/0'].read_only = False
+ .storage.filesystems['1'].attachments.containers['traefik-admin/0'].life = 'alive'
+ .storage.filesystems['1'].attachments.units['traefik-admin/0'].life = 'alive'
+ .storage.filesystems['1'].pool = 'kubernetes'
+ .storage.filesystems['1'].life = 'alive'
+ .storage.filesystems['1'].status.current = 'attached'
+ .storage.filesystems['1'].status.message = 'Successfully provisioned volume pvc-7e5ff3f1-669a-4468-bb94-b983e2653f2e'
+ .storage.filesystems['2'].size = 1024
+ .storage.filesystems['2'].provider_id = 'ef51600c-2a8f-4e17-9871-a2cef1111232'
+ .storage.filesystems['2'].volume = '2'
+ .storage.filesystems['2'].storage = 'configurations/2'
+ .storage.filesystems['2'].attachments.containers['traefik-public/0'].mount_point = '/var/lib/juju/storage/configurations/0'
+ .storage.filesystems['2'].attachments.containers['traefik-public/0'].read_only = False
+ .storage.filesystems['2'].attachments.containers['traefik-public/0'].life = 'alive'
+ .storage.filesystems['2'].attachments.units['traefik-public/0'].life = 'alive'
+ .storage.filesystems['2'].pool = 'kubernetes'
+ .storage.filesystems['2'].life = 'alive'
+ .storage.filesystems['2'].status.current = 'attached'
+ .storage.filesystems['2'].status.message = 'Successfully provisioned volume pvc-ef51600c-2a8f-4e17-9871-a2cef1111232'
+ .storage.filesystems['3'].size = 1024
+ .storage.filesystems['3'].provider_id = '3dd3240a-fc08-484d-bdfa-97347ed5d239'
+ .storage.filesystems['3'].volume = '3'
+ .storage.filesystems['3'].storage = 'database/3'
+ .storage.filesystems['3'].attachments.containers['redis-k8s/0'].mount_point = '/var/lib/redis'
+ .storage.filesystems['3'].attachments.containers['redis-k8s/0'].read_only = False
+ .storage.filesystems['3'].attachments.containers['redis-k8s/0'].life = 'alive'
+ .storage.filesystems['3'].attachments.units['redis-k8s/0'].life = 'alive'
+ .storage.filesystems['3'].pool = 'kubernetes'
+ .storage.filesystems['3'].life = 'alive'
+ .storage.filesystems['3'].status.current = 'attached'
+ .storage.filesystems['3'].status.message = 'Successfully provisioned volume pvc-3dd3240a-fc08-484d-bdfa-97347ed5d239'
+ .storage.filesystems['4'].size = 31
+ .storage.filesystems['4'].provider_id = '3b2acca8-fa18-4790-841a-bd5d148f2538'
+ .storage.filesystems['4'].volume = '4'
+ .storage.filesystems['4'].storage = 'minio-data/4'
+ .storage.filesystems['4'].attachments.containers['minio/0'].mount_point = '/data'
+ .storage.filesystems['4'].attachments.containers['minio/0'].read_only = False
+ .storage.filesystems['4'].attachments.containers['minio/0'].life = 'alive'
+ .storage.filesystems['4'].attachments.units['minio/0'].life = 'alive'
+ .storage.filesystems['4'].pool = 'kubernetes'
+ .storage.filesystems['4'].life = 'alive'
+ .storage.filesystems['4'].status.current = 'attached'
+ .storage.filesystems['4'].status.message = 'Successfully provisioned volume pvc-3b2acca8-fa18-4790-841a-bd5d148f2538'
+ .storage.volumes['0'].size = 1024
+ .storage.volumes['0'].persistent = True
+ .storage.volumes['0'].provider_id = 'pvc-ffd89206-1078-4875-92a4-f6432d40247b'
+ .storage.volumes['0'].storage = 'pgdata/0'
+ .storage.volumes['0'].attachments.containers['postgresql-k8s/0'].read_only = False
+ .storage.volumes['0'].attachments.containers['postgresql-k8s/0'].life = 'alive'
+ .storage.volumes['0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.volumes['0'].pool = 'kubernetes'
+ .storage.volumes['0'].life = 'alive'
+ .storage.volumes['0'].status.current = 'attached'
+ .storage.volumes['1'].size = 1024
+ .storage.volumes['1'].persistent = True
+ .storage.volumes['1'].provider_id = 'pvc-7e5ff3f1-669a-4468-bb94-b983e2653f2e'
+ .storage.volumes['1'].storage = 'configurations/1'
+ .storage.volumes['1'].attachments.containers['traefik-admin/0'].read_only = False
+ .storage.volumes['1'].attachments.containers['traefik-admin/0'].life = 'alive'
+ .storage.volumes['1'].attachments.units['traefik-admin/0'].life = 'alive'
+ .storage.volumes['1'].pool = 'kubernetes'
+ .storage.volumes['1'].life = 'alive'
+ .storage.volumes['1'].status.current = 'attached'
+ .storage.volumes['2'].size = 1024
+ .storage.volumes['2'].persistent = True
+ .storage.volumes['2'].provider_id = 'pvc-ef51600c-2a8f-4e17-9871-a2cef1111232'
+ .storage.volumes['2'].storage = 'configurations/2'
+ .storage.volumes['2'].attachments.containers['traefik-public/0'].read_only = False
+ .storage.volumes['2'].attachments.containers['traefik-public/0'].life = 'alive'
+ .storage.volumes['2'].attachments.units['traefik-public/0'].life = 'alive'
+ .storage.volumes['2'].pool = 'kubernetes'
+ .storage.volumes['2'].life = 'alive'
+ .storage.volumes['2'].status.current = 'attached'
+ .storage.volumes['3'].size = 1024
+ .storage.volumes['3'].persistent = True
+ .storage.volumes['3'].provider_id = 'pvc-3dd3240a-fc08-484d-bdfa-97347ed5d239'
+ .storage.volumes['3'].storage = 'database/3'
+ .storage.volumes['3'].attachments.containers['redis-k8s/0'].read_only = False
+ .storage.volumes['3'].attachments.containers['redis-k8s/0'].life = 'alive'
+ .storage.volumes['3'].attachments.units['redis-k8s/0'].life = 'alive'
+ .storage.volumes['3'].pool = 'kubernetes'
+ .storage.volumes['3'].life = 'alive'
+ .storage.volumes['3'].status.current = 'attached'
+ .storage.volumes['4'].size = 1694
+ .storage.volumes['4'].persistent = True
+ .storage.volumes['4'].provider_id = 'pvc-3b2acca8-fa18-4790-841a-bd5d148f2538'
+ .storage.volumes['4'].storage = 'minio-data/4'
+ .storage.volumes['4'].attachments.containers['minio/0'].read_only = False
+ .storage.volumes['4'].attachments.containers['minio/0'].life = 'alive'
+ .storage.volumes['4'].attachments.units['minio/0'].life = 'alive'
+ .storage.volumes['4'].pool = 'kubernetes'
+ .storage.volumes['4'].life = 'alive'
+ .storage.volumes['4'].status.current = 'attached'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['hydra'].units['hydra/0'].juju_status.current = 'executing'
- .apps['hydra'].units['hydra/0'].juju_status.message = 'running oauth-relation-created hook'
+ .apps['hydra'].units['hydra/0'].juju_status.current = 'idle'
- .apps['netbox-k8s'].app_status.current = 'active'
+ .apps['netbox-k8s'].app_status.current = 'maintenance'
+ .apps['netbox-k8s'].app_status.message = 'Preparing service for restart'
- .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.current = 'active'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.current = 'maintenance'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.message = 'Preparing service for restart'
- .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.message = 'running oidc-relation-created hook'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.message = 'running oidc-relation-changed hook for hydra/0'
[32mINFO    [0m jubilant.wait:_juju.py:982 wait: status changed:
- .apps['netbox-k8s'].app_status.current = 'maintenance'
- .apps['netbox-k8s'].app_status.message = 'Preparing service for restart'
+ .apps['netbox-k8s'].app_status.current = 'active'
- .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.current = 'maintenance'
- .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.message = 'Preparing service for restart'
- .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.current = 'executing'
- .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.message = 'running oidc-relation-changed hook for hydra/0'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].workload_status.current = 'active'
+ .apps['netbox-k8s'].units['netbox-k8s/0'].juju_status.current = 'idle'
[32mINFO    [0m jubilant:_juju.py:237 cli: juju run --model testing --format json kratos/0 get-identity --params /home/ubuntu/snap/juju/common/tmp3sdjewru
[32mINFO    [0m tests.integration.test_oauth:test_oauth.py:106 Error checking admin identity: task error: Task 4: status 'failed', return code 0, details:
Message: Couldn't retrieve identity_id from email.
Log:
2025-10-23 11:31:35 +0000 UTC Fetching the identity.
[32mINFO    [0m jubilant:_juju.py:237 cli: juju run --model testing --format json kratos/0 create-admin-account --params /home/ubuntu/snap/juju/common/tmpcf8qgfn_
[32mINFO    [0m jubilant:_juju.py:237 cli: juju add-secret --model testing secret_password --file /home/ubuntu/snap/juju/common/tmp2irrwday
[32mINFO    [0m jubilant:_juju.py:237 cli: juju grant-secret --model testing secret:d3t1467mp25c782l3i6g kratos
[32mINFO    [0m jubilant:_juju.py:237 cli: juju run --model testing --format json kratos/0 reset-password --params /home/ubuntu/snap/juju/common/tmpp6ape3_y
[32mINFO    [0m tests.integration.test_oauth:test_oauth.py:86 results reset-password {'created-at': '2025-10-23T11:31:35.970028Z', 'credentials': {'password': {'created-at': '0001-01-01T00:00:00Z', 'identifiers': "['admin', 'test@example.com']", 'type': 'password', 'updated-at': '0001-01-01T00:00:00Z', 'version': '0'}, 'webauthn': {'created-at': '2025-10-23T11:31:35.973622Z', 'identifiers': "['test@example.com']", 'type': 'webauthn', 'updated-at': '2025-10-23T11:31:35.973622Z', 'version': '1'}}, 'id': 'ac1eea1a-eda5-4c8d-80cb-22cdd33f6175', 'metadata-public': 'None', 'organization-id': 'None', 'recovery-addresses': "[{'id': 'c8ad0330-aa00-456a-837e-0bff76fb1ce8', 'value': 'test@example.com', 'via': 'email', 'created_at': '2025-10-23T11:31:35.97205Z', 'updated_at': '2025-10-23T11:31:35.97205Z'}]", 'schema-id': 'admin_v0', 'schema-url': 'https://10.151.33.100/testing-kratos/schemas/YWRtaW5fdjA', 'state': 'active', 'state-changed-at': '2025-10-23T11:31:35.968564Z', 'traits': {'email': 'test@example.com', 'username': 'admin'}, 'updated-at': '2025-10-23T11:31:35.970028Z', 'verifiable-addresses': "[{'id': 'a3eeb4a6-9922-42dd-95e7-3aabdaa6bddd', 'value': 'test@example.com', 'verified': False, 'via': 'email', 'status': 'pending', 'created_at': '2025-10-23T11:31:35.971165Z', 'updated_at': '2025-10-23T11:31:35.971165Z'}]"}
[32mINFO    [0m jubilant:_juju.py:237 cli: juju run --model testing --format json traefik-public/0 show-proxied-endpoints
[32mINFO    [0m tests.integration.test_oauth:test_oauth.py:91 result show-proxied {'hydra': {'url': 'https://10.151.33.100/testing-hydra'}, 'kratos': {'url': 'https://10.151.33.100/testing-kratos'}, 'identity-platform-login-ui-operator': {'url': 'https://10.151.33.100/testing-identity-platform-login-ui-operator'}, 'netbox-k8s': {'url': 'https://10.151.33.100/testing-netbox-k8s'}}
[32mINFO    [0m jubilant:_juju.py:237 cli: juju status --model testing --format json
[32mINFO    [0m jubilant:_juju.py:237 cli: juju remove-application --model testing --no-prompt hydra --destroy-storage --force
[32mINFO    [0m jubilant:_juju.py:237 cli: juju remove-application --model testing --no-prompt identity-platform-login-ui-operator --destroy-storage --force
[32mINFO    [0m jubilant:_juju.py:237 cli: juju remove-application --model testing --no-prompt kratos --destroy-storage --force
[32mINFO    [0m jubilant:_juju.py:237 cli: juju remove-application --model testing --no-prompt minio --destroy-storage --force
[32mINFO    [0m jubilant:_juju.py:237 cli: juju remove-application --model testing --no-prompt netbox-k8s --destroy-storage --force
[32mINFO    [0m jubilant:_juju.py:237 cli: juju remove-application --model testing --no-prompt postgresql-k8s --destroy-storage --force
[32mINFO    [0m jubilant:_juju.py:237 cli: juju remove-application --model testing --no-prompt redis-k8s --destroy-storage --force
[32mINFO    [0m jubilant:_juju.py:237 cli: juju remove-application --model testing --no-prompt s3-integrator --destroy-storage --force
[32mINFO    [0m jubilant:_juju.py:237 cli: juju remove-application --model testing --no-prompt self-signed-certificates --destroy-storage --force
[32mINFO    [0m jubilant:_juju.py:237 cli: juju remove-application --model testing --no-prompt traefik-admin --destroy-storage --force
[32mINFO    [0m jubilant:_juju.py:237 cli: juju remove-application --model testing --no-prompt traefik-public --destroy-storage --force