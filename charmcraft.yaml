name: netbox
summary: NetBox.
description: |
  NetBox is the go-to solution for modeling and documenting network
  infrastructure for thousands of organizations worldwide. As a successor
  to legacy IPAM and DCIM applications, NetBox provides a cohesive,
  extensive, and accessible data model for all things networked.
parts:
  charm:
    plugin: charm
    source: .
    build-snaps:
    - rustup
    override-build: |-
      rustup default stable
      craftctl default
type: charm
charm-libs:
- lib: traefik-k8s.ingress
  version: '2'
- lib: observability-libs.juju_topology
  version: '0'
- lib: grafana-k8s.grafana_dashboard
  version: '0'
- lib: loki-k8s.loki_push_api
  version: '1'
- lib: data-platform-libs.data_interfaces
  version: '0'
- lib: prometheus-k8s.prometheus_scrape
  version: '0'
- lib: redis-k8s.redis
  version: '0'
- lib: data-platform-libs.s3
  version: '0'
- lib: saml-integrator.saml
  version: '0'
- lib: tempo-coordinator-k8s.tracing
  version: '0'
- lib: smtp-integrator.smtp
  version: '0'
- lib: openfga-k8s.openfga
  version: '1'
actions:
  rotate-secret-key:
    description: Rotate the secret key. Users will be forced to log in again. This
      might be useful if a security breach occurs.
  create-superuser:
    description: Create a new Django superuser account.
    params:
      username:
        type: string
      email:
        type: string
    required:
    - username
    - email
assumes:
- k8s-api
containers:
  django-app:
    resource: django-app-image
peers:
  secret-storage:
    interface: secret-storage
provides:
  metrics-endpoint:
    interface: prometheus_scrape
  grafana-dashboard:
    interface: grafana_dashboard
requires:
  postgresql:
    interface: postgresql_client
    limit: 1
  s3:
    interface: s3
    limit: 1
  redis:
    interface: redis
    limit: 1
  saml:
    interface: saml
    limit: 1
    optional: true
  logging:
    interface: loki_push_api
  ingress:
    interface: ingress
    limit: 1
resources:
  django-app-image:
    type: oci-image
    description: django application image.
links:
  documentation: https://discourse.charmhub.io/t/netbox-documentation-overview/13564
  issues: https://github.com/canonical/netbox/issues
  source: https://github.com/canonical/netbox
  website:
  - https://github.com/canonical/netbox
config:
  options:
    saml-sp-entity-id:
      description: SAML SP entity id.
      type: string
    saml-username:
      description: |-
        SAML attribute used for both the social uid and the username.
        NameID can be used setting this config to 'name.
      type: string
      default: name
    saml-email:
      description: SAML attribute used for the email.
      type: string
    webserver-keepalive:
      type: int
      description: Time in seconds for webserver to wait for requests on a Keep-Alive
        connection.
    webserver-threads:
      type: int
      description: Run each webserver worker with the specified number of threads.
    webserver-timeout:
      type: int
      description: Time in seconds to kill and restart silent webserver workers.
    webserver-workers:
      type: int
      description: The number of webserver worker processes for handling requests.
    webserver-worker-class:
      type: string
      description: The webserver worker process class for handling requests. Can be
        either 'gevent' or 'sync'.
    django-debug:
      type: boolean
      default: false
      description: Whether Django debug mode is enabled.
    django-secret-key:
      type: string
      description: The secret key used for securely signing the session cookie and
        for any other security related needs by your Django application. This configuration
        will set the DJANGO_SECRET_KEY environment variable.
    django-secret-key-id:
      type: secret
      description: 'This configuration is similar to `django-secret-key`, but instead
        accepts a Juju user secret ID. The secret should contain a single key, "value",
        which maps to the actual Django secret key. To create the secret, run the
        following command: `juju add-secret my-django-secret-key value=<secret-string>
        && juju grant-secret my-django-secret-key django-k8s`, and use the output
        secret ID to configure this option.'
    django-allowed-hosts:
      type: string
      description: A comma-separated list of host/domain names that this Django site
        can serve. This configuration will set the DJANGO_ALLOWED_HOSTS environment
        variable with its content being a JSON encoded list.
bases:
- build-on:
  - name: ubuntu
    channel: '22.04'
  run-on:
  - name: ubuntu
    channel: '22.04'
                                  